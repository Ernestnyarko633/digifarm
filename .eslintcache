<<<<<<< HEAD
[{"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/assets/data/mapdata.js":"1","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Button/ArrowButton.js":"2","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Button/index.js":"3","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Cards/ActionCard.js":"4","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Cards/BankDetails.js":"5","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Cards/BuyerCard.js":"6","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Cards/CropCard.js":"7","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Cards/CropCategorySelection.js":"8","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Cards/CropSelectionCard.js":"9","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Cards/Document/DocumentCard.js":"10","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Cards/Document/DocumentPreview.js":"11","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Cards/DocumentCard.js":"12","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Cards/EventsCard.js":"13","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Cards/FarmBoardCard.js":"14","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Cards/FarmCard.js":"15","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Cards/FarmInfo.js":"16","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Cards/GetStartedNowCard.js":"17","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Cards/OrdersCard.js":"18","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Cards/PayOption.js":"19","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Cards/WarehouseCard.js":"20","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/DynamicProfile/AccountSettings.js":"21","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/DynamicProfile/Notifications.js":"22","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/DynamicProfile/PrivacyAndData.js":"23","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/DynamicProfile/Profile.js":"24","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/DynamicProfile/Security.js":"25","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/DynamicProfile/index.js":"26","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/EmptyStates/FarmsEmptyState.js":"27","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/EmptyStates/HomeEmptyState.js":"28","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/FetchCard/index.js":"29","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Form/BasePhone.js":"30","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Form/BaseSelect.js":"31","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Form/FormRadio.js":"32","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Form/ImageUpload.js":"33","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Form/ListSelect.js":"34","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Form/Step.js":"35","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Form/ThirdPartyInput.js":"36","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Form/index.js":"37","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Form/upload.js":"38","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Modals/ConfirmReceiptDelete.js":"39","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Modals/ConfirmSale.js":"40","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Modals/FarmReceiptModal.js":"41","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Modals/LearnMoreModal.js":"42","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Modals/ModalWrapper.js":"43","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Modals/UploadDocument.js":"44","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Notifications/index.js":"45","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/StartFarmProcess/CropSelection/AboutFarm.js":"46","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/StartFarmProcess/CropSelection/FarmDetails.js":"47","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/StartFarmProcess/CropSelection/SelectCrop.js":"48","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/StartFarmProcess/CropSelection/index.js":"49","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/StartFarmProcess/OtherSteps/AboutFarmManager.js":"50","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/StartFarmProcess/OtherSteps/ChooseAcreage.js":"51","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/StartFarmProcess/OtherSteps/Confirmation.js":"52","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/StartFarmProcess/OtherSteps/Contract.js":"53","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/StartFarmProcess/OtherSteps/InviteLink.js":"54","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/StartFarmProcess/OtherSteps/Map.js":"55","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/StartFarmProcess/OtherSteps/PaymentOption.js":"56","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/StartFarmProcess/OtherSteps/index.js":"57","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Tabs/Tab.js":"58","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Tabs/Tabs.js":"59","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Utils/Cooperatives.js":"60","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Utils/Events.js":"61","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Utils/FarmBoardGreetings.js":"62","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Utils/Greetings.js":"63","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/index.js":"64","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/container/App.js":"65","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/container/Header.js":"66","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/container/Layout.js":"67","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/container/Sidebar.js":"68","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/context/ComponentContext.js":"69","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/context/paymentContext.js":"70","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/helpers/misc.js":"71","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/helpers/validation.js":"72","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/index.js":"73","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/pages/Document.js":"74","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/pages/auth.js":"75","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/pages/index.js":"76","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/reportWebVitals.js":"77","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/routes/PrivateRoute.js":"78","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/routes/router.js":"79","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/setupTests.js":"80","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/theme/Icons.js":"81","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/theme/theme.js":"82","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/utils/CurrencyFormatter.js":"83","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/utils/configs.js":"84","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/utils/httpFacade.js":"85","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Modals/FarmContractModal.js":"86","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/FarmBoard/FarmBoardContent.js":"87","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Cards/YourFarmCard.js":"88","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Form/FormTextArea.js":"89","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Form/FormInput.js":"90","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Form/FormDropdown.js":"91","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/context/api.js":"92","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/context/auth.js":"93","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/context/component.js":"94","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/context/modal.js":"95","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/pages/dashboard.js":"96","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/pages/farm-wallet.js":"97","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/pages/not-found.js":"98","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/pages/warehouse.js":"99","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/pages/market-place.js":"100","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/pages/farm-board.js":"101","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/pages/forum.js":"102","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/pages/profile.js":"103","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/pages/document.js":"104","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/pages/start-farm/cooperative.js":"105","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/pages/start-farm/individual.js":"106","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/pages/start-farm/index.js":"107","/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/hooks/useFetch.js":"108"},{"size":1264,"mtime":1610368482624,"results":"109","hashOfConfig":"110"},{"size":686,"mtime":1610368482704,"results":"111","hashOfConfig":"110"},{"size":652,"mtime":1610368482704,"results":"112","hashOfConfig":"110"},{"size":1117,"mtime":1610368482912,"results":"113","hashOfConfig":"110"},{"size":2357,"mtime":1610368482912,"results":"114","hashOfConfig":"110"},{"size":2432,"mtime":1610368482912,"results":"115","hashOfConfig":"110"},{"size":2201,"mtime":1610368483224,"results":"116","hashOfConfig":"110"},{"size":1461,"mtime":1610368483224,"results":"117","hashOfConfig":"110"},{"size":702,"mtime":1610368483224,"results":"118","hashOfConfig":"110"},{"size":2314,"mtime":1610368483224,"results":"119","hashOfConfig":"110"},{"size":1170,"mtime":1610368483224,"results":"120","hashOfConfig":"110"},{"size":3084,"mtime":1609495112787,"results":"121","hashOfConfig":"122"},{"size":1694,"mtime":1609495112823,"results":"123","hashOfConfig":"122"},{"size":10411,"mtime":1610368483228,"results":"124","hashOfConfig":"110"},{"size":1476,"mtime":1610368483228,"results":"125","hashOfConfig":"110"},{"size":1492,"mtime":1610368483228,"results":"126","hashOfConfig":"110"},{"size":1300,"mtime":1610368483228,"results":"127","hashOfConfig":"110"},{"size":1862,"mtime":1610368483228,"results":"128","hashOfConfig":"110"},{"size":2443,"mtime":1610368483228,"results":"129","hashOfConfig":"110"},{"size":2823,"mtime":1610368483228,"results":"130","hashOfConfig":"110"},{"size":5833,"mtime":1610368483404,"results":"131","hashOfConfig":"110"},{"size":2445,"mtime":1610368483404,"results":"132","hashOfConfig":"110"},{"size":2885,"mtime":1610368483404,"results":"133","hashOfConfig":"110"},{"size":10251,"mtime":1610368483404,"results":"134","hashOfConfig":"110"},{"size":4322,"mtime":1610368483408,"results":"135","hashOfConfig":"110"},{"size":591,"mtime":1610368493904,"results":"136","hashOfConfig":"110"},{"size":1250,"mtime":1610368483408,"results":"137","hashOfConfig":"110"},{"size":837,"mtime":1609495112835,"results":"138","hashOfConfig":"110"},{"size":1323,"mtime":1610368483452,"results":"139","hashOfConfig":"110"},{"size":1577,"mtime":1610368483452,"results":"140","hashOfConfig":"110"},{"size":3700,"mtime":1610368492924,"results":"141","hashOfConfig":"110"},{"size":1157,"mtime":1610368483452,"results":"142","hashOfConfig":"110"},{"size":3051,"mtime":1610368492004,"results":"143","hashOfConfig":"110"},{"size":3813,"mtime":1609495112835,"results":"144","hashOfConfig":"122"},{"size":1155,"mtime":1610368483616,"results":"145","hashOfConfig":"110"},{"size":2132,"mtime":1609495112835,"results":"146","hashOfConfig":"122"},{"size":269,"mtime":1610109718988,"results":"147","hashOfConfig":"110"},{"size":2078,"mtime":1610368483616,"results":"148","hashOfConfig":"110"},{"size":2364,"mtime":1610368483616,"results":"149","hashOfConfig":"110"},{"size":4006,"mtime":1610368483616,"results":"150","hashOfConfig":"110"},{"size":1753,"mtime":1610368483616,"results":"151","hashOfConfig":"110"},{"size":1348,"mtime":1610368483616,"results":"152","hashOfConfig":"110"},{"size":1114,"mtime":1610368490588,"results":"153","hashOfConfig":"110"},{"size":5266,"mtime":1610368483616,"results":"154","hashOfConfig":"110"},{"size":1710,"mtime":1610368483616,"results":"155","hashOfConfig":"110"},{"size":2764,"mtime":1610368483616,"results":"156","hashOfConfig":"110"},{"size":3356,"mtime":1610368483616,"results":"157","hashOfConfig":"110"},{"size":373,"mtime":1609495112959,"results":"158","hashOfConfig":"122"},{"size":1746,"mtime":1610368483616,"results":"159","hashOfConfig":"110"},{"size":4479,"mtime":1610368483700,"results":"160","hashOfConfig":"110"},{"size":3739,"mtime":1610368483704,"results":"161","hashOfConfig":"110"},{"size":1996,"mtime":1610368483704,"results":"162","hashOfConfig":"110"},{"size":6464,"mtime":1610368483704,"results":"163","hashOfConfig":"110"},{"size":5072,"mtime":1610368483704,"results":"164","hashOfConfig":"110"},{"size":1534,"mtime":1610368490164,"results":"165","hashOfConfig":"110"},{"size":3520,"mtime":1610368483704,"results":"166","hashOfConfig":"110"},{"size":3541,"mtime":1610368483704,"results":"167","hashOfConfig":"110"},{"size":958,"mtime":1610368483892,"results":"168","hashOfConfig":"110"},{"size":1691,"mtime":1610368483892,"results":"169","hashOfConfig":"110"},{"size":223,"mtime":1609495112971,"results":"170","hashOfConfig":"122"},{"size":658,"mtime":1609495112987,"results":"171","hashOfConfig":"122"},{"size":741,"mtime":1610368489984,"results":"172","hashOfConfig":"110"},{"size":764,"mtime":1610368483892,"results":"173","hashOfConfig":"110"},{"size":45,"mtime":1609495112987,"results":"174","hashOfConfig":"110"},{"size":1022,"mtime":1610368483892,"results":"175","hashOfConfig":"110"},{"size":4551,"mtime":1610368483916,"results":"176","hashOfConfig":"110"},{"size":1098,"mtime":1610368483916,"results":"177","hashOfConfig":"110"},{"size":5314,"mtime":1610368489708,"results":"178","hashOfConfig":"110"},{"size":1598,"mtime":1610110986568,"results":"179","hashOfConfig":"110"},{"size":1174,"mtime":1610108253708,"results":"180","hashOfConfig":"110"},{"size":874,"mtime":1610368483920,"results":"181","hashOfConfig":"110"},{"size":971,"mtime":1610368488504,"results":"182","hashOfConfig":"110"},{"size":949,"mtime":1609495113003,"results":"183","hashOfConfig":"110"},{"size":3168,"mtime":1610356378544,"results":"184","hashOfConfig":"110"},{"size":2965,"mtime":1610368488040,"results":"185","hashOfConfig":"110"},{"size":1002,"mtime":1610368484828,"results":"186","hashOfConfig":"110"},{"size":354,"mtime":1610368484908,"results":"187","hashOfConfig":"110"},{"size":592,"mtime":1610368484908,"results":"188","hashOfConfig":"110"},{"size":1199,"mtime":1610368485312,"results":"189","hashOfConfig":"110"},{"size":240,"mtime":1609495113623,"results":"190","hashOfConfig":"122"},{"size":38071,"mtime":1610368485312,"results":"191","hashOfConfig":"110"},{"size":2575,"mtime":1610368485312,"results":"192","hashOfConfig":"110"},{"size":404,"mtime":1609495113623,"results":"193","hashOfConfig":"122"},{"size":853,"mtime":1610368487416,"results":"194","hashOfConfig":"110"},{"size":1458,"mtime":1610368485312,"results":"195","hashOfConfig":"110"},{"size":1756,"mtime":1610368490588,"results":"196","hashOfConfig":"110"},{"size":6143,"mtime":1610368493500,"results":"197","hashOfConfig":"110"},{"size":2103,"mtime":1610368493904,"results":"198","hashOfConfig":"110"},{"size":1903,"mtime":1610368492004,"results":"199","hashOfConfig":"110"},{"size":2673,"mtime":1610368492008,"results":"200","hashOfConfig":"110"},{"size":1383,"mtime":1610368492008,"results":"201","hashOfConfig":"110"},{"size":1386,"mtime":1610368483916,"results":"202","hashOfConfig":"110"},{"size":2430,"mtime":1610368489196,"results":"203","hashOfConfig":"110"},{"size":1582,"mtime":1610368483920,"results":"204","hashOfConfig":"110"},{"size":1003,"mtime":1610368489196,"results":"205","hashOfConfig":"110"},{"size":543,"mtime":1610368487956,"results":"206","hashOfConfig":"110"},{"size":195,"mtime":1610368487936,"results":"207","hashOfConfig":"110"},{"size":142,"mtime":1610368487936,"results":"208","hashOfConfig":"110"},{"size":2224,"mtime":1610368487932,"results":"209","hashOfConfig":"110"},{"size":1860,"mtime":1610368487936,"results":"210","hashOfConfig":"110"},{"size":543,"mtime":1610368487956,"results":"211","hashOfConfig":"110"},{"size":173,"mtime":1610368487936,"results":"212","hashOfConfig":"110"},{"size":2129,"mtime":1610368487936,"results":"213","hashOfConfig":"110"},{"size":2950,"mtime":1610368484580,"results":"214","hashOfConfig":"110"},{"size":1013,"mtime":1610368487936,"results":"215","hashOfConfig":"110"},{"size":1012,"mtime":1610368487932,"results":"216","hashOfConfig":"110"},{"size":1397,"mtime":1610368487936,"results":"217","hashOfConfig":"110"},{"size":2143,"mtime":1610368484564,"results":"218","hashOfConfig":"110"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},"172rono",{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1547win",{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"404","messages":"405","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"434","messages":"435","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/assets/data/mapdata.js",[],[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Button/ArrowButton.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Button/index.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Cards/ActionCard.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Cards/BankDetails.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Cards/BuyerCard.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Cards/CropCard.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Cards/CropCategorySelection.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Cards/CropSelectionCard.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Cards/Document/DocumentCard.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Cards/Document/DocumentPreview.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Cards/DocumentCard.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Cards/EventsCard.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Cards/FarmBoardCard.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Cards/FarmCard.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Cards/FarmInfo.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Cards/GetStartedNowCard.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Cards/OrdersCard.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Cards/PayOption.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Cards/WarehouseCard.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/DynamicProfile/AccountSettings.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/DynamicProfile/Notifications.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/DynamicProfile/PrivacyAndData.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/DynamicProfile/Profile.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/DynamicProfile/Security.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/DynamicProfile/index.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/EmptyStates/FarmsEmptyState.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/EmptyStates/HomeEmptyState.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/FetchCard/index.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Form/BasePhone.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Form/BaseSelect.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Form/FormRadio.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Form/ImageUpload.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Form/ListSelect.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Form/Step.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Form/ThirdPartyInput.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Form/index.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Form/upload.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Modals/ConfirmReceiptDelete.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Modals/ConfirmSale.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Modals/FarmReceiptModal.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Modals/LearnMoreModal.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Modals/ModalWrapper.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Modals/UploadDocument.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Notifications/index.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/StartFarmProcess/CropSelection/AboutFarm.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/StartFarmProcess/CropSelection/FarmDetails.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/StartFarmProcess/CropSelection/SelectCrop.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/StartFarmProcess/CropSelection/index.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/StartFarmProcess/OtherSteps/AboutFarmManager.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/StartFarmProcess/OtherSteps/ChooseAcreage.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/StartFarmProcess/OtherSteps/Confirmation.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/StartFarmProcess/OtherSteps/Contract.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/StartFarmProcess/OtherSteps/InviteLink.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/StartFarmProcess/OtherSteps/Map.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/StartFarmProcess/OtherSteps/PaymentOption.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/StartFarmProcess/OtherSteps/index.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Tabs/Tab.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Tabs/Tabs.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Utils/Cooperatives.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Utils/Events.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Utils/FarmBoardGreetings.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Utils/Greetings.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/index.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/container/App.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/container/Header.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/container/Layout.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/container/Sidebar.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/context/ComponentContext.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/context/paymentContext.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/helpers/misc.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/helpers/validation.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/index.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/pages/Document.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/pages/auth.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/pages/index.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/reportWebVitals.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/routes/PrivateRoute.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/routes/router.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/setupTests.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/theme/Icons.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/theme/theme.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/utils/CurrencyFormatter.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/utils/configs.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/utils/httpFacade.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Modals/FarmContractModal.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/FarmBoard/FarmBoardContent.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Cards/YourFarmCard.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Form/FormTextArea.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Form/FormInput.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/components/Form/FormDropdown.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/context/api.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/context/auth.js",["436","437"],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/context/component.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/context/modal.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/pages/dashboard.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/pages/farm-wallet.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/pages/not-found.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/pages/warehouse.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/pages/market-place.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/pages/farm-board.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/pages/forum.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/pages/profile.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/pages/document.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/pages/start-farm/cooperative.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/pages/start-farm/individual.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/pages/start-farm/index.js",[],"/home/gyna/Desktop/cf-projects/cf-digital-farmer-dashboard/src/hooks/useFetch.js",["438"],{"ruleId":"439","message":"440","line":49,"column":5,"endLine":49,"endColumn":60,"severity":2,"nodeType":null},{"ruleId":"439","message":"440","line":70,"column":5,"endLine":70,"endColumn":60,"severity":2,"nodeType":null},{"ruleId":"439","message":"440","line":69,"column":5,"endLine":69,"endColumn":60,"severity":2,"nodeType":null},"react-hooks/exhaustive-deps","Definition for rule 'react-hooks/exhaustive-deps' was not found."]
=======
[{"/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/index.js":"1","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/reportWebVitals.js":"2","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/theme/theme.js":"3","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/container/App.js":"4","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/context/modal.js":"5","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/routes/router.js":"6","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/context/component.js":"7","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/context/api.js":"8","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/context/auth.js":"9","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/routes/PrivateRoute.js":"10","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/utils/httpFacade.js":"11","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/utils/configs.js":"12","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/helpers/misc.js":"13","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Modals/FarmContract.js":"14","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Modals/FarmReceiptModal.js":"15","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Modals/LearnMoreModal.js":"16","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/pages/index.js":"17","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Modals/ModalWrapper.js":"18","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/pages/auth.js":"19","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/pages/forum.js":"20","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/pages/profile.js":"21","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/pages/not-found.js":"22","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/pages/document.js":"23","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/pages/warehouse.js":"24","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/pages/dashboard.js":"25","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/pages/farm-wallet.js":"26","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/pages/market-place.js":"27","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/pages/farm-board.js":"28","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/pages/start-farm/index.js":"29","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/pages/start-farm/cooperative.js":"30","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/pages/start-farm/individual.js":"31","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Cards/FarmInfo.js":"32","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Button/ArrowButton.js":"33","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Button/index.js":"34","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/container/Header.js":"35","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/container/Layout.js":"36","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Cards/OrdersCard.js":"37","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Cards/BuyerCard.js":"38","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Cards/WarehouseCard.js":"39","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Cards/GetStartedNowCard.js":"40","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Modals/ConfirmReceiptDelete.js":"41","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Modals/UploadDocument.js":"42","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Utils/FarmBoardGreetings.js":"43","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Utils/Greetings.js":"44","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/FarmBoard/FarmBoard.js":"45","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/EmptyStates/HomeEmptyState.js":"46","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/EmptyStates/FarmsEmptyState.js":"47","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Cards/Document/DocumentCard.js":"48","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/FetchCard/index.js":"49","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/DynamicProfile/index.js":"50","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/container/Sidebar.js":"51","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Cards/FarmCard.js":"52","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Cards/Document/DocumentPreview.js":"53","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Cards/YourFarm.js":"54","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Cards/FarmBoardCard.js":"55","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/StartFarmProcess/CropSelection/index.js":"56","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/StartFarmProcess/OtherSteps/index.js":"57","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Cards/CropCard.js":"58","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/DynamicProfile/Security.js":"59","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/DynamicProfile/Profile.js":"60","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/DynamicProfile/PrivacyAndData.js":"61","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/DynamicProfile/Notifications.js":"62","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/DynamicProfile/AccountSettings.js":"63","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Modals/ConfirmSale.js":"64","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Form/upload.js":"65","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/theme/Icons.js":"66","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Cards/CropCategorySelection.js":"67","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/StartFarmProcess/OtherSteps/PaymentOption.js":"68","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/StartFarmProcess/OtherSteps/InviteLink.js":"69","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/StartFarmProcess/OtherSteps/Contract.js":"70","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/StartFarmProcess/OtherSteps/AboutFarmManager.js":"71","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/StartFarmProcess/OtherSteps/ChooseAcreage.js":"72","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/StartFarmProcess/OtherSteps/Confirmation.js":"73","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/StartFarmProcess/CropSelection/FarmDetails.js":"74","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Form/Step.js":"75","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Cards/CropSelectionCard.js":"76","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/StartFarmProcess/OtherSteps/Map.js":"77","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/StartFarmProcess/CropSelection/AboutFarm.js":"78","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/hooks/useFetch.js":"79","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Tabs/Tabs.js":"80","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/helpers/validation.js":"81","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Cards/ActionCard.js":"82","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/index.js":"83","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Cards/PayOption.js":"84","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Form/FormRadio.js":"85","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Form/index.js":"86","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Form/BaseSelect.js":"87","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Form/ImageUpload.js":"88","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Tabs/Tab.js":"89","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Notifications/index.js":"90","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Cards/BankDetails.js":"91","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Form/TextArea.js":"92","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/assets/data/mapdata.js":"93","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Form/Input.js":"94","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Form/Dropdown.js":"95","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Form/BasePhone.js":"96"},{"size":949,"mtime":1609379676610,"results":"97","hashOfConfig":"98"},{"size":354,"mtime":1610010678343,"results":"99","hashOfConfig":"98"},{"size":2575,"mtime":1610010678343,"results":"100","hashOfConfig":"98"},{"size":1022,"mtime":1610283171981,"results":"101","hashOfConfig":"98"},{"size":998,"mtime":1610018316274,"results":"102","hashOfConfig":"98"},{"size":1139,"mtime":1610361997389,"results":"103","hashOfConfig":"98"},{"size":1582,"mtime":1610012455226,"results":"104","hashOfConfig":"98"},{"size":1362,"mtime":1610361845289,"results":"105","hashOfConfig":"98"},{"size":2077,"mtime":1610361819278,"results":"106","hashOfConfig":"98"},{"size":592,"mtime":1609980793107,"results":"107","hashOfConfig":"98"},{"size":1458,"mtime":1610021786882,"results":"108","hashOfConfig":"98"},{"size":857,"mtime":1610209805461,"results":"109","hashOfConfig":"98"},{"size":872,"mtime":1610361997389,"results":"110","hashOfConfig":"98"},{"size":1736,"mtime":1610361997389,"results":"111","hashOfConfig":"98"},{"size":1733,"mtime":1610361997389,"results":"112","hashOfConfig":"98"},{"size":1348,"mtime":1609981161711,"results":"113","hashOfConfig":"98"},{"size":1002,"mtime":1610211131360,"results":"114","hashOfConfig":"98"},{"size":1078,"mtime":1610361997389,"results":"115","hashOfConfig":"98"},{"size":2576,"mtime":1610361997389,"results":"116","hashOfConfig":"98"},{"size":173,"mtime":1610211206215,"results":"117","hashOfConfig":"98"},{"size":2060,"mtime":1610361997389,"results":"118","hashOfConfig":"98"},{"size":142,"mtime":1610015510673,"results":"119","hashOfConfig":"98"},{"size":2879,"mtime":1610361997389,"results":"120","hashOfConfig":"98"},{"size":2176,"mtime":1610361997389,"results":"121","hashOfConfig":"98"},{"size":543,"mtime":1610211126194,"results":"122","hashOfConfig":"98"},{"size":195,"mtime":1610210877734,"results":"123","hashOfConfig":"98"},{"size":1812,"mtime":1610361997390,"results":"124","hashOfConfig":"98"},{"size":518,"mtime":1610209665095,"results":"125","hashOfConfig":"98"},{"size":1397,"mtime":1610320048542,"results":"126","hashOfConfig":"98"},{"size":979,"mtime":1610361997389,"results":"127","hashOfConfig":"98"},{"size":978,"mtime":1610361997389,"results":"128","hashOfConfig":"98"},{"size":1492,"mtime":1610211328321,"results":"129","hashOfConfig":"98"},{"size":686,"mtime":1610010678341,"results":"130","hashOfConfig":"98"},{"size":652,"mtime":1610010678341,"results":"131","hashOfConfig":"98"},{"size":4402,"mtime":1610361997389,"results":"132","hashOfConfig":"98"},{"size":1098,"mtime":1610010678342,"results":"133","hashOfConfig":"98"},{"size":1815,"mtime":1610361997388,"results":"134","hashOfConfig":"98"},{"size":2324,"mtime":1610361997388,"results":"135","hashOfConfig":"98"},{"size":2805,"mtime":1610361997388,"results":"136","hashOfConfig":"98"},{"size":1300,"mtime":1610017877797,"results":"137","hashOfConfig":"98"},{"size":2269,"mtime":1610361997389,"results":"138","hashOfConfig":"98"},{"size":4949,"mtime":1610361997389,"results":"139","hashOfConfig":"98"},{"size":675,"mtime":1610361997389,"results":"140","hashOfConfig":"98"},{"size":726,"mtime":1610361997389,"results":"141","hashOfConfig":"98"},{"size":5941,"mtime":1610014234412,"results":"142","hashOfConfig":"98"},{"size":827,"mtime":1610361997389,"results":"143","hashOfConfig":"98"},{"size":1214,"mtime":1610361997388,"results":"144","hashOfConfig":"98"},{"size":2122,"mtime":1610361997388,"results":"145","hashOfConfig":"98"},{"size":1258,"mtime":1610361997390,"results":"146","hashOfConfig":"98"},{"size":594,"mtime":1610211002540,"results":"147","hashOfConfig":"98"},{"size":5073,"mtime":1610361997389,"results":"148","hashOfConfig":"98"},{"size":1403,"mtime":1610361997388,"results":"149","hashOfConfig":"98"},{"size":1112,"mtime":1610361997388,"results":"150","hashOfConfig":"98"},{"size":1937,"mtime":1610361997389,"results":"151","hashOfConfig":"98"},{"size":9774,"mtime":1610361997388,"results":"152","hashOfConfig":"98"},{"size":1730,"mtime":1610361997389,"results":"153","hashOfConfig":"98"},{"size":3300,"mtime":1610361997389,"results":"154","hashOfConfig":"98"},{"size":2126,"mtime":1610361997388,"results":"155","hashOfConfig":"98"},{"size":4216,"mtime":1610361997388,"results":"156","hashOfConfig":"98"},{"size":9714,"mtime":1610361997388,"results":"157","hashOfConfig":"98"},{"size":2816,"mtime":1610361997388,"results":"158","hashOfConfig":"98"},{"size":2401,"mtime":1610361997388,"results":"159","hashOfConfig":"98"},{"size":5121,"mtime":1610361997389,"results":"160","hashOfConfig":"98"},{"size":3877,"mtime":1610361997389,"results":"161","hashOfConfig":"98"},{"size":2064,"mtime":1610361997389,"results":"162","hashOfConfig":"98"},{"size":37793,"mtime":1610361997390,"results":"163","hashOfConfig":"98"},{"size":1432,"mtime":1610361997388,"results":"164","hashOfConfig":"98"},{"size":3504,"mtime":1610361997389,"results":"165","hashOfConfig":"98"},{"size":4724,"mtime":1610361997389,"results":"166","hashOfConfig":"98"},{"size":6204,"mtime":1610361997389,"results":"167","hashOfConfig":"98"},{"size":4075,"mtime":1610361997389,"results":"168","hashOfConfig":"98"},{"size":3621,"mtime":1610361997389,"results":"169","hashOfConfig":"98"},{"size":1996,"mtime":1609981231057,"results":"170","hashOfConfig":"98"},{"size":3286,"mtime":1610361997389,"results":"171","hashOfConfig":"98"},{"size":1060,"mtime":1610361997390,"results":"172","hashOfConfig":"98"},{"size":702,"mtime":1610289365559,"results":"173","hashOfConfig":"98"},{"size":1350,"mtime":1610361997389,"results":"174","hashOfConfig":"98"},{"size":2621,"mtime":1610361997389,"results":"175","hashOfConfig":"98"},{"size":2143,"mtime":1610319741519,"results":"176","hashOfConfig":"98"},{"size":1623,"mtime":1610361997389,"results":"177","hashOfConfig":"98"},{"size":767,"mtime":1610210823103,"results":"178","hashOfConfig":"98"},{"size":1079,"mtime":1610361997388,"results":"179","hashOfConfig":"98"},{"size":45,"mtime":1609249705466,"results":"180","hashOfConfig":"98"},{"size":2298,"mtime":1610361997388,"results":"181","hashOfConfig":"98"},{"size":1157,"mtime":1610013687810,"results":"182","hashOfConfig":"98"},{"size":257,"mtime":1609249705461,"results":"183","hashOfConfig":"98"},{"size":2823,"mtime":1610361997389,"results":"184","hashOfConfig":"98"},{"size":2828,"mtime":1610361997389,"results":"185","hashOfConfig":"98"},{"size":958,"mtime":1610214375970,"results":"186","hashOfConfig":"98"},{"size":1601,"mtime":1610361997389,"results":"187","hashOfConfig":"98"},{"size":2091,"mtime":1610361997388,"results":"188","hashOfConfig":"98"},{"size":1842,"mtime":1610361997389,"results":"189","hashOfConfig":"98"},{"size":1264,"mtime":1610010678341,"results":"190","hashOfConfig":"98"},{"size":2589,"mtime":1610361997389,"results":"191","hashOfConfig":"98"},{"size":1383,"mtime":1610013778411,"results":"192","hashOfConfig":"98"},{"size":1554,"mtime":1610361997388,"results":"193","hashOfConfig":"98"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"um7169",{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"221"},{"filePath":"222","messages":"223","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"221"},{"filePath":"225","messages":"226","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"221"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","errorCount":2,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"221"},{"filePath":"235","messages":"236","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"221"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"221"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"245","messages":"246","errorCount":3,"warningCount":2,"fixableErrorCount":3,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"221"},{"filePath":"248","messages":"249","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"221"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"255","messages":"256","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"221"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"262","messages":"263","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"221"},{"filePath":"265","messages":"266","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"221"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"274","messages":"275","errorCount":2,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"221"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"279","messages":"280","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"221"},{"filePath":"282","messages":"283","errorCount":3,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"221"},{"filePath":"285","messages":"286","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"221"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"290","messages":"291","errorCount":2,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"221"},{"filePath":"293","messages":"294","errorCount":4,"warningCount":0,"fixableErrorCount":4,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"221"},{"filePath":"296","messages":"297","errorCount":2,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"221"},{"filePath":"299","messages":"300","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"221"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"304","messages":"305","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"221"},{"filePath":"307","messages":"308","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"221"},{"filePath":"310","messages":"311","errorCount":3,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"221"},{"filePath":"313","messages":"314","errorCount":2,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"221"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"318","messages":"319","errorCount":2,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"221"},{"filePath":"321","messages":"322","errorCount":2,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"221"},{"filePath":"324","messages":"325","errorCount":2,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"221"},{"filePath":"327","messages":"328","errorCount":2,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"221"},{"filePath":"330","messages":"331","errorCount":8,"warningCount":0,"fixableErrorCount":8,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"221"},{"filePath":"333","messages":"334","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"221"},{"filePath":"336","messages":"337","errorCount":4,"warningCount":0,"fixableErrorCount":4,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"221"},{"filePath":"339","messages":"340","errorCount":3,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"221"},{"filePath":"342","messages":"343","errorCount":3,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"221"},{"filePath":"345","messages":"346","errorCount":8,"warningCount":0,"fixableErrorCount":8,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"221"},{"filePath":"348","messages":"349","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"221"},{"filePath":"351","messages":"352","errorCount":2,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"221"},{"filePath":"354","messages":"355","errorCount":8,"warningCount":0,"fixableErrorCount":8,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"221"},{"filePath":"357","messages":"358","errorCount":3,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"359","usedDeprecatedRules":"221"},{"filePath":"360","messages":"361","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"221"},{"filePath":"363","messages":"364","errorCount":7,"warningCount":0,"fixableErrorCount":7,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"221"},{"filePath":"366","messages":"367","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"368","usedDeprecatedRules":"221"},{"filePath":"369","messages":"370","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"221"},{"filePath":"372","messages":"373","errorCount":6,"warningCount":0,"fixableErrorCount":6,"fixableWarningCount":0,"source":"374","usedDeprecatedRules":"221"},{"filePath":"375","messages":"376","errorCount":14,"warningCount":0,"fixableErrorCount":14,"fixableWarningCount":0,"source":"377","usedDeprecatedRules":"221"},{"filePath":"378","messages":"379","errorCount":6,"warningCount":0,"fixableErrorCount":6,"fixableWarningCount":0,"source":"380","usedDeprecatedRules":"221"},{"filePath":"381","messages":"382","errorCount":4,"warningCount":0,"fixableErrorCount":4,"fixableWarningCount":0,"source":"383","usedDeprecatedRules":"221"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"386","messages":"387","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"388","usedDeprecatedRules":"221"},{"filePath":"389","messages":"390","errorCount":2,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"391","usedDeprecatedRules":"221"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"394","messages":"395","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"396","usedDeprecatedRules":"221"},{"filePath":"397","messages":"398","errorCount":4,"warningCount":0,"fixableErrorCount":4,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"221"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"402","messages":"403","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"221"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"407","messages":"408","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"409","usedDeprecatedRules":"221"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"412","messages":"413","errorCount":4,"warningCount":0,"fixableErrorCount":4,"fixableWarningCount":0,"source":"414","usedDeprecatedRules":"221"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"419","messages":"420","errorCount":2,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"421","usedDeprecatedRules":"221"},{"filePath":"422","messages":"423","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"424","usedDeprecatedRules":"221"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"427","messages":"428","errorCount":2,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"429","usedDeprecatedRules":"221"},{"filePath":"430","messages":"431","errorCount":6,"warningCount":0,"fixableErrorCount":6,"fixableWarningCount":0,"source":"432"},{"filePath":"433","messages":"434","errorCount":2,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"435","usedDeprecatedRules":"221"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"438","messages":"439","errorCount":3,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"440","usedDeprecatedRules":"221"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"443","messages":"444","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"445","usedDeprecatedRules":"221"},"/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/index.js",[],"/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/reportWebVitals.js",[],"/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/theme/theme.js",[],"/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/container/App.js",[],"/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/context/modal.js",[],"/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/routes/router.js",[],"/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/context/component.js",[],"/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/context/api.js",[],"/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/context/auth.js",[],"/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/routes/PrivateRoute.js",[],"/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/utils/httpFacade.js",[],"/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/utils/configs.js",[],"/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/helpers/misc.js",["446"],"// configs\nimport configs from '../utils/configs'\n\nexport const replaceURI = (APP, path) => window.location.replace(configs()[`${APP}_SERVICE`] + path)\n\nexport const fileToBase64 = async file => {\n  return new Promise((resolve, reject) => {\n    const reader = new window.FileReader()\n    reader.readAsDataURL(file)\n    reader.onload = () => resolve(reader.result)\n    reader.onerror = e => reject(e)\n  })\n}\n\nexport const getFormattedMoney = (val, withCurrecy) => {\n  let number = val\n  if (Number.isNaN(val)) {\n    number = 0\n  }\n  const newFMondy = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD'\n  }).format(number)\n  return !withCurrecy ? newFMondy.split('$')[1] : newFMondy\n}\n\nexport const getformattedDate = date => {\n  return new Date(date).toLocaleDateString('en-GB', {\n    day: 'numeric',\n    month: 'short',\n    year: 'numeric'\n  })\n}\n",["447","448","449"],"/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Modals/FarmContract.js",["450"],"import { Box, Divider, Flex, Heading, Text } from '@chakra-ui/react'\nimport Button from 'components/Button'\nimport FarmInfo from 'components/Cards/FarmInfo'\nimport useComponent from 'context/component'\nimport React from 'react'\nimport ModalWrapper from './ModalWrapper'\n\nconst FarmContractModal = () => {\n  const { isOpen, onClose } = useComponent()\n  return (\n    <ModalWrapper\n      image={require('../../assets/images/logo.png').default}\n      isCentered\n      alt='Complete Farmer Logo'\n      isOpen={isOpen}\n      onClose={onClose}\n    >\n      <Divider orientation='horizontal' my={3} />\n      <Heading as='h3' fontSize={{ md: '3xl' }}>\n        Farm Contract\n      </Heading>\n      <Box mb={8}>\n        <Text fontWeight='bold'>Description</Text>\n        <Divider orientation='horizontal' my={3} />\n        <Text fontSize='xs'>Here’s a cofirmation of your payment and a receipt for your farm</Text>\n      </Box>\n      <FarmInfo width='100%' margin={0} />\n\n      <Flex align='center' justify='space-between' my={8}>\n        <Text fontSize='xs'>Have an issue with your farm receipt?</Text>\n        <Button\n          btntitle='Contact support'\n          fontSize='xs'\n          borderWidth={1}\n          borderColor='cf.400'\n          color='cf.400'\n          rounded='30px'\n          bg='white'\n          h={6}\n          w={32}\n          _hover={{ bg: 'white' }}\n          _active={{ bg: 'white' }}\n          shadow='none'\n        />\n      </Flex>\n\n      <Box w={56} mx='auto' my={6}>\n        <Button\n          btntitle='Download receipt'\n          width='100%'\n          h={12}\n          mx='auto'\n          fontSize='md'\n          rounded='30px'\n        />\n      </Box>\n    </ModalWrapper>\n  )\n}\n\nexport default FarmContractModal\n","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Modals/FarmReceiptModal.js",["451"],"import { Box, Divider, Flex, Heading, Text } from '@chakra-ui/react'\nimport Button from 'components/Button'\nimport FarmInfo from 'components/Cards/FarmInfo'\nimport useComponent from 'context/component'\nimport React from 'react'\nimport ModalWrapper from './ModalWrapper'\n\nconst FarmReceiptModal = () => {\n  const { isOpen, onClose } = useComponent()\n  return (\n    <ModalWrapper\n      image={require('../../assets/images/logo.png').default}\n      isCentered\n      alt='Complete Farmer Logo'\n      isOpen={isOpen}\n      onClose={onClose}\n    >\n      <Divider orientation='horizontal' my={3} />\n      <Heading as='h3' fontSize={{ md: '3xl' }}>\n        Farm receipt\n      </Heading>\n      <Box mb={8}>\n        <Text fontWeight='bold'>Description</Text>\n        <Divider orientation='horizontal' my={3} />\n        <Text fontSize='xs'>Here’s a cofirmation of your payment and a receipt for your farm</Text>\n      </Box>\n      <FarmInfo width='100%' margin={0} />\n\n      <Flex align='center' justify='space-between' my={8}>\n        <Text fontSize='xs'>Have an issue with your farm receipt?</Text>\n        <Button\n          btntitle='Contact support'\n          fontSize='xs'\n          borderWidth={1}\n          borderColor='cf.400'\n          color='cf.400'\n          rounded='30px'\n          bg='white'\n          h={6}\n          w={32}\n          _hover={{ bg: 'white' }}\n          _active={{ bg: 'white' }}\n          shadow='none'\n        />\n      </Flex>\n\n      <Box w={56} mx='auto' my={6}>\n        <Button\n          btntitle='Download receipt'\n          width='100%'\n          h={12}\n          mx='auto'\n          fontSize='md'\n          rounded='30px'\n        />\n      </Box>\n    </ModalWrapper>\n  )\n}\n\nexport default FarmReceiptModal\n","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Modals/LearnMoreModal.js",[],"/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/pages/index.js",[],"/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Modals/ModalWrapper.js",["452","453"],"import React from 'react'\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalBody,\n  ModalCloseButton,\n  Image,\n  Box\n} from '@chakra-ui/react'\nimport PropTypes from 'prop-types'\n\nconst ModalWrapper = ({ isOpen, onClose, title, size, isCentered, image, alt, children }) => {\n  return (\n    <Modal isOpen={isOpen} onClose={onClose} size={size} isCentered={isCentered}>\n      <ModalOverlay />\n      <ModalContent rounded='2xl'>\n        <ModalHeader>\n          <Box>\n            {title && title}\n            {image && <Image width={12} src={image} alt={alt} />}\n          </Box>\n        </ModalHeader>\n        <ModalCloseButton color='cf.400' />\n        <ModalBody px={10} py={5}>\n          {children}\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  )\n}\n\nModalWrapper.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  onClose: PropTypes.bool.isRequired,\n  title: PropTypes.string,\n  size: PropTypes.string,\n  isCentered: PropTypes.bool,\n  image: PropTypes.string,\n  alt: PropTypes.string,\n  children: PropTypes.node\n}\n\nexport default ModalWrapper\n","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/pages/auth.js",["454"],"import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport QueryString from 'query-string'\n\nimport { replaceURI } from 'helpers/misc'\nimport FetchCard from 'components/FetchCard'\nimport useAuth from 'context/auth'\n\nconst Auth = ({ history: { replace }, match: { params }, location: { search } }) => {\n  document.title = 'Authenticating...'\n  const { getUser, store, isAuthenticated } = useAuth()\n  const [reload, setReload] = useState(0)\n  const [error, setError] = useState(false)\n\n  const { to } = QueryString.parse(search, { parseBooleans: true })\n  const { token } = params\n\n  const triggerReload = () => setReload(prevState => prevState + 1)\n\n  useEffect(() => {\n    let mounted = true\n    if (mounted) {\n      // Check if user is authenticated and redirect to db\n      if (isAuthenticated()) {\n        return replace('/dashboard')\n      } else {\n        // Check to see if a token exist then use token to fetch user data else return user to auth service app\n        if (token) {\n          // store token in session storage for immediate use\n          store({ token })\n          // Delay for half a seconds to make sure that token is stored\n          setTimeout(async () => {\n            try {\n              // fetch user data\n              const { data: user } = await getUser()\n\n              // store user data\n              store({ user })\n\n              setTimeout(() => {\n                replace(JSON.parse(to || null) || '/dashboard')\n              }, 500)\n            } catch (error) {\n              if (error?.response) {\n                const res = error.response\n                if ([401, 403].includes(res.status)) {\n                  replaceURI('AUTH', '/redirects?from=DIGITAL_FARMER&off=false')\n                } else {\n                  setError(error?.message)\n                }\n              } else {\n                setError(error?.message)\n              }\n            }\n          }, 500)\n        } else {\n          replaceURI('AUTH', '/redirects?from=DIGITAL_FARMER&off=false')\n        }\n      }\n    }\n    return () => (mounted = false)\n  }, [store, getUser, isAuthenticated, replace, token, to, reload])\n\n  return error ? (\n    <FetchCard\n      direction='column'\n      align='center'\n      justify='center'\n      reload={triggerReload}\n      loading={false}\n      error={error}\n    />\n  ) : (\n    <div className='loading-text'>Authenticating</div>\n  )\n}\n\nAuth.propTypes = {\n  history: PropTypes.object.isRequired,\n  match: PropTypes.object.isRequired,\n  location: PropTypes.object.isRequired\n}\n\nexport default Auth\n","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/pages/forum.js",[],"/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/pages/profile.js",["455"],"import { Box, Flex, Grid, Text, Container, Input } from '@chakra-ui/react'\nimport React from 'react'\nimport DynamicProfile from 'components/DynamicProfile'\nimport Header from 'container/Header'\n\nconst Profile = () => {\n  const [page, setPage] = React.useState('compA')\n\n  const menus = [\n    {\n      name: 'Profile',\n      comp: 'compA'\n    },\n    {\n      name: 'Account Settings',\n      comp: 'compB'\n    },\n    {\n      name: 'Notifications',\n      comp: 'compC'\n    },\n    {\n      name: 'Security',\n      comp: 'compD'\n    },\n    {\n      name: 'Privacy & Data',\n      comp: 'compE'\n    }\n  ]\n\n  return (\n    <Box>\n      <Header />\n      <Container maxW='7xl'>\n        <Flex align='center' justify='center' h={70} w='100%' bg='gray.100' mt={20}>\n          <Box\n            as='label'\n            rounded='30px'\n            px={4}\n            py={2}\n            bg='white'\n            borderWidth={1}\n            borderColor='cf.400'\n            role='button'\n            type='button'\n          >\n            <Input d='none' type='file' />\n            <Text color='cf.400' fontSize='sm'>\n              Change your header image\n            </Text>\n          </Box>\n        </Flex>\n        <Grid templateColumns={{ md: '18% 82%' }} my={16}>\n          <Flex\n            align='center'\n            justify='center'\n            direction='column'\n            borderWidth={1}\n            borderColor='gray.200'\n            rounded='30px'\n            p={4}\n            h={{ md: 85 }}\n          >\n            {menus.map(menu => (\n              <Box\n                key={menu}\n                as='button'\n                role='button'\n                my={3}\n                bg={page === menu.comp && 'cf.200'}\n                px={8}\n                py={2}\n                rounded='30px'\n                onClick={() => setPage(menu.comp)}\n              >\n                <Text>{menu.name}</Text>\n              </Box>\n            ))}\n          </Flex>\n\n          <DynamicProfile page={page} />\n        </Grid>\n      </Container>\n    </Box>\n  )\n}\n\nexport default Profile\n","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/pages/not-found.js",[],"/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/pages/document.js",["456","457","458","459","460"],"import React, { useEffect, useState } from 'react'\nimport Layout from 'container/Layout'\nimport DocumentCard from 'components/Cards/Document/DocumentCard'\nimport { Box, Grid } from '@chakra-ui/react'\nimport UploadDocument from 'components/Modals/UploadDocument'\nimport ConfirmReceiptDelete from 'components/Modals/ConfirmReceiptDelete'\nimport Prismic from 'prismic-javascript'\nimport getConfig from 'utils/configs'\n\nconst data = [\n  {\n    id: 1,\n    title: 'Receipt',\n    description:\n      'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam tempor tellus et .',\n    link:\n      'https://completefarmer.s3.us-east-2.amazonaws.com/app/test/user/docs/CF-1587062346517.pdf'\n  },\n  {\n    id: 2,\n    title: 'Invoice',\n    description:\n      'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam tempor tellus et .',\n    link:\n      'https://completefarmer.s3.us-east-2.amazonaws.com/app/test/user/docs/CF-1587062346517.pdf'\n  },\n  {\n    id: 3,\n    title: 'Contract',\n    description:\n      'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam tempor tellus et nulla mattis cursus.',\n    link:\n      'https://completefarmer.s3.us-east-2.amazonaws.com/app/test/user/docs/CF-1587062346517.pdf'\n  }\n]\n\nconst Document = () => {\n  document.title = 'Complete Farmer | Documents'\n\n  const prismic_api = getConfig().PRISMIC_API\n  const prismic_key = getConfig().PRISMIC_KEY\n\n  const Client = Prismic.client(prismic_api, { prismic_key })\n\n  const [_newsData, setNewsData] = useState(null)\n  const [_announcement, setAnnouncement] = useState(null)\n\n  // eslint-disable-next-line no-console\n  console.log(_newsData)\n  // eslint-disable-next-line no-console\n  console.log(_announcement)\n\n  useEffect(() => {\n    const announcements = async () => {\n      const response = await Client.query(Prismic.Predicates.at('document.type', 'announcements'))\n      if (response) {\n        setAnnouncement(response.results[0])\n      }\n    }\n    announcements()\n  }, [])\n\n  useEffect(() => {\n    const news = async () => {\n      const response = await Client.query(Prismic.Predicates.at('document.type', 'news'))\n      if (response) {\n        setNewsData(response.results[0])\n      }\n    }\n    news()\n  }, [])\n\n  return (\n    <Layout>\n      <Box mt='200px' mx='80px'>\n        <UploadDocument />\n        {/* <ConfirmDocUpload/> */}\n        <ConfirmReceiptDelete />\n      </Box>\n      <Box pb={10} mx={6}>\n        <Grid templateColumns={{ md: 'repeat(3, 1fr)' }} gap={{ md: 1 }} mt={10}>\n          {data.map(item => (\n            <DocumentCard\n              key={item.id}\n              mt={{ md: '100px' }}\n              title={item.title}\n              link={item.link}\n              description={item.description}\n              img={require('assets/images/Receipt.svg')}\n            />\n          ))}\n        </Grid>\n      </Box>\n    </Layout>\n  )\n}\n\nexport default Document\n","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/pages/warehouse.js",["461"],"import React from 'react'\nimport Layout from 'container/Layout'\nimport { Box, Heading, Image, Flex } from '@chakra-ui/react'\nimport WarehouseCard from 'components/Cards/WarehouseCard'\nimport ArrowButton from '../components/Button/ArrowButton'\n\nimport IllustrationImage from '../assets/images/home/illustration.png'\nimport SoyaBean from '../assets/images/startfarm/soya-beans.svg'\n\nconst warehouseGoods = [\n  {\n    id: 1,\n    image: SoyaBean,\n    name: 'Soya Bean Warehouse',\n    location: 'AgyaAtta, Eastern Region',\n    quantity: '2000 tonnes',\n    weight: '200 kg',\n    bags: '20 bags',\n    condition: 'Moist'\n  },\n  {\n    id: 2,\n    image: SoyaBean,\n    name: 'Soya Bean Warehouse',\n    location: 'AgyaAtta, Eastern Region',\n    quantity: '2010 tonnes',\n    weight: '300 kg',\n    bags: '30 bags',\n    condition: 'Dry'\n  }\n  // {\n  //   id:3,\n  //   image: SoyaBean,\n  //   name: 'Soya Bean Warehouse',\n  //   location: 'Shai Osudoku, Eastern Region',\n  //   quantity: '2010 tonnes',\n  //   weight: '300 kg',\n  //   bags: '30 bags',\n  //   condition: 'Moist'\n  // }\n]\n\nconst Warehouse = () => {\n  document.title = 'Complete Farmer | Warehouse'\n\n  return (\n    <Layout>\n      <Box pos='relative'>\n        <Image src={IllustrationImage} h={{ md: 115 }} w='100%' objectFit='cover' />\n        <Box pos='absolute' top={{ md: 40 }} left={{ md: 16 }}>\n          <Heading as='h3' fontSize={{ md: '4xl' }}>\n            Welcome to your warehouse\n          </Heading>\n        </Box>\n      </Box>\n      <Flex align='center' justify='space-between' p={{ md: 16 }}>\n        <Heading as='h4' fontSize={{ md: '2xl' }}>\n          Here's how your farm(s) are doing\n        </Heading>\n        <ArrowButton />\n      </Flex>\n      <Flex my={3}>\n        {warehouseGoods.map(item => (\n          <WarehouseCard\n            key={item.name}\n            name={item.name}\n            location={item.location}\n            image={item.image}\n            quantity={item.quantity}\n            weight={item.weight}\n            bags={item.bags}\n            condition={item.condition}\n            mr={3}\n            ml={14}\n          />\n        ))}\n      </Flex>\n    </Layout>\n  )\n}\n\nexport default Warehouse\n","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/pages/dashboard.js",[],"/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/pages/farm-wallet.js",[],"/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/pages/market-place.js",["462"],"import React from 'react'\nimport Layout from 'container/Layout'\nimport { Box, Heading, Image, Text } from '@chakra-ui/react'\nimport BuyerCard from 'components/Cards/BuyerCard'\n\nimport IllustrationImage from '../assets/images/home/illustration.png'\nimport Oval from '../assets/images/Oval.svg'\n\nconst buyers = [\n  {\n    id: 1,\n    image: Oval,\n    name: 'John Clinton',\n    address: 'Accra | John Clinton Company Limited',\n    amtLeft: '2100',\n    amtNeeded: '3000',\n    amtBought: '900',\n    price: '$30.00'\n  },\n  {\n    id: 2,\n    image: Oval,\n    name: 'Georgina Adzorgenu',\n    address: 'Ayikuma | Approcon Enterprise Limited',\n    amtLeft: '800',\n    amtNeeded: '2000',\n    amtBought: '1200',\n    price: '$50.00'\n  }\n]\n\nconst Marketplace = () => {\n  document.title = 'Complete Farmer | Marketplace'\n\n  return (\n    <Layout>\n      <Box pos='relative'>\n        <Image src={IllustrationImage} h={{ md: 115 }} w='100%' objectFit='cover' />\n        <Box pos='absolute' top={{ md: 40 }} left={{ md: 16 }}>\n          <Heading as='h3' fontSize={{ md: '4xl' }}>\n            Welcome to your marketplace\n          </Heading>\n          <Text>Sell your produce to the right buyer at a good price</Text>\n        </Box>\n      </Box>\n      <Box my={6} textAlign='center'>\n        <Heading as='h4' fontSize={{ md: '2xl' }}>\n          Here's a list of available buyers\n        </Heading>\n      </Box>\n      <Box>\n        {buyers.map(buyer => (\n          <BuyerCard\n            key={buyer.name}\n            name={buyer.name}\n            address={buyer.address}\n            image={buyer.image}\n            amtLeft={buyer.amtLeft}\n            amtNeeded={buyer.amtNeeded}\n            amtBought={buyer.amtBought}\n            price={buyer.price}\n          />\n        ))}\n      </Box>\n    </Layout>\n  )\n}\n\nexport default Marketplace\n","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/pages/farm-board.js",[],"/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/pages/start-farm/index.js",[],"/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/pages/start-farm/cooperative.js",["463"],"import React from 'react'\nimport { Box, Flex, Image } from '@chakra-ui/react'\nimport CropSelection from 'components/StartFarmProcess/CropSelection'\nimport OtherSteps from 'components/StartFarmProcess/OtherSteps'\nimport useComponent from 'context/component'\n\nconst Cooperative = () => {\n  document.title = 'Complete Farmer | Cooperative'\n\n  const { step } = useComponent()\n\n  const getContent = value => {\n    switch (value) {\n      case 0:\n        return <CropSelection />\n      case 1:\n        return <OtherSteps />\n      default:\n        return null\n    }\n  }\n\n  return (\n    <Box>\n      <Flex\n        align='center'\n        w='100vw'\n        h={{ md: 20 }}\n        pos='fixed'\n        top={0}\n        bg='white'\n        shadow='md'\n        px={{ md: 20 }}\n      >\n        <Box h={{ md: 12 }}>\n          <Image h='100%' src={require('../../assets/images/logo.png').default} />\n        </Box>\n      </Flex>\n\n      {getContent(step)}\n    </Box>\n  )\n}\n\nexport default Cooperative\n","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/pages/start-farm/individual.js",["464"],"import React from 'react'\nimport { Box, Flex, Image } from '@chakra-ui/react'\n\nimport CropSelection from 'components/StartFarmProcess/CropSelection'\nimport OtherSteps from 'components/StartFarmProcess/OtherSteps'\n\nimport useComponent from 'context/component'\n\nconst Individual = () => {\n  document.title = 'Complete Farmer | Individual'\n\n  const { step } = useComponent()\n\n  const getContent = value => {\n    switch (value) {\n      case 0:\n        return <CropSelection />\n      case 1:\n        return <OtherSteps />\n      default:\n        return null\n    }\n  }\n\n  return (\n    <Box>\n      <Flex\n        align='center'\n        w='100vw'\n        h={{ md: 20 }}\n        pos='fixed'\n        top={0}\n        bg='white'\n        shadow='md'\n        px={{ md: 20 }}\n      >\n        <Box h={{ md: 12 }}>\n          <Image h='100%' src={require('../../assets/images/logo.png').default} />\n        </Box>\n      </Flex>\n\n      {getContent(step)}\n    </Box>\n  )\n}\n\nexport default Individual\n","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Cards/FarmInfo.js",[],"/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Button/ArrowButton.js",[],"/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Button/index.js",[],"/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/container/Header.js",["465","466"],"import React from 'react'\nimport { Avatar, Box, Flex, Icon, Image, Link, Text } from '@chakra-ui/react'\nimport { motion } from 'framer-motion'\nimport { Menu } from '@headlessui/react'\nimport { FiChevronDown, FiChevronUp, FiUser } from 'react-icons/fi'\nimport { BiCog, BiSupport, BiHistory } from 'react-icons/bi'\nimport { HiOutlineLogout } from 'react-icons/hi'\nimport { BsBell, BsStar, BsPlus } from 'react-icons/bs'\n\nimport Logo from '../assets/images/logo.png'\nimport useAuth from 'context/auth'\n\nconst menuLinks = [\n  { name: 'Profile', icon: FiUser, link: '/profile' },\n  { name: 'History', icon: BiHistory, link: '/history' },\n  { name: 'Settings', icon: BiCog, link: '/settings' },\n  { name: 'Help Center', icon: BiSupport, link: '/help' }\n]\n\nconst MotionBox = motion.custom(Box)\n\nconst Header = () => {\n  const { isAuthenticated, logout } = useAuth()\n  const { user } = isAuthenticated()\n\n  return (\n    <Flex\n      as='header'\n      gridArea='header'\n      align='center'\n      justify='space-between'\n      w='100%'\n      h={{ md: 20 }}\n      bg='white'\n      pos='fixed'\n      top={0}\n      zIndex={50}\n      borderBottomWidth={1}\n      borderBottomColor='gray.300'\n      px={{ md: 24 }}\n    >\n      <Box>\n        <Image src={Logo} w={{ md: 12 }} />\n      </Box>\n\n      <Flex align='center'>\n        <Flex align='center' mr={10}>\n          <Box as='button' role='button' aria-label='Support'>\n            <Icon as={BsPlus} boxSize={6} />\n          </Box>\n          <Box as='button' role='button' aria-label='Support' ml={6}>\n            <Icon as={BsStar} boxSize={5} />\n          </Box>\n          <Box as='button' role='button' aria-label='Notification' ml={6}>\n            <Icon as={BsBell} boxSize={5} />\n          </Box>\n        </Flex>\n\n        <Menu as={Box} ml={2}>\n          {({ open }) => (\n            <Box>\n              <Menu.Button as={Box} _focus={{ outline: 'none' }} cursor='pointer'>\n                <Flex align='center'>\n                  <Avatar size='sm' src={user?.avatar} name={user?.firstName} />\n                  <Text ml={2}>Hi {user?.firstName}</Text>\n                  <Box>\n                    <Icon ml={2} as={open ? FiChevronUp : FiChevronDown} boxSize={6} />\n                  </Box>\n                </Flex>\n              </Menu.Button>\n              {open && (\n                <Menu.Items\n                  static\n                  as={MotionBox}\n                  initial={{ opacity: 0, height: 0 }}\n                  animate={{\n                    opacity: 1,\n                    height: 'auto',\n                    transition: { duration: 0.6 }\n                  }}\n                  exit={{ opacity: 0, height: 0 }}\n                  pos='absolute'\n                  bg='white'\n                  w={48}\n                  right={10}\n                  rounded='sm'\n                  mt={2}\n                  color='gray.600'\n                >\n                  {menuLinks.map(item => (\n                    <Menu.Item key={item.name}>\n                      {({ active }) => (\n                        <Link\n                          py={2}\n                          px={6}\n                          _hover={{\n                            textDecor: 'none'\n                          }}\n                          bg={active && 'cf.400'}\n                          color={active && 'white'}\n                          d='block'\n                          href={item.link}\n                        >\n                          <Icon as={item.icon} boxSize={4} mr={2} /> {item.name}\n                        </Link>\n                      )}\n                    </Menu.Item>\n                  ))}\n                  <Menu.Item>\n                    {({ active }) => (\n                      <Link\n                        py={2}\n                        px={6}\n                        _hover={{\n                          textDecor: 'none'\n                        }}\n                        bg={active && 'cf.400'}\n                        color={active && 'white'}\n                        d='block'\n                        onClick={logout}\n                      >\n                        <Icon as={HiOutlineLogout} boxSize={4} mr={2} /> Logout\n                      </Link>\n                    )}\n                  </Menu.Item>\n                </Menu.Items>\n              )}\n            </Box>\n          )}\n        </Menu>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default Header\n","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/container/Layout.js",[],"/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Cards/OrdersCard.js",["467"],"import { Box, Flex, Grid, Heading } from '@chakra-ui/react'\nimport ArrowButton from 'components/Button/ArrowButton'\nimport React from 'react'\nimport FarmCard from './FarmCard'\n\nconst OrdersCard = () => {\n  const [state, setState] = React.useState('current')\n\n  return (\n    <Box p={20}>\n      <Box mb={10}>\n        <Heading as='h4' fontSize={{ md: '2xl' }} mb={6}>\n          Here’s how your farm(s) are doing\n        </Heading>\n        <Grid templateColumns={{ md: '70% 20%' }} gap={{ md: '10%' }}>\n          <Flex align='center' borderBottomWidth={1} borderBottomColor='gray.200'>\n            <Box\n              color={state === 'current' ? 'cf.400' : 'gray.700'}\n              onClick={() => setState('current')}\n              fontWeight={state === 'current' ? 'bold' : 'normal'}\n              cursor='pointer'\n              borderBottomWidth={state === 'current' && 2}\n              borderBottomColor='cf.400'\n              pb={3}\n            >\n              Current farms\n            </Box>\n            <Box mx={10} />\n            <Box\n              color={state === 'orders' ? 'cf.400' : 'gray.700'}\n              onClick={() => setState('orders')}\n              fontWeight={state === 'orders' ? 'bold' : 'normal'}\n              cursor='pointer'\n              borderBottomWidth={state === 'orders' && 2}\n              borderBottomColor='cf.400'\n              pb={3}\n            >\n              Orders\n            </Box>\n          </Flex>\n\n          <Box>\n            <ArrowButton />\n          </Box>\n        </Grid>\n      </Box>\n\n      <Box>\n        {state === 'current' && (\n          <Flex>\n            <FarmCard />\n          </Flex>\n        )}\n        {state === 'orders' && (\n          <Flex>\n            <FarmCard />\n          </Flex>\n        )}\n      </Box>\n    </Box>\n  )\n}\n\nexport default OrdersCard\n","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Cards/BuyerCard.js",["468","469","470"],"import React from 'react'\nimport {\n  Box,\n  Divider,\n  Progress,\n  Heading,\n  Spacer,\n  Flex,\n  Avatar,\n  Text,\n  Image\n} from '@chakra-ui/react'\nimport PropTypes from 'prop-types'\nimport ConfirmSale from 'components/Modals/ConfirmSale'\n\nconst BuyerCard = ({ image, name, address, amtLeft, amtBought, amtNeeded, price }) => (\n  <Flex justify='center'>\n    <Box py={6} my={6} w={{ md: '700px' }} bg='white' px={8}>\n      <Flex>\n        <Box my={1}>\n          <Flex>\n            <Avatar>\n              <Image src={image} />\n            </Avatar>\n            <Box ml={4}>\n              <Heading as='h6' mt={1} fontSize={{ md: 'md' }}>\n                {name}\n              </Heading>\n              <Text fontSize='xs' mt={-1}>\n                {address}\n              </Text>\n            </Box>\n          </Flex>\n        </Box>\n        <Spacer />\n        <ConfirmSale amtLeft={amtLeft} name={name} amtBought={amtBought} price={price} />\n      </Flex>\n      <Box mt={4}>\n        <Flex>\n          <Box rounded='20px' bg='cf.200' pt={1} px={2}>\n            <Text color='cf.400' fontSize='10px' textAlign='center'>\n              Offer\n            </Text>\n          </Box>\n          <Text as='h6' fontSize='xs' mt={1} ml={3}>\n            {price} per tonne\n          </Text>\n        </Flex>\n      </Box>\n      <Progress value={60} rounded='lg' colorScheme='cfButton' size='lg' mt={2} />\n      <Box mt={3}>\n        <Flex>\n          <Text as='h6' fontWeight='bold' fontSize='sm'>\n            Need {amtNeeded} tonnes\n          </Text>\n          <Divider orientation='vertical' h={5} borderColor='gray.600' mx={4} />\n          <Text as='h6' fontWeight='bold' fontSize='sm'>\n            {amtBought} tonnes bought\n          </Text>\n          <Divider orientation='vertical' h={5} borderColor='gray.600' mx={4} />\n          <Text as='h6' fontWeight='bold' fontSize='sm'>\n            {amtLeft} tonnes left\n          </Text>\n        </Flex>\n      </Box>\n    </Box>\n  </Flex>\n)\n\nBuyerCard.propTypes = {\n  name: PropTypes.string.isRequired,\n  address: PropTypes.string.isRequired,\n  image: PropTypes.any.isRequired,\n  btntitle: PropTypes.string.isRequired,\n  amtNeeded: PropTypes.string.isRequired,\n  amtBought: PropTypes.string.isRequired,\n  amtLeft: PropTypes.string.isRequired,\n  price: PropTypes.string.isRequired\n}\n\nexport default BuyerCard\n","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Cards/WarehouseCard.js",["471"],"import React from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  Box,\n  Button,\n  Divider,\n  Heading,\n  Flex,\n  ListItem,\n  List,\n  Avatar,\n  Text,\n  Image\n} from '@chakra-ui/react'\n\nconst WarehouseCard = ({ name, location, image, weight, bags, quantity, condition, mr, ml }) => (\n  <Box>\n    <Flex justify='center'>\n      <Box rounded='lg' bg='white' mr={mr} ml={ml} p={6}>\n        <Flex mb={4}>\n          <Avatar bg='gray.100'>\n            <Image src={image} />\n          </Avatar>\n          <Box ml={2}>\n            <Heading as='h6' mb={{ md: 2 }} fontSize={{ md: 'lg' }}>\n              {name}\n            </Heading>\n            <Text fontSize='xs' mt={{ md: -2 }}>\n              {location}\n            </Text>\n          </Box>\n        </Flex>\n        <Divider borderColor='gray.300' />\n        <Box>\n          <Flex>\n            <List my={3}>\n              <ListItem fontSize='xs'>\n                Volume -{' '}\n                <span fontSize='sm' pl={2}>\n                  {quantity}\n                </span>\n              </ListItem>\n              <ListItem fontSize='xs'>\n                Weight -{' '}\n                <span fontSize='sm' pl={2}>\n                  {weight}\n                </span>\n              </ListItem>\n              <ListItem fontSize='xs'>\n                Number of Bags -\n                <span fontSize='sm' pl={2}>\n                  {' '}\n                  {bags}\n                </span>\n              </ListItem>\n              <ListItem fontSize='xs'>\n                Yeild conditions -\n                <span fontSize='sm' pl={2}>\n                  {' '}\n                  {condition}\n                </span>\n              </ListItem>\n            </List>\n            <Box ml={6} my={3}>\n              <Box rounded='40px' bg='cf.200' my={1} pt={1} px={2}>\n                <Text color='cf.400' fontSize='9px' textAlign='center'>\n                  Pending Order\n                </Text>\n              </Box>\n              <Text as='h6' fontSize='9px' ml={2} fontWeight='bold'>\n                80% Complete\n              </Text>\n            </Box>\n          </Flex>\n        </Box>\n        <Button\n          colorScheme='linear'\n          rounded='30px'\n          fontSize='xs'\n          as='a'\n          href='/marketplace'\n          fontWeight='bold'\n          width='100%'\n        >\n          Sell\n        </Button>\n      </Box>\n    </Flex>\n  </Box>\n)\n\nWarehouseCard.propTypes = {\n  name: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  image: PropTypes.any.isRequired,\n  buttontitle: PropTypes.string.isRequired,\n  weight: PropTypes.string.isRequired,\n  bags: PropTypes.string.isRequired,\n  quantity: PropTypes.string.isRequired,\n  condition: PropTypes.string.isRequired,\n  mr: PropTypes.any,\n  ml: PropTypes.any\n}\n\nexport default WarehouseCard\n","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Cards/GetStartedNowCard.js",[],"/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Modals/ConfirmReceiptDelete.js",["472","473"],"import React from 'react'\nimport {\n  Text,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalBody,\n  Box,\n  Flex,\n  useDisclosure,\n  Button,\n  Icon\n} from '@chakra-ui/react'\nimport useApi from 'context/api'\nimport { VscTrash } from 'react-icons/vsc'\n\nconst ConfirmReceiptDelete = () => {\n  const { isOpen, onClose, onOpen } = useDisclosure()\n  const { deleteBankTransfer } = useApi()\n\n  let payment_id = '5fd79e7c6d80ce789ab140be'\n\n  const deleteReceipt = async id => {\n    try {\n      await deleteBankTransfer(id)\n    } catch (error) {\n      return error\n    }\n  }\n\n  const handleKeyPress = e => {\n    const key = e.keyCode || e.charCode\n    if (key === 13 || e.key === 'Enter') {\n      e.preventDefault()\n      e.stopPropagation()\n      deleteReceipt(payment_id)\n    }\n  }\n\n  return (\n    <>\n      <Button colorScheme='linear' rounded='30px' ml={2} mt={4} onClick={onOpen}>\n        <Icon as={VscTrash} size={6} />\n      </Button>\n      <Modal\n        isOpen={isOpen}\n        onClose={onClose}\n        mt={10}\n        variant='outline'\n        borderColor='black'\n        borderWidth={5}\n        colorScheme='white'\n        isCentered\n      >\n        <ModalOverlay />\n        <ModalContent>\n          <ModalBody>\n            <Box my='30px' mx={1} textAlign='center'>\n              <Text>Are you sure you want to delete the bank&lsquo;s transfer receipt?</Text>\n              <Flex mt={4} justify='center'>\n                <Button\n                  mr={4}\n                  onClick={onClose}\n                  rounded='30px'\n                  fontWeight='thin'\n                  variant='outline'\n                  borderColor='black'\n                  w={{ md: '90px' }}\n                >\n                  No\n                </Button>\n                <Button\n                  colorScheme='linear'\n                  rounded='30px'\n                  w={{ md: '90px' }}\n                  onKeyPress={handleKeyPress}\n                  onClick={async => {\n                    deleteReceipt(payment_id)\n                    onClose()\n                  }}\n                >\n                  Yes\n                </Button>\n              </Flex>\n            </Box>\n          </ModalBody>\n        </ModalContent>\n      </Modal>\n    </>\n  )\n}\n\nexport default ConfirmReceiptDelete\n","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Modals/UploadDocument.js",["474","475","476","477"],"import React, { useState } from 'react'\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalBody,\n  ModalCloseButton,\n  useDisclosure,\n  Button,\n  Box,\n  Heading,\n  Flex,\n  Divider,\n  Image,\n  Text,\n  Spacer,\n  CloseButton\n} from '@chakra-ui/react'\nimport { Formik, Field } from 'formik'\nimport useApi from 'context/api'\nimport Upload from 'components/Form/upload'\nimport corporate from '../../assets/images/emptystate/corporate.png'\n\nconst UploadDocument = () => {\n  const { uploadPaymentDetails } = useApi()\n  const [modal, setmodal] = useState(true)\n  // const [ doc, setDoc ] = useState(true)\n\n  const initialValues = {\n    payment_id: '5fd79e7c6d80ce789ab140be',\n    file: undefined\n  }\n\n  const { isOpen, onClose, onOpen } = useDisclosure()\n  const onSubmit = async values => {\n    try {\n      const formData = new FormData()\n      formData.append('bank_transfer_receipt', values.file)\n      await uploadPaymentDetails(values.payment_id, formData)\n      setmodal(false)\n    } catch (error) {\n      return Promise.reject(error)\n    }\n  }\n\n  return (\n    <>\n      <Button\n        mt={4}\n        colorScheme='linear'\n        rounded='30px'\n        fontSize='xs'\n        w={{ md: '150px' }}\n        onClick={onOpen}\n      >\n        Complete order\n      </Button>\n      <Modal\n        isOpen={isOpen}\n        onClose={onClose}\n        mt={10}\n        variant='outline'\n        borderColor='black'\n        borderWidth={5}\n        colorScheme='white'\n        isCentered\n      >\n        <ModalOverlay />\n        {modal ? (\n          <ModalContent>\n            <Flex m={2}>\n              <Box ml={10} textAlign='center'>\n                <Heading as='h4' fontWeight='bold' fontSize={{ md: 'xl' }}>\n                  Complete your order\n                </Heading>\n              </Box>\n              <ModalCloseButton color='cf.400' />\n            </Flex>\n            <Divider orientation='horizontal' borderColor='gray.400' />\n            <ModalBody>\n              <Box mt='20px' w={{ md: '400px' }}>\n                <Formik initialValues={initialValues} onSubmit={onSubmit}>\n                  {({ handleSubmit, values, ...rest }) => (\n                    <form onSubmit={handleSubmit}>\n                      {!values.file ? (\n                        <Field\n                          component={Upload}\n                          label='Upload an image of your bank payslip here'\n                          accept='image/jpeg, image/jpg'\n                          name='file'\n                        />\n                      ) : (\n                        <Flex w='130px' mt={4} as='button' bgColor='cf.200' p={2} rounded='30px'>\n                          <Text pt={1}>{values.file.name}</Text>\n                          <CloseButton\n                            _hover={{ textDecoration: 'none' }}\n                            bg='none'\n                            color='cf.400'\n                          />\n                        </Flex>\n                      )}\n                      <Flex pb={8} justify='center' pt={3}>\n                        <Button\n                          type='submit'\n                          w={{ md: '50%' }}\n                          colorScheme='linear'\n                          rounded='30px'\n                          fontSize='xs'\n                        >\n                          Submit\n                        </Button>\n                      </Flex>\n                    </form>\n                  )}\n                </Formik>\n              </Box>\n            </ModalBody>\n          </ModalContent>\n        ) : (\n          <ModalContent>\n            <Flex mt={2} justify='center'>\n              <Box ml={10} j>\n                <Heading as='h4' fontWeight='bold' fontSize={{ md: 'xl' }}>\n                  Upload successful\n                </Heading>\n              </Box>\n              <Spacer />\n              <ModalCloseButton color='cf.400' />\n            </Flex>\n            <Divider orientation='horizontal' borderColor='gray.400' />\n            <ModalBody>\n              <Box my='20px' mx={1} textAlign='center'>\n                <Text>Thank you uploading your bank payslip </Text>\n                <Text>Confirmation takes 1-2 weeks for us to get back to you </Text>\n                <Text mx={10} mt='30px'>\n                  In the meantime, why dont you learn a few insights about farming\n                </Text>\n                <Flex justify='center' mt={3}>\n                  <Image src={corporate} w={{ md: '180px' }} h={{ md: '110px' }} />\n                </Flex>\n                <Button\n                  as='a'\n                  href='/dashboard'\n                  colorScheme='linear'\n                  rounded='30px'\n                  my={6}\n                  w={{ md: '60%' }}\n                >\n                  Go to farmboard\n                </Button>\n              </Box>\n            </ModalBody>\n          </ModalContent>\n        )}\n      </Modal>\n    </>\n  )\n}\nexport default UploadDocument\n","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Utils/FarmBoardGreetings.js",["478","479"],"import React from 'react'\nimport { Box, Heading, Image, Text } from '@chakra-ui/react'\nimport IllustrationImage from '../../assets/images/home/illustration.png'\n\nconst Greetings = () => {\n  return (\n    <Box pos='relative'>\n      <Image src={IllustrationImage} h={{ md: 115 }} w='100%' objectFit='cover' />\n      <Box pos='absolute' top={{ md: 40 }} left={{ md: 16 }}>\n        <Heading as='h3' fontSize={{ md: '4xl' }} mb={5}>\n          Welcome to your farm booard\n        </Heading>\n        <Text letterSpacing={3}>\n          Here's where you view, share and like all <br /> the news from your farm(s)\n        </Text>\n      </Box>\n    </Box>\n  )\n}\n\nexport default Greetings\n","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Utils/Greetings.js",["480"],"import React from 'react'\nimport { Box, Heading, Image, Text } from '@chakra-ui/react'\n\nimport useAuth from 'context/auth'\n\nimport IllustrationImage from '../../assets/images/home/illustration.png'\n\nconst Greetings = () => {\n  const { isAuthenticated } = useAuth()\n  const { user } = isAuthenticated()\n  return (\n    <Box pos='relative'>\n      <Image src={IllustrationImage} h={{ md: 115 }} w='100%' objectFit='cover' />\n      <Box pos='absolute' top={{ md: 40 }} left={{ md: 16 }}>\n        <Heading as='h3' fontSize={{ md: '4xl' }}>\n          Welcome Farmer {user?.firstName}\n        </Heading>\n        <Text>Get started by farming individually or with a group.</Text>\n      </Box>\n    </Box>\n  )\n}\n\nexport default Greetings\n","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/FarmBoard/FarmBoard.js",[],"/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/EmptyStates/HomeEmptyState.js",["481"],"import { Box, Flex, Heading, Text } from '@chakra-ui/react'\nimport CropCategorySelection from 'components/Cards/CropCategorySelection'\nimport React from 'react'\n\nconst HomeEmptyState = () => (\n  <Box>\n    <Box textAlign='center' px={{ md: 16 }}>\n      <Box py={{ md: 20 }}>\n        <Heading as='h4' fontSize={{ md: 'xl' }}>\n          New and exciting crops to start with\n        </Heading>\n        <Text fontSize='sm'>\n          With over 7 crops farmed and over 2,000 trusted\n          <br /> digital farmers, we continue to change the world together with you\n        </Text>\n      </Box>\n\n      <Flex align='center' justify='space-between' mb={5}>\n        <Text fontSize={{ md: '2xl' }}>Choose a crop to start farming</Text>\n      </Flex>\n\n      <CropCategorySelection />\n    </Box>\n  </Box>\n)\n\nexport default HomeEmptyState\n","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/EmptyStates/FarmsEmptyState.js",["482"],"import React from 'react'\nimport { Box, Button, Heading, Icon, Image, Link, Text } from '@chakra-ui/react'\nimport CorporateIllustration from '../../assets/images/emptystate/corporate.png'\nimport { MdKeyboardArrowRight } from 'react-icons/md'\n\nconst FarmsEmptyState = () => {\n  return (\n    <Box bg='rgba(155, 155, 155, 0.1)'>\n      <Box bg='rgba(155, 155, 155, 0.1)' p={{ md: 10 }} mt={{ md: 32 }}>\n        <Box textAlign='center'>\n          <Heading as='h3' fontSize={{ md: '3xl' }} mt={{ md: 6 }} mb={4}>\n            You currently have no farm(s)\n          </Heading>\n          <Text>Start a farm as an individual or a cooperative and earn long term rewards</Text>\n        </Box>\n\n        <Box my={{ md: 10 }} textAlign='center'>\n          <Link _hover={{ textDecor: 'none' }} color='cf.400' d='block' mb={4}>\n            Learn more <Icon as={MdKeyboardArrowRight} />\n          </Link>\n\n          <Button colorScheme='linear' rounded='30px' w={64} h={12} shadow='md'>\n            Start a farm\n          </Button>\n        </Box>\n\n        <Box mx='auto' w={{ md: '50%' }} my={{ md: 16 }}>\n          <Image src={CorporateIllustration} />\n        </Box>\n      </Box>\n    </Box>\n  )\n}\n\nexport default FarmsEmptyState\n","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Cards/Document/DocumentCard.js",["483","484","485"],"import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Box, Text, Flex, Icon, useDisclosure } from '@chakra-ui/react'\nimport { arrowDown } from 'theme/Icons'\nimport DocumentPreview from './DocumentPreview'\nimport { FaCreditCard, FaFileInvoice, FaFileContract } from 'react-icons/fa'\n\nconst DocumentCard = ({ title, description, link, mt }) => {\n  const { isOpen, onClose, onOpen } = useDisclosure()\n\n  const images = image => {\n    switch (image) {\n      case 'Receipt':\n        return FaCreditCard\n      case 'Contract':\n        return FaFileContract\n      case 'Invoice':\n        return FaFileInvoice\n      default:\n        return null\n    }\n  }\n\n  return (\n    <Box w={60} mt={mt} as='button' borderWidth={1} rounded='md' onClick={onOpen}>\n      <DocumentPreview isOpen={isOpen} onClose={onClose} link={link} />\n      <Box>\n        <Text textAlign='center' w={60} py={1} fontWeight={900} fontFamily='heading' fontSize='lg'>\n          {title}\n        </Text>\n      </Box>\n      <Flex\n        align='center'\n        justify='center'\n        direction='column'\n        bg='cf.400'\n        w={60}\n        h={60}\n        p={1}\n        shadow='sm'\n        pos='relative'\n      >\n        <a href={link} download>\n          <Flex\n            as='button'\n            align='center'\n            justify='center'\n            pos='absolute'\n            right={4}\n            top={4}\n            w={5}\n            h={5}\n            rounded='100%'\n            bg='cf.400'\n            color='white'\n            boxShadow='lg'\n            aria-labelledby='download button'\n            click={e => e.preventDefault()}\n          >\n            <Icon as={arrowDown} bg='white' rounded='lg' color='cf.400' pl='1' />\n          </Flex>\n        </a>\n        <Icon as={images(title)} color='white' w='100px' h='100px' />\n        <Text fontSize='sm' mt={2} color='white' textAlign='center'>\n          {description}\n        </Text>\n      </Flex>\n    </Box>\n  )\n}\n\nDocumentCard.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  link: PropTypes.string,\n  mt: PropTypes.string\n}\n\nexport default DocumentCard\n","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/FetchCard/index.js",["486","487"],"import React from 'react'\nimport PropTypes from 'prop-types'\nimport { IoIosRefresh } from 'react-icons/io'\nimport { Flex, Text, Button } from '@chakra-ui/react'\nimport Loader from 'react-loader-spinner'\n\nconst FetchCard = ({ loading, error, reload, ...rest }) => {\n  return (\n    <Flex {...rest}>\n      <Flex textAlign='center' align='center' justify='center' direction='column'>\n        <>\n          {loading && <Loader type='Oval' color='#417505' height={40} width={40} />}\n          {error && (\n            <>\n              <Text fontSize='md' ml={2}>\n                Something went wrong.\n              </Text>\n              <Button\n                bg='cf.800'\n                variant='solid'\n                color='white'\n                size='md'\n                rounded='20px'\n                fontSize={30}\n                onClick={() => reload()}\n                leftIcon={<IoIosRefresh />}\n                _hover={{ bg: 'cf.800' }}\n              >\n                <Text fontSize='md'>Try again</Text>\n              </Button>\n            </>\n          )}\n        </>\n      </Flex>\n    </Flex>\n  )\n}\n\nFetchCard.propTypes = {\n  reload: PropTypes.func.isRequired,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.any\n}\n\nexport default FetchCard\n","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/DynamicProfile/index.js",[],"/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/container/Sidebar.js",["488","489"],"import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Box, Flex, Icon, Link, Text } from '@chakra-ui/react'\nimport { NavLink } from 'react-router-dom'\nimport { farm, home, wallet, market, Guide, Resources, logout } from 'theme/Icons'\nimport { MdChatBubbleOutline } from 'react-icons/md'\nimport { IoIosHelpCircle } from 'react-icons/io'\nimport { BsChevronDown, BsChevronUp } from 'react-icons/bs'\n\nconst menuLink = [\n  { icon: home, path: '/dashboard', name: 'Home', size: 5 },\n  { icon: farm, path: '/farms', name: 'Farm board', size: 4 },\n  { icon: wallet, path: '/wallet', name: 'Farm Wallet', size: 4 },\n  { icon: market, path: '/marketplace', name: 'Marketplace', size: 4 },\n  { icon: MdChatBubbleOutline, path: '/market', name: 'Forum', size: 4 }\n]\n\nconst links = [\n  {\n    title: 'Learning',\n    parent: 'learning',\n    submenu: [\n      { icon: Guide, path: '/guide', name: 'How-To-Guide', size: 5 },\n      { icon: Resources, path: '/resources', name: 'Resources', size: 5 },\n      {\n        icon: IoIosHelpCircle,\n        path: '/support',\n        name: 'Customer Support',\n        size: 5\n      }\n    ]\n  }\n]\n\nconst Sidebar = ({ currentPath }) => {\n  const [toggleMenus, setToggleMenus] = React.useState(true)\n\n  return (\n    <Box\n      as='aside'\n      gridArea='aside'\n      pos='fixed'\n      bottom={0}\n      left={0}\n      h={{ lg: '100vh' }}\n      bg='white'\n      zIndex={20}\n      pt={40}\n      boxShadow=' sm'\n      px={{ md: 2 }}\n      color='gray.600'\n      pr={{ md: 5 }}\n    >\n      <Text as='ul'>\n        {menuLink.map(item => (\n          <Link\n            key={item.name}\n            d='flex'\n            alignItems='center'\n            pl={{ md: 4 }}\n            pr={{ md: 4 }}\n            py={{ md: 2 }}\n            rounded='lg'\n            activeClassName='activeClasName'\n            as={NavLink}\n            to={item.path}\n            cursor='pointer'\n            className='active-link'\n            transition='background-color .2s ease-in'\n            _hover={{\n              textDecor: 'none',\n              color: 'gray.700',\n              bg: 'gray.50',\n              rounded: 'md'\n            }}\n            _activeLink={{ color: 'cf.400', bg: 'cf.300' }}\n          >\n            <Icon as={item.icon} boxSize={item.size} mr={2} />\n            <Text fontSize='sm' textAlign='center' mt={1}>\n              {item.name}\n            </Text>\n          </Link>\n        ))}\n      </Text>\n\n      <Text as='ul' mt={{ md: 24 }}>\n        {links.map(item => (\n          <Flex key={item.title} as='li' direction='column'>\n            <Flex\n              align='center'\n              as='button'\n              role='button'\n              aria-label='Menu Button'\n              onClick={() => setToggleMenus(!toggleMenus)}\n            >\n              <Icon as={toggleMenus ? BsChevronUp : BsChevronDown} boxSize={4} mr={1} />\n              <Text>{item.title}</Text>\n            </Flex>\n            {toggleMenus && (\n              <Box as='ul' color='gray.600'>\n                {item.submenu.map(item => (\n                  <Link\n                    key={item.name}\n                    d='flex'\n                    alignItems='center'\n                    pr={{ md: 3 }}\n                    pl={{ md: 4 }}\n                    py={{ md: 2 }}\n                    rounded='lg'\n                    activeClassName='activeClasName'\n                    as={NavLink}\n                    to={item.path}\n                    cursor='pointer'\n                    className='active-link'\n                    transition='background-color .2s ease-in'\n                    _hover={{\n                      textDecor: 'none',\n                      color: 'gray.700',\n                      bg: 'gray.50',\n                      rounded: 'md'\n                    }}\n                    _activeLink={{\n                      color: 'cf.400',\n                      bg: 'cf.300'\n                    }}\n                  >\n                    <Icon as={item.icon} boxSize={item.size} mr={1} />\n                    <Text fontSize='sm' textAlign='center' mt={1}>\n                      {item.name}\n                    </Text>\n                  </Link>\n                ))}\n              </Box>\n            )}\n            <Flex\n              align='center'\n              py={{ md: 2 }}\n              rounded='lg'\n              _hover={{\n                textDecor: 'none',\n                color: 'gray.700',\n                bg: 'gray.50',\n                rounded: 'md'\n              }}\n              pl={{ md: 4 }}\n              pr={{ md: 3 }}\n              color='gray.600'\n              as='button'\n              role='button'\n              aria-label='Logout Button'\n              transition='background-color .2s ease-in'\n            >\n              <Icon as={logout} boxSize={5} mr={2} />\n              <Text fontSize='sm' textAlign='center' mt={1}>\n                Logout\n              </Text>\n            </Flex>\n          </Flex>\n        ))}\n      </Text>\n    </Box>\n  )\n}\n\nSidebar.propTypes = {\n  currentPath: PropTypes.string.isRequired\n}\n\nexport default Sidebar\n","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Cards/FarmCard.js",["490","491"],"import { Avatar, Box, Divider, Flex, Grid, Heading, Image, Tag, Text } from '@chakra-ui/react'\nimport Step from 'components/Form/Step'\nimport React from 'react'\n\nconst FarmCard = () => (\n  <Box rounded='xl' shadow='md' p={10} bg='white'>\n    <Flex align='center' justify='space-between'>\n      <Flex align='center'>\n        <Box mr={4}>\n          <Avatar src={require('../../assets/images/soya.png').default} />\n        </Box>\n\n        <Box>\n          <Heading as='h4' fontSize={{ md: '2xl' }}>\n            John’s Farm\n          </Heading>\n          <Text color='gray.500' mt={-1}>\n            Agyata, Eastern region\n          </Text>\n        </Box>\n      </Flex>\n\n      <Tag bg='cf.200' color='cf.400' rounded='3xl' fontSize='sm' px={4} textAlign='center'>\n        Lvl 1\n      </Tag>\n    </Flex>\n    <Divider orientation='horizontal' borderColor='gray.300' my={6} />\n\n    <Grid templateColumns={{ md: 'repeat(2, 1fr)' }} gap={16}>\n      <Box>\n        <Heading as='h4' fontSize={{ md: '2xl' }}>\n          Progress on farm\n        </Heading>\n        <Divider orientation='horizontal' borderColor='gray.300' my={3} />\n        <Box>\n          <Step />\n          <Step />\n          <Step />\n          <Step />\n          <Step />\n        </Box>\n      </Box>\n      <Box>\n        <Image src={require('../../assets/images/farmimg.png').default} />\n      </Box>\n    </Grid>\n  </Box>\n)\n\nexport default FarmCard\n","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Cards/Document/DocumentPreview.js",["492","493"],"import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { Modal, ModalOverlay, ModalContent, Box, ModalCloseButton } from '@chakra-ui/react'\n\nconst DocumentPreview = ({ link, isOpen, onClose }) => {\n  const [shown] = useState(true)\n\n  const previewModal = () => (\n    <Box\n      bg='#fff'\n      position='fixed'\n      top='50%'\n      left='50%'\n      transform='translate(-50%, -50%)'\n      m='auto'\n      height='500px'\n      width={{ md: '80%' }}\n      zIndex='9999px'\n      overflow='auto'\n    >\n      <Box pos='relative'>\n        <Box position='absolute' right={0} pr={{ md: 6 }}>\n          <ModalCloseButton color='white' />\n        </Box>\n\n        <iframe title='nothing' src={link + '#toolbar=0'} width='100%' height='500px' />\n      </Box>\n    </Box>\n  )\n\n  return (\n    <>\n      <Modal isOpen={isOpen} onClose={onClose}>\n        <ModalOverlay />\n        <ModalContent>{shown && previewModal()}</ModalContent>\n      </Modal>\n    </>\n  )\n}\n\nDocumentPreview.propTypes = {\n  link: PropTypes.any,\n  isOpen: PropTypes.any,\n  onClose: PropTypes.func\n}\n\nexport default DocumentPreview\n","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Cards/YourFarm.js",["494","495"],"import { Box, Flex, Heading, Text, Image, Badge } from '@chakra-ui/react'\nimport React from 'react'\nimport Button from 'components/Button/index'\nimport Bitmap from 'assets/images/Bitmap.png'\n\nconst YourFarmCard = () => {\n  const dummyFarms = [\n    { name: 'FarmX', color: '#FF9F9F' },\n    { name: 'FarmY', color: '#76B1F6' },\n    { name: 'FarmZ', color: '#EEE463' },\n    { name: 'FarmT', color: '#AED033' }\n  ]\n  return (\n    <Box bg='white' w='100%' mb={5}>\n      <Box w='100%'>\n        <Flex align='center' justify='center' direction='column' p={10} w='100%'>\n          <Flex direction='row' justify='space-around' w='100%'>\n            <Heading as='h6' fontSize='lg'>\n              Your Farm(s)\n            </Heading>\n            <Button\n              borderWidth={2}\n              borderColor='black'\n              colorScheme='white'\n              btntitle='Start a farm'\n              color='black'\n            />\n          </Flex>\n          <Flex direction='row' align='center' justify='center' m={10}>\n            {dummyFarms.map(farm => {\n              return (\n                <Flex key={farm.name} direction='column' align='center' justify='center' m={4}>\n                  <Text fontSize='md' mb={3}>\n                    {farm.name}\n                  </Text>\n                  <Box w='120px' h='120px' rounded='120px'>\n                    <Image w='100%' h='100%' rounded='100%' src={Bitmap} />\n                    <Badge\n                      position='absolute'\n                      top={735}\n                      bg={farm.color}\n                      rounded='25px'\n                      w='25px'\n                      h='25px'\n                    >\n                      <Box rounded='25px' w='25px' h='25px'></Box>\n                    </Badge>\n                  </Box>\n                </Flex>\n              )\n            })}\n          </Flex>\n        </Flex>\n      </Box>\n    </Box>\n  )\n}\n\nexport default YourFarmCard\n","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Cards/FarmBoardCard.js",["496","497","498","499","500","501","502","503"],"import React from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalBody,\n  ModalCloseButton,\n  useDisclosure,\n  Box,\n  Flex,\n  Divider,\n  Avatar,\n  Heading,\n  Text,\n  Icon,\n  Image,\n  Grid\n} from '@chakra-ui/react'\nimport { MdFavoriteBorder } from 'react-icons/md'\nimport { AiFillTwitterCircle, AiFillFacebook, AiFillLinkedin } from 'react-icons/ai'\nimport { RiShareForwardLine } from 'react-icons/ri'\nimport Button from 'components/Button'\nimport { Fragment } from 'react'\nimport { TwitterShareButton, LinkedinShareButton, FacebookShareButton } from 'react-share'\n\nconst FarmBoardCard = ({\n  w,\n  mr,\n  ml,\n  buttonMl,\n  buttonMr,\n  btntitle,\n  buttonColor,\n  buttonWidth,\n  buttonColorScheme,\n  likeCount,\n  levelColor,\n  postImageAlt,\n  headingImageAlt,\n  datePosted,\n  level,\n  whoseFarm,\n  farmLocation,\n  headingText,\n  headingIcon,\n  headingImage,\n  postType,\n  postContentText,\n  postImage,\n  buttonLabel,\n  redesign,\n  children,\n  AvatarSRC,\n  ...rest\n}) => {\n  const { isOpen, onClose, onOpen } = useDisclosure()\n  const shareUrl = 'http://completefarmer.com'\n\n  return (\n    <Box w={{ md: '100%' }} zIndex={10}>\n      <Flex justify='center' align='center'>\n        <Box\n          rounded='lg'\n          bg='white'\n          mr={mr}\n          ml={ml}\n          w={{ md: w || '80%' }}\n          boxShadow='0px 0px 15px 5px #ccc'\n          {...rest}\n        >\n          {redesign ? (\n            { children }\n          ) : (\n            <Fragment>\n              <Box p={5} w='100%'>\n                <Flex direction='row' align='center' justify='space-around'>\n                  <Box>\n                    <Flex direction='row' align='center'>\n                      <Avatar src={AvatarSRC} alt='noname' mr={6} />\n                      <Box pos='relative' mr={6}>\n                        <Heading as='h6' fontSize='lg'>\n                          {whoseFarm}\n                        </Heading>\n                        <Text fontSize='sm' color='rgba(155, 155, 155, 0.8)'>\n                          {farmLocation}\n                        </Text>\n                      </Box>\n                      <Flex\n                        rounded={15}\n                        mb={5}\n                        bg='rgba(155, 155, 155, 0.2)'\n                        minW={10}\n                        align='center'\n                        justify='center'\n                      >\n                        {level ? (\n                          <Text color={levelColor || 'cf.400'} fontSize='sm'>\n                            Lv {level}\n                          </Text>\n                        ) : null}\n                      </Flex>\n                    </Flex>\n                  </Box>\n                  <Box>\n                    <Box>\n                      <Text fontSize='sm' color='rgba(155, 155, 155, 0.8)'>\n                        {datePosted}\n                      </Text>\n                    </Box>\n                  </Box>\n                </Flex>\n              </Box>\n              <Divider borderColor='gray.300' w />\n              <Box p={5}>\n                <Flex pr={25} pl={25} direction='column' align='center' w='100%'>\n                  <Box pl={10}>\n                    <Flex justify='space-between' w='70%'>\n                      <Flex direction='row'>\n                        {headingImage ? (\n                          <Image src={headingImage} alt={headingImageAlt} boxSize={5} mr={5} />\n                        ) : (\n                          <Icon as={headingIcon} mr={5} boxSize={5} />\n                        )}\n                        <Heading as='h4' fontSize='lg'>\n                          {headingText}\n                        </Heading>\n                      </Flex>\n                      <Flex align='center' justify='center'>\n                        <Box pos='relative'>\n                          <Flex\n                            rounded={15}\n                            pr={5}\n                            pl={5}\n                            mb={5}\n                            bg='rgba(155, 155, 155, 0.2)'\n                            minW={10}\n                            align='center'\n                            justify='center'\n                          >\n                            <Text color='cf.400' fontSize='sm'>\n                              {postType}\n                            </Text>\n                          </Flex>\n                        </Box>\n                      </Flex>\n                    </Flex>\n                    <Grid\n                      templateColumns={{\n                        md: btntitle ? 'repeat(2, 1fr)' : 'repeat(1, 1fr'\n                      }}\n                    >\n                      <Text color='gray.500' fontSize='sm'>\n                        {postContentText}\n                      </Text>\n                      {btntitle ? (\n                        <Flex align='center' justify='center'>\n                          <Button\n                            w={buttonWidth}\n                            mr={buttonMr}\n                            ml={buttonMl}\n                            btntitle={btntitle}\n                            colorScheme={buttonColorScheme}\n                            color={buttonColor}\n                          />\n                        </Flex>\n                      ) : null}\n                    </Grid>\n                  </Box>\n                </Flex>\n              </Box>\n              {postImageAlt ? (\n                <Box>\n                  <Image minW='100%' src={postImage} alt={postImageAlt} />\n                </Box>\n              ) : null}\n              <Box>\n                <Box p={15}>\n                  <Flex direction='row' align='center' justify='flex-start' pl={10}>\n                    <Flex align='center' justify='center' mr={2}>\n                      <Icon boxSize={8} as={MdFavoriteBorder} mr={2} />\n                      <Text fontSize='xs' color='gray.500'>\n                        {likeCount}\n                      </Text>\n                    </Flex>\n                    {/*  */}\n                    <Icon boxSize={8} as={RiShareForwardLine} onClick={onOpen} />\n                    <Modal\n                      isOpen={isOpen}\n                      onClose={onClose}\n                      mt={10}\n                      variant='outline'\n                      borderColor='black'\n                      borderWidth={5}\n                      colorScheme='white'\n                      isCentered\n                    >\n                      <ModalOverlay />\n                      <ModalContent>\n                        <Flex mt={2} mb={3}>\n                          <Box ml={10}>\n                            <Heading as='h4' fontWeight='bold' fontSize={{ md: 'xl' }}>\n                              Share\n                            </Heading>\n                          </Box>\n                          <ModalCloseButton />\n                        </Flex>\n                        <Divider orientation='horizontal' borderColor='gray.400' />\n                        <ModalBody>\n                          <Flex direction='row' justify='center' align='center'>\n                            <Box\n                              as={TwitterShareButton}\n                              boxSize={50}\n                              title={postContentText}\n                              url={shareUrl}\n                              via={postContentText}\n                            >\n                              <Icon boxSize={8} as={AiFillTwitterCircle} />\n                            </Box>\n                            <Box\n                              as={LinkedinShareButton}\n                              source={shareUrl}\n                              boxSize={50}\n                              title={postContentText}\n                              url={shareUrl}\n                              via={postContentText}\n                            >\n                              <Icon boxSize={8} as={AiFillLinkedin} />\n                            </Box>\n                            <Box\n                              as={FacebookShareButton}\n                              boxSize={50}\n                              title={postContentText}\n                              url={shareUrl}\n                              via={postContentText}\n                            >\n                              <Icon boxSize={8} as={AiFillFacebook} />\n                            </Box>\n                          </Flex>\n                        </ModalBody>\n                      </ModalContent>\n                    </Modal>\n                  </Flex>\n                </Box>\n              </Box>\n            </Fragment>\n          )}\n        </Box>\n      </Flex>\n    </Box>\n  )\n}\n\nFarmBoardCard.propTypes = {\n  w: PropTypes.any,\n  mr: PropTypes.any,\n  ml: PropTypes.any,\n  postImageAlt: PropTypes.any,\n  buttonMl: PropTypes.any,\n  buttonMr: PropTypes.any,\n  btntitle: PropTypes.string.isRequired,\n  buttonWidth: PropTypes.any,\n  buttonColor: PropTypes.any,\n  buttonColorScheme: PropTypes.any,\n  buttonLabel: PropTypes.string.isRequired,\n  likeCount: PropTypes.number.isRequired,\n  level: PropTypes.number.isRequired,\n  levelColor: PropTypes.any.isRequired,\n  postImage: PropTypes.any.isRequired,\n  headingImageAlt: PropTypes.string.isRequired,\n  headingImage: PropTypes.any.isRequired,\n  whoseFarm: PropTypes.string.isRequired,\n  datePosted: PropTypes.any.isRequired,\n  farmLocation: PropTypes.string.isRequired,\n  AvatarSRC: PropTypes.any.isRequired,\n  headingIcon: PropTypes.any.isRequired,\n  headingText: PropTypes.string.isRequired,\n  postType: PropTypes.string.isRequired,\n  postContentText: PropTypes.string.isRequired,\n  redesign: PropTypes.bool.isRequired,\n  children: PropTypes.node.isRequired\n}\n\nexport default FarmBoardCard\n","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/StartFarmProcess/CropSelection/index.js",["504"],"import React, { useState } from 'react'\nimport { Box, Heading } from '@chakra-ui/react'\n\nimport useApi from 'context/api'\nimport useFetch from 'hooks/useFetch'\n\nimport useComponent from 'context/component'\n\nimport Tabs from 'components/Tabs/Tabs'\nimport FetchCard from 'components/FetchCard'\nimport FarmDetails from './FarmDetails'\n\nconst CropSelection = () => {\n  const { handleNext } = useComponent()\n  const [reload, setReload] = useState(0)\n\n  const { getCropCategories } = useApi()\n\n  const triggerReload = () => setReload(prevState => prevState + 1)\n\n  const { data, isLoading, error } = useFetch('categories', getCropCategories, reload)\n\n  let categories = []\n\n  if (data) {\n    categories = [{ _id: 'defualt', name: 'Top Selling' }, ...data]\n  }\n\n  return (\n    <Box mt={{ md: 32 }} w='90%' mx='auto'>\n      <Box textAlign='center' mb={10}>\n        <Heading as='h4' size='xl'>\n          Which Farm is right for you.\n        </Heading>\n      </Box>\n\n      <Box pos='relative'>\n        {isLoading || error ? (\n          <FetchCard\n            direction='column'\n            align='center'\n            justify='center'\n            mx='auto'\n            w={90}\n            reload={triggerReload}\n            loading={isLoading}\n            error={error}\n          />\n        ) : (\n          <Tabs direction='row' py='0' px='0' boxWidth='100%'>\n            {categories?.map(cat => (\n              <Box key={cat._id} label={cat.name}>\n                <FarmDetails\n                  handleNext={handleNext}\n                  query={cat._id === 'defualt' ? {} : { category: cat._id }}\n                />\n              </Box>\n            ))}\n          </Tabs>\n        )}\n      </Box>\n    </Box>\n  )\n}\n\nexport default CropSelection\n","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/StartFarmProcess/OtherSteps/index.js",["505","506","507","508"],"import { Box, Flex, Heading, Image, Text } from '@chakra-ui/react'\nimport Button from 'components/Button'\nimport useComponent from 'context/component'\nimport { AnimateSharedLayout, motion } from 'framer-motion'\nimport React from 'react'\nimport AboutFarmManager from './AboutFarmManager'\nimport ChooseAcreage from './ChooseAcreage'\nimport Confirmation from './Confirmation'\nimport Contract from './Contract'\nimport InviteLink from './InviteLink'\nimport PaymentOption from './PaymentOption'\n\nconst MotionFlex = motion.custom(Flex)\n\nconst OtherSteps = () => {\n  const { otherStep, handlePrev, handleNextStep, handleBack } = useComponent()\n\n  function goHome() {\n    return (window.location.pathname = '/dashboard')\n  }\n\n  const getSteps = value => {\n    switch (value) {\n      case 0:\n        return <AboutFarmManager />\n      case 1:\n        return <ChooseAcreage />\n      case 2:\n        return <Contract />\n      case 3:\n        return <PaymentOption />\n      case 4:\n        return <InviteLink />\n      case 5:\n        return <Confirmation />\n      default:\n        return null\n    }\n  }\n\n  return (\n    <Box>\n      <Flex align='center' justify='center' bg='gray.100' w='100%' h={20} mt={20}>\n        <Heading as='h5' size='md' mr={{ md: 20 }}>\n          Roots / Tubers\n        </Heading>\n\n        <Flex align='center' justify='space-between'>\n          <Text px={6}>Ginger</Text>\n          <Text px={6}>Chilli pepper</Text>\n          <Text px={6}>Tiger nut</Text>\n          <Text px={6}>Sweet potato</Text>\n          <Text px={6}>Sorghum</Text>\n        </Flex>\n      </Flex>\n\n      {/* <Flex align='center' justify='center' w='100%'>\n        <Box textAlign='center' mt={40}>\n          <Heading as='h4' size='xl'>\n            Farm details and Manager\n          </Heading>\n        </Box>\n      </Flex> */}\n\n      <Flex align='center' justify='space-between' w={{ md: 143 }} mx='auto' mt={{ md: 12 }} mb={4}>\n        <Text fontSize='sm' color='red.600'>\n          Farm starts : 2nd September, 2020\n        </Text>\n        <Flex align='center' rounded='30px' px={4} py={1} borderWidth={1} borderColor='cf.400'>\n          <Image h={4} src={require('../../../assets/images/startfarm/insurance.png').default} />\n          <Text fontSize='sm' ml={2} color='cf.400'>\n            Farm is insured\n          </Text>\n        </Flex>\n      </Flex>\n\n      <AnimateSharedLayout>\n        <MotionFlex\n          layout\n          w={{ md: 143 }}\n          h={{ md: 120 }}\n          mx='auto'\n          borderWidth={1}\n          borderColor='gray.400'\n          rounded='md'\n          overflow='hidden'\n        >\n          {getSteps(otherStep)}\n        </MotionFlex>\n      </AnimateSharedLayout>\n\n      <Flex align='center' justify='center' mt={6}>\n        <Button\n          btntitle='Prev'\n          colorScheme='white'\n          color='gray.700'\n          width={56}\n          fontSize='md'\n          h={12}\n          onClick={otherStep <= 0 ? handleBack : handlePrev}\n        />\n        <Button\n          btntitle={otherStep === 5 ? 'Continue to my Dashboard' : 'Next'}\n          ml={6}\n          width={otherStep === 5 ? 70 : 56}\n          fontSize='lg'\n          md\n          h={12}\n          onClick={otherStep === 5 ? goHome : handleNextStep}\n        />\n      </Flex>\n    </Box>\n  )\n}\n\nexport default OtherSteps\n","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Cards/CropCard.js",["509","510","511"],"import { Box, Flex, Heading, Icon, Image, Link, List, ListItem, Text } from '@chakra-ui/react'\nimport { Link as ReachRouter } from 'react-router-dom'\nimport { MdKeyboardArrowRight } from 'react-icons/md'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { Button } from 'components'\nimport useComponent from 'context/component'\n\nconst CropCard = ({ image, title, subtitle, extra, options, btntitle, path, state, mr }) => {\n  const { handleModalClick } = useComponent()\n\n  return (\n    <Box\n      w={{ md: 85 }}\n      p={8}\n      borderWidth={1}\n      borderColor='gray.300'\n      rounded='lg'\n      textAlign='left'\n      mr={mr}\n    >\n      <Box mb={3}>\n        <Image src={image} />\n      </Box>\n\n      <Flex align='center' justify='space-between'>\n        <Box>\n          <Heading as='h5' fontSize={{ md: 'lg' }}>\n            {title}\n          </Heading>\n          <Text fontSize='xs' mt={-2}>\n            {subtitle}\n          </Text>\n        </Box>\n\n        {extra && <Text fontSize='sm'>{extra}</Text>}\n      </Flex>\n\n      <List fontSize='sm' textAlign='left' my={3} fontFamily='body'>\n        {options.map(item => (\n          <ListItem key={item} py={1}>\n            {item}\n          </ListItem>\n        ))}\n      </List>\n\n      <Box>\n        <Link as={ReachRouter} to={{ pathname: path, state }} _hover={{ textDecor: 'none' }}>\n          <Button btntitle={btntitle} />\n        </Link>\n        <Box\n          d='block'\n          fontSize='xs'\n          color='cf.400'\n          mt={1}\n          fontFamily='body'\n          as='button'\n          role='button'\n          aria-label='learn more button'\n          onClick={() => handleModalClick('learnmore')}\n        >\n          Learn more <Icon as={MdKeyboardArrowRight} />\n        </Box>\n      </Box>\n    </Box>\n  )\n}\n\nCropCard.propTypes = {\n  image: PropTypes.any.isRequired,\n  title: PropTypes.string.isRequired,\n  subtitle: PropTypes.string,\n  extra: PropTypes.string,\n  options: PropTypes.array,\n  btntitle: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n  state: PropTypes.object,\n  mr: PropTypes.any\n}\n\nexport default CropCard\n","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/DynamicProfile/Security.js",["512","513","514"],"import React from 'react'\nimport {\n  Box,\n  Heading,\n  Flex,\n  Text,\n  Button,\n  Divider,\n  Container,\n  Grid,\n  Switch,\n  useToast\n} from '@chakra-ui/react'\nimport { Formik } from 'formik'\nimport { FormInput } from 'components/Form'\nimport useAuth from 'context/auth'\nimport { ChangePassword } from 'helpers/validation'\n\nconst Security = () => {\n  const { changePassword } = useAuth()\n  const toast = useToast()\n\n  const onSubmit = async (values, { setSubmitting, setErrors, setStatus, resetForm }) => {\n    try {\n      const res = await changePassword(values)\n      if (res.statusCode === 200) {\n        toast({\n          description: res.message,\n          status: 'success',\n          duration: 5000,\n          position: 'top-right'\n        })\n      }\n      resetForm({})\n      setStatus({ success: true })\n    } catch (error) {\n      setStatus({ success: false })\n      setSubmitting(false)\n      setErrors({ submit: error.message })\n    }\n  }\n\n  return (\n    <Container maxW='4xl'>\n      <Box p={10} rounded='md' bg='white'>\n        <Heading as='h4' fontSize={{ md: '3xl' }} mb={4}>\n          Security\n        </Heading>\n        <Flex align='center'>\n          <Text fontSize='md'>\n            Set your login preferences, help us personalize your <br />\n            experience and make big account changes here\n          </Text>\n          <Flex align='center' ml={10}>\n            <Button rounded='30px' w={40} h={12} shadow='sm'>\n              Cancel\n            </Button>\n            <Button\n              colorScheme='linear'\n              rounded='30px'\n              w={40}\n              h={12}\n              shadow='sm'\n              ml={4}\n              type='submit'\n            >\n              Save\n            </Button>\n          </Flex>\n        </Flex>\n      </Box>\n\n      <Divider orientation='horizontal' my={12} />\n\n      <Box>\n        <Box>\n          <Text>Change your password</Text>\n          <Text>Turn notification on to receive notification in your dashboard</Text>\n        </Box>\n        <Formik\n          initialValues={{ oldPassword: '', newPassword: '' }}\n          onSubmit={onSubmit}\n          validationSchema={ChangePassword}\n        >\n          {({ values, handleBlur, handleChange, handleSubmit, isSubmitting }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid gap={6} w={80} mt={12}>\n                <FormInput\n                  label='Old Password'\n                  placeholder='At least 8 characters'\n                  type='password'\n                  name='oldPassword'\n                  value={values.oldPassword}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  bg='white'\n                />\n                <FormInput\n                  label='New Password'\n                  placeholder='At least 8 characters'\n                  type='password'\n                  name='newPassword'\n                  value={values.newPassword}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  bg='white'\n                />\n\n                <Button\n                  rounded='30px'\n                  mt={4}\n                  w={40}\n                  h={12}\n                  shadow='sm'\n                  bg='transparent'\n                  color='gray.600'\n                  borderWidth={1}\n                  borderColor='gray.600'\n                  _hover={{ bg: 'transparent' }}\n                  _active={{ bg: 'transparent' }}\n                  type='submit'\n                  isLoading={isSubmitting}\n                >\n                  Save changes\n                </Button>\n              </Grid>\n            </form>\n          )}\n        </Formik>\n      </Box>\n      <Divider orientation='horizontal' my={12} />\n      <Flex justify='space-between'>\n        <Box>\n          <Text fontFamily='heading' fontSize={{ md: 'xl' }}>\n            Two-step verification\n          </Text>\n          <Text>Turn on to receive notification via push notification</Text>\n        </Box>\n\n        <Box>\n          <Switch colorScheme='cfButton' size='lg' />\n        </Box>\n      </Flex>\n      <Divider orientation='horizontal' my={12} />\n    </Container>\n  )\n}\n\nexport default Security\n","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/DynamicProfile/Profile.js",["515","516","517","518","519","520","521","522"],"import React from 'react'\nimport {\n  Box,\n  Heading,\n  Flex,\n  Grid,\n  Text,\n  Button,\n  useToast,\n  Container,\n  Divider,\n  Avatar,\n  Input\n} from '@chakra-ui/react'\nimport { Formik } from 'formik'\nimport { FormInput, FormTextArea } from 'components/Form'\nimport useAuth from 'context/auth'\n\nconst Profile = () => {\n  const { isAuthenticated, patchUser } = useAuth()\n  const { user } = isAuthenticated()\n  const toast = useToast()\n\n  const initialValues = {\n    firstName: user?.firstName,\n    lastName: user?.lastName,\n    address: {\n      street: '',\n      state: '',\n      country: user?.address?.country\n    },\n    dateOfBirth: '',\n    email: user?.email,\n    phoneNumber: user?.phoneNumber,\n    IdType: '',\n    IDNumber: '',\n    bankName: '',\n    bankBranch: '',\n    accountName: '',\n    accountNumber: ''\n  }\n\n  const onSubmit = async (values, { setSubmitting, setErrors, setStatus, resetForm }) => {\n    try {\n      const data = {\n        firstName: values?.firstName,\n        lastName: values?.lastName,\n        address: {\n          street: values.address.street,\n          state: values.address.state,\n          country: values.address.country\n        },\n        dateOfBirth: values.dateOfBirth,\n        phoneNumber: values?.phoneNumber\n      }\n      const res = await patchUser(user?._id, data)\n      if (res.statusCode === 200) {\n        toast({\n          title: 'User successfully updated.',\n          description: res.message,\n          status: 'success',\n          duration: 5000,\n          position: 'top-right'\n        })\n        resetForm({})\n        setStatus({ success: true })\n        window.location.reload()\n      } else if (res.statusCode === 400) {\n        toast({\n          title: 'Error occured',\n          description: res.message,\n          status: 'error',\n          duration: 5000,\n          position: 'top-right'\n        })\n      }\n    } catch (error) {\n      setStatus({ success: false })\n      toast({\n        title: 'Error occured',\n        description: error.message,\n        status: 'error',\n        duration: 5000,\n        position: 'top-right'\n      })\n      setSubmitting(false)\n      setErrors({ submit: error.message })\n    }\n  }\n\n  return (\n    <Container maxW='4xl'>\n      <Formik enableReinitialize initialValues={initialValues} onSubmit={onSubmit}>\n        {({ values, handleChange, handleBlur, isSubmitting, handleSubmit, errors }) => (\n          <form onSubmit={handleSubmit}>\n            <Box p={10} rounded='md' bg='white'>\n              <Heading as='h4' fontSize={{ md: '3xl' }} mb={4}>\n                Profile\n              </Heading>\n              <Flex align='center'>\n                <Text fontSize='md'>\n                  Set your login preferences, help us personalize your <br />\n                  experience and make big account changes here\n                </Text>\n                <Flex align='center' ml={10}>\n                  <Button rounded='30px' w={40} h={12} shadow='sm'>\n                    Cancel\n                  </Button>\n                  <Button\n                    colorScheme='linear'\n                    rounded='30px'\n                    w={40}\n                    h={12}\n                    shadow='sm'\n                    ml={4}\n                    type='submit'\n                    isLoading={isSubmitting}\n                  >\n                    Save\n                  </Button>\n                </Flex>\n              </Flex>\n            </Box>\n\n            <Divider\n              orientation='vertical'\n              borderBottomWidth={1}\n              borderBottomColor='gray.200'\n              my={12}\n            />\n\n            <Flex align='center'>\n              <Avatar src={user?.avatar} size='xl' />\n              <Box\n                as='label'\n                role='button'\n                type='button'\n                rounded='30px'\n                px={6}\n                py={2}\n                fontSize='sm'\n                borderWidth={1}\n                borderColor='cf.400'\n                color='cf.400'\n                ml={6}\n              >\n                <Input type='file' d='none' />\n                <Text>Upload a new image</Text>\n              </Box>\n            </Flex>\n\n            <Box rounded='xl' shadow='md' bg='white' p={10} mt={12}>\n              <Box m={10}>\n                <Heading as='h4' fontSize={{ md: '3xl' }} mb={4}>\n                  Personal Info\n                </Heading>\n\n                <Grid templateColumns='repeat(2, 1fr)' w={{ md: '100%' }} gap={6} mb={6}>\n                  <FormInput\n                    label='First Name'\n                    name='firstName'\n                    value={values.firstName}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    isRequired\n                    bg='white'\n                  />\n                  <FormInput\n                    label='Last Name'\n                    name='lastName'\n                    value={values.lastName}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    isRequired\n                    bg='white'\n                  />\n\n                  <FormInput\n                    label='Date of birth'\n                    name='dateOfBirth'\n                    value={values.dateOfBirth}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    isRequired\n                    bg='white'\n                    type='date'\n                  />\n                  <FormInput\n                    label='Street'\n                    name='address.street'\n                    value={values.address.street}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    isRequired\n                    bg='white'\n                  />\n                  <FormInput\n                    label='State'\n                    name='address.state'\n                    value={values.address.state}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    isRequired\n                    bg='white'\n                  />\n                  <FormInput\n                    label='Country'\n                    name='address.country'\n                    value={values.address.country}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    isRequired\n                    bg='white'\n                  />\n\n                  <FormInput\n                    label='Phone number'\n                    name='phoneNumber'\n                    value={values.phoneNumber}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    isRequired\n                    bg='white'\n                  />\n\n                  <FormInput\n                    label='Email'\n                    value={values.email}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    isRequired\n                    bg='white'\n                    disabled\n                  />\n                </Grid>\n\n                <Box>\n                  <FormTextArea bg='white' label='About you' />\n                </Box>\n              </Box>\n            </Box>\n            <Box rounded='xl' shadow='md' mt={12} bg='white' p={10}>\n              <Box m={10}>\n                <Heading as='h4' fontSize={{ md: '3xl' }} mb={4}>\n                  Identification Info\n                </Heading>\n                <Grid templateColumns='repeat(2, 1fr)' w={{ md: '100%' }} gap={6} mb={6}>\n                  <FormInput\n                    label='ID Type'\n                    name='IdType'\n                    value={values.IdType}\n                    isRequired\n                    bg='white'\n                  />\n                  <FormInput\n                    label='ID Number'\n                    name='IDNumber'\n                    value={values.IDNumber}\n                    isRequired\n                    bg='white'\n                  />\n                </Grid>\n                <FormInput label='Country' value={values.address.country} isRequired bg='white' />\n              </Box>\n            </Box>\n\n            <Box rounded='xl' shadow='md' my={12} bg='white' p={10}>\n              <Box m={10}>\n                <Heading as='h4' fontSize={{ md: '3xl' }} mb={4}>\n                  Bank details\n                </Heading>\n                <Grid templateColumns='repeat(2, 1fr)' w={{ md: '100%' }} gap={6}>\n                  <FormInput\n                    label='Bank name'\n                    name='bankName'\n                    value={values.bankName}\n                    isRequired\n                    bg='white'\n                  />\n                  <FormInput\n                    label='Bank branch'\n                    name='bankBranch'\n                    value={values.bankBranch}\n                    isRequired\n                    bg='white'\n                  />\n                </Grid>\n                <Grid templateColumns='repeat(2, 1fr)' w={{ md: '100%' }} gap={6} py={{ md: 10 }}>\n                  <FormInput\n                    label='Account name'\n                    name='accountName'\n                    value={values.accountName}\n                    isRequired\n                    bg='white'\n                  />\n                  <FormInput\n                    label='Account number'\n                    name='accountNumber'\n                    value={values.accountNumber}\n                    isRequired\n                    bg='white'\n                  />\n                </Grid>\n              </Box>\n            </Box>\n          </form>\n        )}\n      </Formik>\n    </Container>\n  )\n}\n\nexport default Profile\n","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/DynamicProfile/PrivacyAndData.js",["523"],"import React from 'react'\nimport {\n  Box,\n  Heading,\n  Flex,\n  Text,\n  Button,\n  Container,\n  Divider,\n  Checkbox,\n  Link,\n  Icon,\n  Stack\n} from '@chakra-ui/react'\nimport { chevronRight } from 'theme/Icons'\n\nconst PrivacyAndData = () => {\n  return (\n    <Container maxW='4xl'>\n      <Box p={10} rounded='md' bg='white'>\n        <Heading as='h4' fontSize={{ md: '3xl' }} mb={4}>\n          Privacy &amp; Data\n        </Heading>\n        <Flex align='center'>\n          <Text fontSize='md'>\n            Set your login preferences, help us personalize your <br />\n            experience and make big account changes here\n          </Text>\n          <Flex align='center' ml={10}>\n            <Button rounded='30px' w={40} h={12} shadow='sm'>\n              Cancel\n            </Button>\n            <Button\n              colorScheme='linear'\n              rounded='30px'\n              w={40}\n              h={12}\n              shadow='sm'\n              ml={4}\n              type='submit'\n            >\n              Save\n            </Button>\n          </Flex>\n        </Flex>\n      </Box>\n\n      <Divider orientation='horizontal' my={12} />\n\n      <Box>\n        <Box>\n          <Heading as='h5' fontSize={{ md: '2xl' }} fontFamily='display' mb={2}>\n            Search privacy{' '}\n          </Heading>\n          <Flex align='center'>\n            <Checkbox size='lg' colorScheme='cfButton' borderColor='black' />{' '}\n            <Text ml={3}>\n              Hide your profile from search engines.{' '}\n              <Link _hover={{ textDecor: 'none' }} color='cf.400' ml={6}>\n                Learn more <Icon as={chevronRight} />\n              </Link>\n            </Text>\n          </Flex>\n        </Box>\n\n        <Divider orientation='horizontal' my={12} />\n\n        <Box>\n          <Box>\n            <Heading as='h5' fontSize={{ md: '2xl' }} fontFamily='display' mb={2}>\n              Personalization\n            </Heading>\n            <Text>\n              Use your Google account, LinkedIn or Twitter <br />\n              account to log into Complete Farmer.\n            </Text>\n          </Box>\n\n          <Stack mt={6}>\n            <Checkbox size='lg' colorScheme='cfButton' borderColor='black'>\n              Use your Google account to log in\n            </Checkbox>\n            <Checkbox size='lg' colorScheme='cfButton' borderColor='black'>\n              Use your Twitter account to log in\n            </Checkbox>\n            <Checkbox size='lg' colorScheme='cfButton' borderColor='black'>\n              Use your Facebook account to log in\n            </Checkbox>\n            <Checkbox size='lg' colorScheme='cfButton' borderColor='black'>\n              Use your LinkedIn account to log in\n            </Checkbox>\n          </Stack>\n        </Box>\n      </Box>\n    </Container>\n  )\n}\n\nexport default PrivacyAndData\n","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/DynamicProfile/Notifications.js",["524","525"],"import { Box, Heading, Flex, Text, Button, Divider, Container, Switch } from '@chakra-ui/react'\nimport React from 'react'\n\nconst Notifications = () => {\n  return (\n    <Container maxW='4xl'>\n      <Box p={10} rounded='md' bg='white'>\n        <Heading as='h4' fontSize={{ md: '3xl' }} mb={4}>\n          Notifications\n        </Heading>\n        <Flex align='center'>\n          <Text fontSize='md'>\n            Set your login preferences, help us personalize your <br />\n            experience and make big account changes here\n          </Text>\n          <Flex align='center' ml={10}>\n            <Button rounded='30px' w={40} h={12} shadow='sm'>\n              Cancel\n            </Button>\n            <Button\n              colorScheme='linear'\n              rounded='30px'\n              w={40}\n              h={12}\n              shadow='sm'\n              ml={4}\n              type='submit'\n            >\n              Save\n            </Button>\n          </Flex>\n        </Flex>\n      </Box>\n\n      <Divider orientation='horizontal' my={12} />\n\n      <Box p={10}>\n        <Flex justify='space-between'>\n          <Box>\n            <Text fontFamily='heading' fontSize={{ md: 'xl' }}>\n              On Complete Farmer\n            </Text>\n            <Text>Turn notification on to receive notification in your dashboard</Text>\n          </Box>\n\n          <Box>\n            <Switch colorScheme='cfButton' size='lg' />\n          </Box>\n        </Flex>\n\n        <Divider orientation='horizontal' my={6} />\n\n        <Flex justify='space-between'>\n          <Box>\n            <Text fontFamily='heading' fontSize={{ md: 'xl' }}>\n              By Email\n            </Text>\n            <Text>Turn on to receive notification via email</Text>\n          </Box>\n\n          <Box>\n            <Switch colorScheme='cfButton' size='lg' />\n          </Box>\n        </Flex>\n\n        <Divider orientation='horizontal' my={6} />\n\n        <Flex justify='space-between'>\n          <Box>\n            <Text fontFamily='heading' fontSize={{ md: 'xl' }}>\n              By push notification\n            </Text>\n            <Text>Turn on to receive notification via push notification</Text>\n          </Box>\n\n          <Box>\n            <Switch colorScheme='cfButton' size='lg' />\n          </Box>\n        </Flex>\n\n        <Divider orientation='horizontal' my={6} />\n      </Box>\n    </Container>\n  )\n}\n\nexport default Notifications\n","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/DynamicProfile/AccountSettings.js",["526","527","528","529","530","531","532","533"],"import React from 'react'\nimport {\n  Box,\n  Heading,\n  Flex,\n  Text,\n  Button,\n  Container,\n  Divider,\n  Stack,\n  Radio,\n  RadioGroup,\n  Checkbox,\n  Grid\n} from '@chakra-ui/react'\nimport { Formik } from 'formik'\nimport ActionCard from 'components/Cards/ActionCard'\n\nconst AccountSettings = () => {\n  return (\n    <Container maxW='4xl'>\n      <Formik enableReinitialize>\n        {({ values, handleChange, handleBlur, isSubmitting, errors }) => (\n          <form>\n            <Box p={10} rounded='md' bg='white'>\n              <Heading as='h4' fontSize={{ md: '3xl' }} mb={4}>\n                Account settings\n              </Heading>\n              <Flex align='center'>\n                <Text fontSize='md'>\n                  Set your login preferences, help us personalize your <br />\n                  experience and make big account changes here\n                </Text>\n                <Flex align='center' ml={10}>\n                  <Button rounded='30px' w={40} h={12} shadow='sm'>\n                    Cancel\n                  </Button>\n                  <Button\n                    colorScheme='linear'\n                    rounded='30px'\n                    w={40}\n                    h={12}\n                    shadow='sm'\n                    ml={4}\n                    type='submit'\n                    isLoading={isSubmitting}\n                  >\n                    Save\n                  </Button>\n                </Flex>\n              </Flex>\n            </Box>\n\n            <Divider orientation='horizontal' my={12} />\n\n            <Box>\n              <Box>\n                <Box>\n                  <Heading as='h5' fontFamily='display' fontSize={{ md: '2xl' }} mb={2}>\n                    Language\n                  </Heading>\n                  <Text>English (US)</Text>\n                </Box>\n                <Box my={8}>\n                  <Heading as='h5' fontFamily='display' fontSize={{ md: '2xl' }} mb={2}>\n                    Time zone\n                  </Heading>\n                  <Text>GMT</Text>\n                </Box>\n\n                <Box>\n                  <Heading as='h5' fontFamily='display' fontSize={{ md: '2xl' }} mb={2}>\n                    Gender\n                  </Heading>\n                  <RadioGroup>\n                    <Stack direction='row'>\n                      <Radio value='male' colorScheme='cfButton'>\n                        Male\n                      </Radio>\n                      <Radio value='female' colorScheme='cfButton'>\n                        Female\n                      </Radio>\n                      <Radio value='non-binary' colorScheme='cfButton'>\n                        Non-binary\n                      </Radio>\n                    </Stack>\n                  </RadioGroup>\n                </Box>\n              </Box>\n\n              <Divider\n                orientation='vertical'\n                borderBottomWidth={1}\n                borderBottomColor='gray.200'\n                my={12}\n              />\n\n              <Box>\n                <Box>\n                  <Heading as='h5' fontSize={{ md: '2xl' }} fontFamily='display' mb={2}>\n                    Log in options\n                  </Heading>\n                  <Text>\n                    Use your Google account, LinkedIn or Twitter <br />\n                    account to log into Complete Farmer.\n                  </Text>\n                </Box>\n\n                <Stack mt={6}>\n                  <Checkbox size='lg' colorScheme='cfButton' borderColor='black'>\n                    Use your Google account to log in\n                  </Checkbox>\n                  <Checkbox size='lg' colorScheme='cfButton' borderColor='black'>\n                    Use your Twitter account to log in\n                  </Checkbox>\n                  <Checkbox size='lg' colorScheme='cfButton' borderColor='black'>\n                    Use your Facebook account to log in\n                  </Checkbox>\n                  <Checkbox size='lg' colorScheme='cfButton' borderColor='black'>\n                    Use your LinkedIn account to log in\n                  </Checkbox>\n                </Stack>\n              </Box>\n\n              <Divider\n                orientation='vertical'\n                borderBottomWidth={1}\n                borderBottomColor='gray.200'\n                my={12}\n              />\n\n              <Grid gap={10} mt={10}>\n                <ActionCard\n                  title='Deactivate account'\n                  text='Set your login preferences, help us personalize your\n                      <br />\n                      experience and make big account changes here'\n                  btnText='Deactivate account'\n                />\n\n                <ActionCard\n                  title='Close your account and account data'\n                  text='Set your login preferences, help us personalize your\n                      <br />\n                      experience and make big account changes here'\n                  btnText='Close account'\n                />\n              </Grid>\n            </Box>\n          </form>\n        )}\n      </Formik>\n    </Container>\n  )\n}\n\nexport default AccountSettings\n","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Modals/ConfirmSale.js",["534","535","536"],"import React from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  useDisclosure,\n  useToast,\n  Button,\n  Box,\n  Text,\n  Heading,\n  Flex,\n  Divider\n} from '@chakra-ui/react'\nimport Notification from 'components/Notifications'\n\nconst ConfirmSale = ({ amtLeft, name, amtBought, price }) => {\n  const { isOpen, onClose, onOpen } = useDisclosure()\n  const toast = useToast()\n\n  const handleKeyPress = e => {\n    const key = e.keyCode || e.charCode\n    if (key === 13 || e.key === 'Enter') {\n      e.preventDefault()\n      e.stopPropagation()\n      toast({\n        position: 'top-right',\n        duration: 9000,\n        render: () => <Notification amtBought={amtBought} name={name} />\n      })\n    }\n  }\n\n  return (\n    <>\n      <Button\n        mt={4}\n        colorScheme='linear'\n        rounded='30px'\n        fontSize='xs'\n        w={{ md: '150px' }}\n        onClick={onOpen}\n      >\n        Sell to buyer\n      </Button>\n      <Modal\n        isOpen={isOpen}\n        onClose={onClose}\n        mt={10}\n        variant='outline'\n        borderColor='black'\n        borderWidth={5}\n        colorScheme='white'\n        isCentered\n      >\n        <ModalOverlay />\n        <ModalContent>\n          <Flex m={3}>\n            <Box ml={10}>\n              <Heading as='h4' fontWeight='bold' fontSize={{ md: 'xl' }}>\n                Confirm Sale\n              </Heading>\n            </Box>\n            <ModalCloseButton />\n          </Flex>\n          <Divider orientation='horizontal' borderColor='gray.400' />\n          <ModalBody>\n            <Box mt={2} p={2} fontFamily='light' textAlign='justify'>\n              <Text fontSize={{ md: 'sm' }}>\n                You're about to sell\n                <Text as='span' fontWeight='bold'>\n                  {' '}\n                  {amtBought} tonnes{' '}\n                </Text>\n                of your produce worth\n                <Text as='span' fontWeight='bold'>\n                  {' '}\n                  {price}{' '}\n                </Text>\n                to{' '}\n                <Text as='span' fontWeight='bold'>\n                  {name}\n                </Text>\n                .\n                <Text as='span' fontSize={{ md: 'sm' }} pl={1}>\n                  You would have{' '}\n                  <Text as='span' fontWeight='bold'>\n                    {amtLeft} tonnes\n                  </Text>{' '}\n                  left to sell.\n                </Text>\n              </Text>\n            </Box>\n            <Text fontSize={{ md: 'sm' }} pl={2} fontWeight='thin' color='red.600'>\n              Are you sure you want to sell this crop? This action is irreversible{' '}\n            </Text>\n          </ModalBody>\n          <ModalFooter>\n            <Flex>\n              <Button\n                mr={5}\n                onClick={onClose}\n                rounded='30px'\n                fontWeight='thin'\n                variant='outline'\n                borderColor='black'\n                w={{ md: '90px' }}\n              >\n                No\n              </Button>\n              <Button\n                colorScheme='linear'\n                rounded='30px'\n                w={{ md: '90px' }}\n                onKeyPress={handleKeyPress}\n                onClick={() => {\n                  onClose()\n                  toast({\n                    position: 'top-right',\n                    duration: 9000,\n                    render: () => <Notification amtBought={amtBought} name={name} />\n                  })\n                }}\n              >\n                Yes\n              </Button>\n            </Flex>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  )\n}\n\nConfirmSale.propTypes = {\n  amtLeft: PropTypes.any,\n  name: PropTypes.any,\n  amtBought: PropTypes.any,\n  price: PropTypes.any\n}\n\nexport default ConfirmSale\n","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Form/upload.js",["537"],"import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Box, Flex, Text, Icon, FormLabel, FormControl, Input } from '@chakra-ui/react'\nimport { VscAdd } from 'react-icons/vsc'\n\nconst Upload = props => {\n  const { field, form, accept, label, multiple, name } = props\n\n  const handleChange = e => {\n    const files = e.currentTarget.files\n    const data = multiple ? files : files[0]\n\n    form.setFieldValue(field.name, data)\n  }\n\n  return (\n    <Box>\n      <Text fontSize={{ md: 'sm' }} fontWeight='bold' pl={1} pt={2}>\n        {label}\n      </Text>\n      <Box mt={4}>\n        <FormControl position='relative' borderWidth={1}>\n          <FormLabel\n            w='100%'\n            d='flex'\n            alignItems='center'\n            justifyContent='center'\n            flexDir='column'\n            pt={3}\n            px={4}\n            cursor='pointer'\n            borderBottomWidth={1}\n            borderBottomColor='cf.400'\n            mb={0}\n          >\n            <Flex\n              align='center'\n              justify='center'\n              w={12}\n              height={12}\n              rounded='100%'\n              bg='cf.400'\n              mt={4}\n            >\n              <Icon as={VscAdd} color='white' size={6} />\n            </Flex>\n            <Text\n              textAlign='center'\n              fontSize={{ md: 'sm' }}\n              color='gray.400'\n              letterSpacing='normal'\n              mt={2}\n              pb={8}\n            >\n              Upload image here\n            </Text>\n            <Input\n              type='file'\n              id={name}\n              name={name}\n              accept={accept}\n              onChange={handleChange}\n              display='none'\n            />\n          </FormLabel>\n        </FormControl>\n      </Box>\n    </Box>\n  )\n}\n\nUpload.propTypes = {\n  field: PropTypes.object.isRequired,\n  form: PropTypes.object.isRequired,\n  accept: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  multiple: PropTypes.bool,\n  name: PropTypes.string\n}\n\nexport default Upload\n","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/theme/Icons.js",["538","539","540","541","542","543","544"],"import React from 'react'\nimport { createIcon } from '@chakra-ui/icons'\n\nexport const Shape = createIcon({\n  displayName: 'Shape',\n  viewBox: '0 0 24 24',\n  path: <polygon preserveAspectRatio='none' fill='currentColor' points='50,0 100,0 50,100 0,100' />\n})\n\nexport const menuOpen = createIcon({\n  displayName: 'menuOpen',\n  viewBox: '0 0 24 24',\n  path: (\n    <path\n      fill='none'\n      stroke='currentColor'\n      strokeLinecap='round'\n      strokeLinejoin='round'\n      strokeWidth='2'\n      d='M4 6h16M4 12h16m-7 6h7'\n    />\n  )\n})\n\nexport const menuClose = createIcon({\n  displayName: 'menuClose',\n  viewBox: '0 0 24 24',\n  path: (\n    <path\n      stroke='currentColor'\n      fill='none'\n      strokeLinecap='round'\n      strokeLinejoin='round'\n      strokeWidth='2'\n      d='M6 18L18 6M6 6l12 12'\n    />\n  )\n})\n\nexport const chat = createIcon({\n  displayName: 'chat',\n  viewBox: '0 0 24 24',\n  path: (\n    <>\n      <path\n        fill='currentColor'\n        d='M2 5a2 2 0 012-2h7a2 2 0 012 2v4a2 2 0 01-2 2H9l-3 3v-3H4a2 2 0 01-2-2V5z'\n      />\n      <path\n        fill='currentColor'\n        d='M15 7v2a4 4 0 01-4 4H9.828l-1.766 1.767c.28.149.599.233.938.233h2l3 3v-3h2a2 2 0 002-2V9a2 2 0 00-2-2h-1z'\n      />\n    </>\n  )\n})\n\nexport const like = createIcon({\n  displayName: 'like',\n  viewBox: '0 0 24 24',\n  path: (\n    <path\n      fill='currentColor'\n      d='M3.172 5.172a4 4 0 015.656 0L10 6.343l1.172-1.171a4 4 0 115.656 5.656L10 17.657l-6.828-6.829a4 4 0 010-5.656z'\n      clipRule='evenodd'\n      fillRule='evenodd'\n    />\n  )\n})\n\nexport const upload = createIcon({\n  displayName: 'upload',\n  viewBox: '0 0 24 24',\n  path: (\n    <path\n      fill='currentColor'\n      fillRule='evenodd'\n      d='M2 10a4 4 0 004 4h3v3a1 1 0 102 0v-3h3a4 4 0 000-8 4 4 0 00-8 0 4 4 0 00-4 4zm9 4H9V9.414l-1.293 1.293a1 1 0 01-1.414-1.414l3-3a1 1 0 011.414 0l3 3a1 1 0 01-1.414 1.414L11 9.414V14z'\n      clipRule='evenodd'\n    />\n  )\n})\n\nexport const user = createIcon({\n  displayName: 'user',\n  viewBox: '0 0 24 24',\n  path: (\n    <path\n      fill='currentColor'\n      fillRule='evenodd'\n      d='M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-6-3a2 2 0 11-4 0 2 2 0 014 0zm-2 4a5 5 0 00-4.546 2.916A5.986 5.986 0 0010 16a5.986 5.986 0 004.546-2.084A5 5 0 0010 11z'\n      clipRule='evenodd'\n    />\n  )\n})\n\nexport const project = createIcon({\n  displayName: 'project',\n  viewBox: '0 0 24 24',\n  path: (\n    <path\n      fill='currentColor'\n      d='M2 6a2 2 0 012-2h5l2 2h5a2 2 0 012 2v6a2 2 0 01-2 2H4a2 2 0 01-2-2V6z'\n    />\n  )\n})\n\nexport const Trash = createIcon({\n  displayName: 'Trash',\n  viewBox: '0 0 24 24',\n  path: (\n    <path\n      fill='currentColor'\n      fillRule='evenodd'\n      d='M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z'\n      clipRule='evenodd'\n    />\n  )\n})\n\nexport const cog = createIcon({\n  displayName: 'cog',\n  viewBox: '0 0 24 24',\n  path: (\n    <path\n      fill='currentColor'\n      fillRule='evenodd'\n      d='M11.49 3.17c-.38-1.56-2.6-1.56-2.98 0a1.532 1.532 0 01-2.286.948c-1.372-.836-2.942.734-2.106 2.106.54.886.061 2.042-.947 2.287-1.561.379-1.561 2.6 0 2.978a1.532 1.532 0 01.947 2.287c-.836 1.372.734 2.942 2.106 2.106a1.532 1.532 0 012.287.947c.379 1.561 2.6 1.561 2.978 0a1.533 1.533 0 012.287-.947c1.372.836 2.942-.734 2.106-2.106a1.533 1.533 0 01.947-2.287c1.561-.379 1.561-2.6 0-2.978a1.532 1.532 0 01-.947-2.287c.836-1.372-.734-2.942-2.106-2.106a1.532 1.532 0 01-2.287-.947zM10 13a3 3 0 100-6 3 3 0 000 6z'\n      clipRule='evenodd'\n    />\n  )\n})\n\nexport const notification = createIcon({\n  displayName: 'notification',\n  viewBox: '0 0 23 23',\n  path: (\n    <>\n      <mask\n        id='mask0'\n        mask-type='alpha'\n        maskUnits='userSpaceOnUse'\n        x='3'\n        y='1'\n        width='17'\n        height='21'\n      >\n        <path\n          width='23'\n          height='23'\n          fillRule='evenodd'\n          clipRule='evenodd'\n          d='M19.4215 15.329C19.4708 15.3809 19.5182 15.4306 19.5631 15.4789C19.7877 15.72 19.8873 16.009 19.8854 16.2916C19.8817 16.9056 19.3995 17.4895 18.6838 17.4895H4.31625C3.60049 17.4895 3.11871 16.9056 3.11459 16.2916C3.11272 16.009 3.21229 15.7204 3.4369 15.4789C3.48183 15.4306 3.52918 15.3809 3.57849 15.329C4.32303 14.5463 5.51342 13.2948 5.51342 9.70308C5.51342 6.79439 7.55287 4.46594 10.3028 3.89469V3.11454C10.3028 2.45307 10.8389 1.91663 11.5 1.91663C12.1611 1.91663 12.6972 2.45307 12.6972 3.11454V3.89469C15.4471 4.46594 17.4866 6.79439 17.4866 9.70308C17.4866 13.2948 18.677 14.5463 19.4215 15.329ZM13.8947 18.6875C13.8947 20.0108 12.8222 21.0833 11.5 21.0833C10.1778 21.0833 9.1053 20.0108 9.1053 18.6875H13.8947Z'\n          fill='currentColor'\n        />\n      </mask>\n      <g mask='url(#mask0)'>\n        <rect width='23' height='23' fill='currentColor' />\n      </g>\n    </>\n  )\n})\n\nexport const pencil = createIcon({\n  displayName: 'pencil',\n  viewBox: '0 0 24 24',\n  path: (\n    <path\n      fill='currentColor'\n      d='M13.586 3.586a2 2 0 112.828 2.828l-.793.793-2.828-2.828.793-.793zM11.379 5.793L3 14.172V17h2.828l8.38-8.379-2.83-2.828z'\n    />\n  )\n})\n\nexport const home = createIcon({\n  displayName: 'home',\n  viewBox: '0 0 29 27',\n  path: (\n    <>\n      <g filter='url(#filter0_d)'>\n        <path\n          width='29'\n          height='27'\n          fillRule='evenodd'\n          clipRule='evenodd'\n          d='M8.03046 9.47419L14.5273 2.4405L21.6743 9.47419H8.03046ZM13.6252 16.8426V12.6321H11.0002V16.8426H9.25021V11.5794H20.6252V16.8426H13.6252ZM15.0541 0.23945C14.7198 -0.0910762 14.236 -0.0763394 13.9148 0.271029L5.16484 9.74471C4.89534 10.0363 4.80346 10.4973 4.93296 10.9037C5.06334 11.3121 5.38796 11.5794 5.75021 11.5794H7.50021V17.8952C7.50021 18.4773 7.89221 18.9479 8.37521 18.9479H21.5002C21.9832 18.9479 22.3752 18.4773 22.3752 17.8952V11.5794H24.1252C24.4953 11.5794 24.8252 11.3005 24.9495 10.8805C25.0737 10.4626 24.9661 9.99419 24.6791 9.71313L15.0541 0.23945Z'\n          fill='currentColor'\n        />\n      </g>\n      <defs>\n        <filter\n          id='filter0_d'\n          x='0.875'\n          y='0.000732422'\n          width='28.1255'\n          height='26.9471'\n          filterUnits='userSpaceOnUse'\n          colorInterpolationFilters='sRGB'\n        >\n          <feFlood floodOpacity='0' result='BackgroundImageFix' />\n          <feColorMatrix\n            in='SourceAlpha'\n            type='matrix'\n            values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0'\n          />\n          <feOffset dy='4' />\n          <feGaussianBlur stdDeviation='2' />\n          <feColorMatrix type='matrix' values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0' />\n          <feBlend mode='normal' in2='BackgroundImageFix' result='effect1_dropShadow' />\n          <feBlend mode='normal' in='SourceGraphic' in2='effect1_dropShadow' result='shape' />\n        </filter>\n      </defs>\n    </>\n  )\n})\n\nexport const farm = createIcon({\n  displayName: 'farm',\n  viewBox: '0 0 21 19',\n  path: (\n    <>\n      <path\n        width='21'\n        height='19'\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M16.2273 0.905212V2.80997H19.0909V17.0957H1.90909V2.80997H3.81818V0.905212H1.90909C0.855273 0.905212 0 1.75855 0 2.80997V17.0957C0 18.1471 0.855273 19.0005 1.90909 19.0005H19.0909C20.1447 19.0005 21 18.1471 21 17.0957V2.80997C21 1.75855 20.1447 0.905212 19.0909 0.905212H16.2273Z'\n        fill='currentColor'\n      />\n      <path\n        width='21'\n        height='19'\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M3.68359 2.80997H16.3654V0.905212H3.68359V2.80997Z'\n        fill='currentColor'\n      />\n      <path\n        width='21'\n        height='19'\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M7.63459 6.61902H3.81641V10.4285H7.63459V6.61902Z'\n        fill='currentColor'\n      />\n      <path\n        width='21'\n        height='19'\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M12.408 6.61902H8.58984V10.4285H12.408V6.61902Z'\n        fill='currentColor'\n      />\n      <path\n        width='21'\n        height='19'\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M13.3633 10.4285H17.1815V6.61902H13.3633V10.4285Z'\n        fill='currentColor'\n      />\n      <path\n        width='21'\n        height='19'\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M3.81641 15.1905H7.63459V11.381H3.81641V15.1905Z'\n        fill='currentColor'\n      />\n      <path\n        width='21'\n        height='19'\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M8.58984 15.1905H12.408V11.381H8.58984V15.1905Z'\n        fill='currentColor'\n      />\n    </>\n  )\n})\n\nexport const activity = createIcon({\n  displayName: 'activity',\n  viewBox: '0 0 53 58',\n  path: (\n    <path\n      width='53'\n      height='58'\n      d='M46.375 7.25H35.3333C35.3333 3.25117 31.3721 0 26.5 0C21.6279 0 17.6667 3.25117 17.6667 7.25H6.625C2.96745 7.25 0 9.68555 0 12.6875V52.5625C0 55.5645 2.96745 58 6.625 58H46.375C50.0326 58 53 55.5645 53 52.5625V12.6875C53 9.68555 50.0326 7.25 46.375 7.25ZM13.25 48.0312C11.4143 48.0312 9.9375 46.8191 9.9375 45.3125C9.9375 43.8059 11.4143 42.5938 13.25 42.5938C15.0857 42.5938 16.5625 43.8059 16.5625 45.3125C16.5625 46.8191 15.0857 48.0312 13.25 48.0312ZM13.25 37.1562C11.4143 37.1562 9.9375 35.9441 9.9375 34.4375C9.9375 32.9309 11.4143 31.7188 13.25 31.7188C15.0857 31.7188 16.5625 32.9309 16.5625 34.4375C16.5625 35.9441 15.0857 37.1562 13.25 37.1562ZM13.25 26.2812C11.4143 26.2812 9.9375 25.0691 9.9375 23.5625C9.9375 22.0559 11.4143 20.8438 13.25 20.8438C15.0857 20.8438 16.5625 22.0559 16.5625 23.5625C16.5625 25.0691 15.0857 26.2812 13.25 26.2812ZM26.5 4.53125C28.3357 4.53125 29.8125 5.74336 29.8125 7.25C29.8125 8.75664 28.3357 9.96875 26.5 9.96875C24.6643 9.96875 23.1875 8.75664 23.1875 7.25C23.1875 5.74336 24.6643 4.53125 26.5 4.53125ZM44.1667 46.2188C44.1667 46.7172 43.6698 47.125 43.0625 47.125H23.1875C22.5802 47.125 22.0833 46.7172 22.0833 46.2188V44.4062C22.0833 43.9078 22.5802 43.5 23.1875 43.5H43.0625C43.6698 43.5 44.1667 43.9078 44.1667 44.4062V46.2188ZM44.1667 35.3438C44.1667 35.8422 43.6698 36.25 43.0625 36.25H23.1875C22.5802 36.25 22.0833 35.8422 22.0833 35.3438V33.5312C22.0833 33.0328 22.5802 32.625 23.1875 32.625H43.0625C43.6698 32.625 44.1667 33.0328 44.1667 33.5312V35.3438ZM44.1667 24.4688C44.1667 24.9672 43.6698 25.375 43.0625 25.375H23.1875C22.5802 25.375 22.0833 24.9672 22.0833 24.4688V22.6562C22.0833 22.1578 22.5802 21.75 23.1875 21.75H43.0625C43.6698 21.75 44.1667 22.1578 44.1667 22.6562V24.4688Z'\n      fill='currentColor'\n    />\n  )\n})\n\nexport const delivery = createIcon({\n  displayName: 'delivery',\n  viewBox: '0 0 94 94',\n  path: (\n    <path\n      width='94'\n      height='94'\n      d='M11.7474 52.8724L8.8099 46.9974H29.3724L27.0224 41.1224H7.83073L4.89323 35.2474H35.4432L33.0932 29.3724H4.3449L0.976562 23.4974H15.6641C15.6641 21.4199 16.4894 19.4274 17.9584 17.9584C19.4274 16.4894 21.4199 15.6641 23.4974 15.6641H70.4974V31.3307H82.2474L93.9974 46.9974V66.5807H86.1641C86.1641 69.697 84.9261 72.6857 82.7226 74.8892C80.519 77.0928 77.5304 78.3307 74.4141 78.3307C71.2978 78.3307 68.3091 77.0928 66.1056 74.8892C63.902 72.6857 62.6641 69.697 62.6641 66.5807H46.9974C46.9974 69.697 45.7595 72.6857 43.5559 74.8892C41.3524 77.0928 38.3637 78.3307 35.2474 78.3307C32.1311 78.3307 29.1424 77.0928 26.9389 74.8892C24.7353 72.6857 23.4974 69.697 23.4974 66.5807H15.6641V52.8724H11.7474ZM74.4141 72.4557C75.9722 72.4557 77.4665 71.8368 78.5683 70.735C79.6701 69.6332 80.2891 68.1389 80.2891 66.5807C80.2891 65.0226 79.6701 63.5282 78.5683 62.4265C77.4665 61.3247 75.9722 60.7057 74.4141 60.7057C72.8559 60.7057 71.3616 61.3247 70.2598 62.4265C69.158 63.5282 68.5391 65.0226 68.5391 66.5807C68.5391 68.1389 69.158 69.6332 70.2598 70.735C71.3616 71.8368 72.8559 72.4557 74.4141 72.4557ZM80.2891 37.2057H70.4974V46.9974H87.9657L80.2891 37.2057ZM35.2474 72.4557C36.8055 72.4557 38.2999 71.8368 39.4017 70.735C40.5034 69.6332 41.1224 68.1389 41.1224 66.5807C41.1224 65.0226 40.5034 63.5282 39.4017 62.4265C38.2999 61.3247 36.8055 60.7057 35.2474 60.7057C33.6893 60.7057 32.1949 61.3247 31.0931 62.4265C29.9914 63.5282 29.3724 65.0226 29.3724 66.5807C29.3724 68.1389 29.9914 69.6332 31.0931 70.735C32.1949 71.8368 33.6893 72.4557 35.2474 72.4557Z'\n      fill='currentColor'\n    />\n  )\n})\n\nexport const inventory = createIcon({\n  displayName: 'inventory',\n  viewBox: '0 0 60 66',\n  path: (\n    <path\n      width='60'\n      height='66'\n      d='M47.25 45.374H12.7875C12.375 45.374 12.0375 45.8381 12.0375 46.4053L12.0281 52.5931C12.0281 53.1603 12.3656 53.6244 12.7781 53.6244H47.25C47.6625 53.6244 48 53.1603 48 52.5931V46.4053C48 45.8381 47.6625 45.374 47.25 45.374ZM47.25 57.7496H12.7594C12.3469 57.7496 12.0094 58.2137 12.0094 58.7809L12 64.9687C12 65.5359 12.3375 66 12.75 66H47.25C47.6625 66 48 65.5359 48 64.9687V58.7809C48 58.2137 47.6625 57.7496 47.25 57.7496ZM47.25 32.9984H12.8063C12.3938 32.9984 12.0563 33.4625 12.0563 34.0297L12.0469 40.2175C12.0469 40.7847 12.3844 41.2488 12.7969 41.2488H47.25C47.6625 41.2488 48 40.7847 48 40.2175V34.0297C48 33.4625 47.6625 32.9984 47.25 32.9984ZM57.2344 15.0795L31.725 0.473762C31.1767 0.160993 30.5889 0 29.9953 0C29.4017 0 28.8139 0.160993 28.2656 0.473762L2.76562 15.0795C1.09688 16.0464 0 18.2895 0 20.7904V64.9687C0 65.5359 0.3375 66 0.75 66H8.25C8.6625 66 9 65.5359 9 64.9687V32.9984C9 30.7295 10.3688 28.8732 12.0563 28.8732H47.9437C49.6312 28.8732 51 30.7295 51 32.9984V64.9687C51 65.5359 51.3375 66 51.75 66H59.25C59.6625 66 60 65.5359 60 64.9687V20.7904C60 18.2895 58.9031 16.0464 57.2344 15.0795Z'\n      fill='currentColor'\n    />\n  )\n})\n\nexport const warehouse = createIcon({\n  displayName: 'warehouse',\n  viewBox: '0 0 60 66',\n  path: (\n    <path\n      width='60'\n      height='66'\n      d='M47.25 45.374H12.7875C12.375 45.374 12.0375 45.8381 12.0375 46.4053L12.0281 52.5931C12.0281 53.1603 12.3656 53.6244 12.7781 53.6244H47.25C47.6625 53.6244 48 53.1603 48 52.5931V46.4053C48 45.8381 47.6625 45.374 47.25 45.374ZM47.25 57.7496H12.7594C12.3469 57.7496 12.0094 58.2137 12.0094 58.7809L12 64.9687C12 65.5359 12.3375 66 12.75 66H47.25C47.6625 66 48 65.5359 48 64.9687V58.7809C48 58.2137 47.6625 57.7496 47.25 57.7496ZM47.25 32.9984H12.8063C12.3938 32.9984 12.0563 33.4625 12.0563 34.0297L12.0469 40.2175C12.0469 40.7847 12.3844 41.2488 12.7969 41.2488H47.25C47.6625 41.2488 48 40.7847 48 40.2175V34.0297C48 33.4625 47.6625 32.9984 47.25 32.9984ZM57.2344 15.0795L31.725 0.473762C31.1767 0.160993 30.5889 0 29.9953 0C29.4017 0 28.8139 0.160993 28.2656 0.473762L2.76562 15.0795C1.09688 16.0464 0 18.2895 0 20.7904V64.9687C0 65.5359 0.3375 66 0.75 66H8.25C8.6625 66 9 65.5359 9 64.9687V32.9984C9 30.7295 10.3688 28.8732 12.0563 28.8732H47.9437C49.6312 28.8732 51 30.7295 51 32.9984V64.9687C51 65.5359 51.3375 66 51.75 66H59.25C59.6625 66 60 65.5359 60 64.9687V20.7904C60 18.2895 58.9031 16.0464 57.2344 15.0795Z'\n      fill='currentColor'\n    />\n  )\n})\n\nexport const wallet = createIcon({\n  displayName: 'wallet',\n  viewBox: '0 0 21 19',\n  path: (\n    <>\n      <path\n        width='21'\n        height='19'\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M18.9 12.6676H14.0847L11.9847 10.8581L14.0847 9.04853H18.9V12.6676ZM16.7969 16.2866H2.1V5.42948H16.8V7.23901H13.65C13.3717 7.23901 13.104 7.33491 12.9076 7.5041L9.75765 10.2184C9.3471 10.5722 9.3471 11.144 9.75765 11.4986L12.9076 14.2129C13.104 14.3812 13.3717 14.4771 13.65 14.4771H16.7979L16.7969 16.2866ZM13.1428 2.05472L14.0511 3.61996H8.60265L13.1428 2.05472ZM19.95 7.23901H18.9V5.42948C18.9 4.43153 17.9581 3.61996 16.8 3.61996H16.3989L14.5898 0.501245C14.3451 0.0805311 13.7676 -0.108564 13.2594 0.0660549L2.94735 3.61996H2.1C0.94185 3.61996 0 4.43153 0 5.42948V16.2866C0 17.2846 0.94185 18.0961 2.1 18.0961H16.8C17.9581 18.0961 18.9 17.2846 18.9 16.2866V14.4771H19.95C20.5296 14.4771 21 14.0718 21 13.5723V8.14377C21 7.64434 20.5296 7.23901 19.95 7.23901Z'\n        fill='currentColor'\n      />\n      <path\n        width='21'\n        height='19'\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M13.6484 10.8581C13.6484 11.3584 14.1188 11.7628 14.6984 11.7628C15.278 11.7628 15.7484 11.3584 15.7484 10.8581C15.7484 10.3595 15.278 9.95331 14.6984 9.95331C14.1188 9.95331 13.6484 10.3595 13.6484 10.8581Z'\n        fill='currentColor'\n      />\n    </>\n  )\n})\n\nexport const bookmark = createIcon({\n  displayName: 'bookmark',\n  viewBox: '0 0 24 24',\n  path: (\n    <path\n      fill='none'\n      stroke='currentColor'\n      strokeWidth='2'\n      strokeLinecap='round'\n      strokeLinejoin='round'\n      className='feather feather-bookmark'\n      d='M19 21l-7-5-7 5V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2z'\n    />\n  )\n})\n\nexport const support = createIcon({\n  displayName: 'support',\n  viewBox: '0 0 20 20',\n  path: (\n    <>\n      <path\n        width='20'\n        height='20'\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M17.7778 6.08696H17.6889C17.1478 2.65087 13.9111 0 10 0C6.08889 0 2.85222 2.65087 2.31111 6.08696H2.22222C0.994445 6.08696 0 6.99594 0 8.11594V10.1449C0 11.2649 0.994445 12.1739 2.22222 12.1739H4.44444V7.10145C4.44444 4.30449 6.93667 2.02899 10 2.02899C13.0633 2.02899 15.5556 4.30449 15.5556 7.10145V12.1739H17.7778C19.0056 12.1739 20 11.2649 20 10.1449V8.11594C20 6.99594 19.0056 6.08696 17.7778 6.08696Z'\n        fill='currentColor'\n      />\n      <path\n        width='20'\n        height='20'\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M14.2857 8.26082C14.2857 6.10278 12.3636 4.34778 10 4.34778C7.63644 4.34778 5.71429 6.10278 5.71429 8.26082C5.71429 10.4179 7.63644 12.1739 10 12.1739C12.3636 12.1739 14.2857 10.4179 14.2857 8.26082Z'\n        fill='currentColor'\n      />\n      <path\n        width='20'\n        height='20'\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M10 13.0435C4.67323 13.0435 0.952393 15.4951 0.952393 19.0062V20H19.0476V19.0062C19.0476 15.4951 15.3268 13.0435 10 13.0435Z'\n        fill='currentColor'\n      />\n    </>\n  )\n})\n\nexport const calendar = createIcon({\n  displayName: 'calendar',\n  viewBox: '0 0 24 24',\n  path: (\n    <path\n      fill='currentColor'\n      fillRule='evenodd'\n      d='M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z'\n      clipRule='evenodd'\n    />\n  )\n})\n\nexport const help = createIcon({\n  displayName: 'help',\n  viewBox: '0 0 24 24',\n  path: (\n    <path\n      fill='currentColor'\n      fillRule='evenodd'\n      d='M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-3a1 1 0 00-.867.5 1 1 0 11-1.731-1A3 3 0 0113 8a3.001 3.001 0 01-2 2.83V11a1 1 0 11-2 0v-1a1 1 0 011-1 1 1 0 100-2zm0 8a1 1 0 100-2 1 1 0 000 2z'\n      clipRule='evenodd'\n    />\n  )\n})\n\nexport const logout = createIcon({\n  displayName: 'logout',\n  viewBox: '0 0 24 24',\n  path: (\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M17 1.01L7 1C5.9 1 5 1.9 5 3V21C5 22.1 5.9 23 7 23H17C18.1 23 19 22.1 19 21V3C19 1.9 18.1 1.01 17 1.01ZM17 19H7V5H17V19ZM16 13H13V8H11V13H8L12 17L16 13Z'\n      fill='currentColor'\n    />\n  )\n})\n\nexport const sourcing = createIcon({\n  displayName: 'sourcing',\n  viewBox: '0 0 24 24',\n  path: (\n    <path\n      fill='none'\n      stroke='currentColor'\n      strokeLinecap='round'\n      strokeLinejoin='round'\n      strokeWidth='2'\n      d='M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z'\n    />\n  )\n})\n\nexport const arrowLeft = createIcon({\n  displayName: 'arrowLeft',\n  viewBox: '0 0 24 24',\n  path: (\n    <path\n      fill='currentColor'\n      fillRule='evenodd'\n      d='M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z'\n      clipRule='evenodd'\n    />\n  )\n})\n\nexport const arrowRight = createIcon({\n  displayName: 'arrowRight',\n  viewBox: '0 0 24 24',\n  path: (\n    <path\n      fill='currentColor'\n      fillRule='evenodd'\n      d='M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z'\n      clipRule='evenodd'\n    />\n  )\n})\n\nexport const chevronDown = createIcon({\n  displayName: 'chevronDown',\n  viewBox: '0 0 24 24',\n  path: (\n    <path\n      fill='currentColor'\n      fillRule='evenodd'\n      d='M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z'\n      clipRule='evenodd'\n    />\n  )\n})\n\nexport const chevronUp = createIcon({\n  displayName: 'chevronUp',\n  viewBox: '0 0 24 24',\n  path: (\n    <path\n      fill='currentColor'\n      fillRule='evenodd'\n      d='M14.707 12.707a1 1 0 01-1.414 0L10 9.414l-3.293 3.293a1 1 0 01-1.414-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 010 1.414z'\n      clipRule='evenodd'\n    />\n  )\n})\n\nexport const chevronLeft = createIcon({\n  displayName: 'chevronLeft',\n  viewBox: '0 0 24 24',\n  path: (\n    <path\n      strokeLinecap='round'\n      strokeLinejoin='round'\n      fill='none'\n      stroke='currentColor'\n      strokeWidth={2}\n      d='M15 19l-7-7 7-7'\n    />\n  )\n})\n\nexport const chevronRight = createIcon({\n  displayName: 'chevronRight',\n  viewBox: '0 0 24 24',\n  path: (\n    <path\n      strokeLinecap='round'\n      strokeLinejoin='round'\n      fill='none'\n      stroke='currentColor'\n      strokeWidth={2}\n      d='M9 5l7 7-7 7'\n    />\n  )\n})\n\nexport const Schedule = createIcon({\n  displayName: 'Schedule',\n  viewBox: '0 0 20 18',\n  path: (\n    <>\n      <path\n        fill='currentColor'\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M3 14C3 12.159 4.159 11 6 11C7.841 11 9 12.159 9 14H3Z'\n      />\n      <path\n        fill='currentColor'\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M8 8C8 9.104 7.104 10 6 10C4.896 10 4 9.104 4 8C4 6.896 4.896 6 6 6C7.104 6 8 6.896 8 8Z'\n      />\n      <path\n        fill='currentColor'\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M17 9.99951H11V7.99951H17V9.99951Z'\n      />\n      <path\n        fill='currentColor'\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M17 13.9995H11V11.9995H17V13.9995Z'\n      />\n      <path\n        fill='currentColor'\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M2 16V4H7.185C7.599 5.162 8.698 6 10 6C11.302 6 12.401 5.162 12.815 4H18L18.001 16H2ZM10 2C10.551 2 11 2.449 11 3C11 3.551 10.551 4 10 4C9.449 4 9 3.551 9 3C9 2.449 9.449 2 10 2ZM18 2H12.815C12.401 0.838 11.302 0 10 0C8.698 0 7.599 0.838 7.185 2H2C0.897 2 0 2.896 0 4V16C0 17.103 0.897 18 2 18H18C19.103 18 20 17.103 20 16V4C20 2.896 19.103 2 18 2Z'\n      />\n    </>\n  )\n})\n\nexport const document = createIcon({\n  displayName: 'document',\n  viewBox: '0 0 24 24',\n  path: (\n    <path\n      fill='none'\n      stroke='currentColor'\n      strokeLinecap='round'\n      strokeLinejoin='round'\n      strokeWidth='2'\n      d='M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2'\n    />\n  )\n})\n\nexport const history = createIcon({\n  displayName: 'history',\n  viewBox: '0 0 24 24',\n  path: (\n    <path\n      fill='none'\n      stroke='currentColor'\n      strokeLinecap='round'\n      strokeLinejoin='round'\n      strokeWidth={2}\n      d='M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z'\n    />\n  )\n})\n\nexport const mail = createIcon({\n  displayName: 'mail',\n  viewBox: '0 0 24 24',\n  path: (\n    <>\n      <path\n        fill='currentColor'\n        d='M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z'\n      />\n      <path fill='currentColor' d='M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z' />\n    </>\n  )\n})\n\nexport const location = createIcon({\n  displayName: 'location',\n  viewBox: '0 0 24 24',\n  path: (\n    <path\n      fill='currentColor'\n      fillRule='evenodd'\n      d='M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z'\n      clipRule='evenodd'\n    />\n  )\n})\n\nexport const checkCircle = createIcon({\n  displayName: 'checkCircle',\n  viewBox: '0 0 24 24',\n  path: (\n    <path\n      fill='currentColor'\n      fillRule='evenodd'\n      d='M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z'\n      clipRule='evenodd'\n    />\n  )\n})\n\nexport const image = createIcon({\n  displayName: 'image',\n  viewBox: '0 0 24 24',\n  path: (\n    <path\n      fill='currentColor'\n      fillRule='evenodd'\n      d='M4 3a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V5a2 2 0 00-2-2H4zm12 12H4l4-8 3 6 2-4 3 6z'\n      clipRule='evenodd'\n    />\n  )\n})\n\nexport const map = createIcon({\n  displayName: 'map',\n  viewBox: '0 0 24 24',\n  path: (\n    <path\n      fill='none'\n      stroke='currentColor'\n      strokeLinecap='round'\n      strokeLinejoin='round'\n      strokeWidth='2'\n      d='M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9a9 9 0 01-9-9m9 9c1.657 0 3-4.03 3-9s-1.343-9-3-9m0 18c-1.657 0-3-4.03-3-9s1.343-9 3-9m-9 9a9 9 0 019-9'\n    />\n  )\n})\n\nexport const market = createIcon({\n  displayName: 'market',\n  viewBox: '0 0 21 19',\n  path: (\n    <>\n      <path\n        width='21'\n        height='19'\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M1.75 4.31093L10.5 1.84365L19.25 4.31093V4.52446H1.75V4.31093ZM20.3551 2.7466L10.7301 0.0323129C10.5788 -0.00930613 10.4212 -0.00930613 10.2699 0.0323129L0.644875 2.7466C0.26425 2.85427 0 3.21165 0 3.61969V5.42922C0 5.92955 0.392 6.33398 0.875 6.33398V18.0959H2.625V6.33398H18.375V18.0959H20.125V6.33398C20.608 6.33398 21 5.92955 21 5.42922V3.61969C21 3.21165 20.7358 2.85427 20.3551 2.7466Z'\n        fill='currentColor'\n      />\n      <path\n        width='21'\n        height='19'\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M6.99922 10.9C6.50287 10.9 6.09922 11.3032 6.09922 11.8C6.09922 12.2964 6.50287 12.7 6.99922 12.7C7.49557 12.7 7.89922 12.2964 7.89922 11.8C7.89922 11.3032 7.49557 10.9 6.99922 10.9ZM6.99922 13.6C6.00652 13.6 5.19922 12.7927 5.19922 11.8C5.19922 10.8073 6.00652 10 6.99922 10C7.99192 10 8.79922 10.8073 8.79922 11.8C8.79922 12.7927 7.99192 13.6 6.99922 13.6Z'\n        fill='currentColor'\n      />\n      <path\n        width='21'\n        height='19'\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M4.80963 14.9715H9.19075C8.9665 14.0416 8.128 13.4286 7 13.4286C5.872 13.4286 5.03387 14.0416 4.80963 14.9715ZM10 16H4V15.4857C4 13.6688 5.23375 12.4 7 12.4C8.76662 12.4 10 13.6688 10 15.4857V16Z'\n        fill='currentColor'\n      />\n      <path\n        width='21'\n        height='19'\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M13.9992 10.9C13.5029 10.9 13.0992 11.3032 13.0992 11.8C13.0992 12.2964 13.5029 12.7 13.9992 12.7C14.4956 12.7 14.8992 12.2964 14.8992 11.8C14.8992 11.3032 14.4956 10.9 13.9992 10.9ZM13.9992 13.6C13.0065 13.6 12.1992 12.7927 12.1992 11.8C12.1992 10.8073 13.0065 10 13.9992 10C14.9919 10 15.7992 10.8073 15.7992 11.8C15.7992 12.7927 14.9919 13.6 13.9992 13.6Z'\n        fill='currentColor'\n      />\n      <path\n        width='21'\n        height='19'\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M11.8096 14.9715H16.1908C15.9665 14.0416 15.128 13.4286 14 13.4286C12.872 13.4286 12.0339 14.0416 11.8096 14.9715ZM17 16H11V15.4857C11 13.6688 12.2337 12.4 14 12.4C15.7666 12.4 17 13.6688 17 15.4857V16Z'\n        fill='currentColor'\n      />\n    </>\n  )\n})\n\nexport const arrowDown = createIcon({\n  displayName: 'arrowDown',\n  viewBox: '0 0 24 24',\n  path: (\n    <path\n      fill='currentColor'\n      fillRule='evenodd'\n      d='M14.707 12.293a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 111.414-1.414L9 14.586V3a1 1 0 012 0v11.586l2.293-2.293a1 1 0 011.414 0z'\n      clipRule='evenodd'\n    />\n  )\n})\n\nexport const circle = createIcon({\n  displayName: 'circle',\n  viewBox: '0 0 24 24',\n  path: (\n    <circle\n      fill='none'\n      stroke='currentColor'\n      strokeWidth='2'\n      strokeLinecap='round'\n      strokeLinejoin='round'\n      cx='12'\n      cy='12'\n      r='10'\n    />\n  )\n})\n\nexport const closeIcon = createIcon({\n  displayName: 'closeIcon',\n  viewBox: '0 0 24 24',\n  path: <path fill='none' stroke='currentColor' strokeWidth={2} d='M6 18L18 6M6 6l12 12' />\n})\n\nexport const Add = createIcon({\n  displayName: 'Add',\n  viewBox: '0 0 24 24',\n  path: (\n    <path\n      strokeLinecap='round'\n      strokeLinejoin='round'\n      fill='none'\n      stroke='currentColor'\n      strokeWidth={2}\n      d='M12 6v6m0 0v6m0-6h6m-6 0H6'\n    />\n  )\n})\n\nexport const elipses = createIcon({\n  displayName: 'elipses',\n  viewBox: '0 0 24 24',\n  path: (\n    <path\n      fill='currentColor'\n      d='M10 6a2 2 0 110-4 2 2 0 010 4zM10 12a2 2 0 110-4 2 2 0 010 4zM10 18a2 2 0 110-4 2 2 0 010 4z'\n    />\n  )\n})\n\nexport const arrowNarrowRight = createIcon({\n  displayName: 'arrowNarrowRigt',\n  viewBox: '0 0 24 24',\n  path: (\n    <path\n      fill='none'\n      stroke='currentColor'\n      strokeLinecap='round'\n      strokeLinejoin='round'\n      strokeWidth='2'\n      d='M17 8l4 4m0 0l-4 4m4-4H3'\n    />\n  )\n})\n\nexport const Refresh = createIcon({\n  displayName: 'Refresh',\n  viewBox: '0 0 61 60',\n  path: (\n    <path\n      width='61'\n      height='60'\n      d='M59.5528 36.6158L52.1569 49.4254C50.7073 51.9695 48.0153 53.3008 45.2936 53.1233H39.3769V59.04L31.9811 45.7275L39.3769 32.415V38.3316H47.7194L41.1519 26.942L53.9615 19.5462L59.2865 28.7762C60.8248 31.0541 61.0319 34.1012 59.5528 36.6158ZM22.2482 0.0507812H37.0398C39.939 0.0507812 42.4536 1.73703 43.6665 4.16286L46.6248 9.31037L51.7428 6.35203L43.9328 19.3983L28.6973 19.6645L33.8153 16.7062L29.644 9.45828L23.1061 20.8479L10.2669 13.452L15.5919 4.22203C16.8048 1.76661 19.3194 0.0507812 22.2482 0.0507812ZM9.94151 49.455L2.54568 36.6454C1.09609 34.1308 1.30318 31.1133 2.81193 28.8354L5.77026 23.7175L0.652344 20.7591L15.8582 20.9958L23.6978 34.0716L18.5798 31.1133L14.4086 38.3316H27.5436V53.1233H16.8936C14.1423 53.3304 11.4207 51.9695 9.94151 49.455Z'\n      fill='currentColor'\n    />\n  )\n})\n\nexport const info = createIcon({\n  displayName: 'info',\n  viewBox: '0 0 24 24',\n  path: (\n    <path\n      strokeLinecap='round'\n      strokeLinejoin='round'\n      fill='none'\n      stroke='currentColor'\n      strokeWidth={2}\n      d='M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z'\n    />\n  )\n})\n\nexport const calender = createIcon({\n  displayName: 'calender',\n  viewBox: '0 0 448 512',\n  path: (\n    <path\n      fill='currentColor'\n      d='M400 64h-48V12c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v52H160V12c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v52H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zm-6 400H54c-3.3 0-6-2.7-6-6V160h352v298c0 3.3-2.7 6-6 6z'\n    />\n  )\n})\n\nexport const editPencil = createIcon({\n  displayName: 'editPencil',\n  viewBox: '0 0 29 29',\n  path: (\n    <path\n      fill='currentColor'\n      width='29'\n      height='29'\n      stroke='currentColor'\n      fillRule='evenodd'\n      d='M26.25 11l1.043-1.042c2.277-2.273 2.275-5.978 0-8.252-2.275-2.275-5.978-2.274-8.25 0L18 2.75 26.25 11zM15.901 5L3 17.969 8.174 19 19 8.115zM.446 28.556c.375.377.924.527 1.442.4L9 27.175l-1.187-5.99L1.823 20 .045 27.11c-.128.521.022 1.067.4 1.446M20.883 10L10 20.828 11.03 26 24 13.1z'\n    />\n  )\n})\n\nexport const addCircle = createIcon({\n  displayName: 'addCircle',\n  viewBox: '0 0 24 24',\n  path: (\n    <path\n      fill='currentColor'\n      fillRule='evenodd'\n      d='M10 18a8 8 0 100-16 8 8 0 000 16zm1-11a1 1 0 10-2 0v2H7a1 1 0 100 2h2v2a1 1 0 102 0v-2h2a1 1 0 100-2h-2V7z'\n      clipRule='evenodd'\n    />\n  )\n})\n\nexport const Update = createIcon({\n  displayName: 'Update',\n  viewBox: '0 0 24 22',\n  path: (\n    <>\n      <path\n        fill='currentColor'\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M11.9982 10.1255L16.3362 7.52349C15.9812 7.20249 15.5152 7.00049 14.9982 7.00049H8.99816C8.48116 7.00049 8.01516 7.20249 7.66016 7.52349L11.9982 10.1255Z'\n      />\n      <path\n        fill='currentColor'\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M12.386 11.644C12.267 11.715 12.134 11.75 12 11.75C11.866 11.75 11.733 11.715 11.615 11.644L7.012 8.88202C7.01 8.92302 7 8.96002 7 9.00002V13C7 14.105 7.896 15 9 15H15C16.105 15 17 14.105 17 13V9.00002C17 8.96002 16.991 8.92302 16.989 8.88202L12.386 11.644Z'\n      />\n      <path\n        fill='currentColor'\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M20.768 13.0005C19.855 17.0025 16.274 20.0005 12 20.0005C7.945 20.0005 4.511 17.3045 3.389 13.6115L6 11.0005H0V17.0005L1.827 15.1735C3.474 19.1745 7.412 22.0005 12 22.0005C17.382 22.0005 21.865 18.1125 22.809 13.0005H20.768Z'\n      />\n      <path\n        fill='currentColor'\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M22.1734 6.82761C20.5264 2.82761 16.5884 0.000610352 12.0004 0.000610352C6.61841 0.000610352 2.13541 3.88861 1.19141 9.00061H3.23241C4.14541 4.99761 7.72641 2.00061 12.0004 2.00061C16.0554 2.00061 19.4894 4.69661 20.6114 8.38961L18.0004 11.0006H24.0004V5.00061L22.1734 6.82761Z'\n      />\n    </>\n  )\n})\n\nexport const Support = createIcon({\n  displayName: 'Support',\n  viewBox: '0 0 24 24',\n  path: (\n    <>\n      <path\n        fill='currentColor'\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M2 6.00049V18.0005H6V20.0005L8.667 18.0005H18V6.00049H2ZM4 24.0005V20.0005H2C0.897 20.0005 0 19.1035 0 18.0005V6.00049C0 4.89749 0.897 4.00049 2 4.00049H18C19.103 4.00049 20 4.89749 20 6.00049V18.0005C20 19.1035 19.103 20.0005 18 20.0005H9.333L4 24.0005Z'\n      />\n      <path\n        fill='currentColor'\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M15 14C14.848 14 14.694 13.965 14.553 13.895C14.214 13.726 14 13.379 14 13V11H13V9H15C15.552 9 16 9.448 16 10V11L18.4 9.2C18.573 9.07 18.784 9 19 9H22V2H12V5H10V2C10 0.896 10.897 0 12 0H22C23.103 0 24 0.896 24 2V9C24 10.103 23.103 11 22 11H19.333L15.6 13.8C15.423 13.932 15.212 14 15 14Z'\n      />\n    </>\n  )\n})\n\nexport const Woman = createIcon({\n  displayName: 'Woman',\n  viewBox: '0 0 22 33',\n  path: (\n    <path\n      width='22'\n      height='33'\n      d='M17.3853 1.64997C17.2426 1.21817 16.9671 0.842453 16.5983 0.576348C16.2295 0.310243 15.7861 0.16733 15.3313 0.167971H6.66468C6.20997 0.167659 5.76673 0.310702 5.39798 0.57676C5.02923 0.842819 4.75374 1.21835 4.61068 1.64997L0.277344 14.65L4.12318 15.9348L2.33134 24.0013H6.66468V32.668H15.3313V24.0013H19.6647L17.8728 15.9326L21.7187 14.6478L17.3853 1.64997Z'\n      fill='currentColor'\n    />\n  )\n})\n\nexport const Man = createIcon({\n  displayName: 'Man',\n  viewBox: '0 0 16 44',\n  path: (\n    <path\n      width='16'\n      height='44'\n      d='M3.43624 44V27.0986H0V14.7394C0 13.4718 0.447427 12.3979 1.34228 11.5176C2.23714 10.6373 3.32886 10.1972 4.61745 10.1972H11.4899C12.7069 10.1972 13.7629 10.6373 14.6577 11.5176C15.5526 12.3979 16 13.4718 16 14.7394V27.0986H12.5638V44H3.43624ZM8 7.97887C6.7472 7.97887 5.67338 7.53873 4.77852 6.65845C3.88367 5.77817 3.43624 4.72183 3.43624 3.48944C3.43624 2.25704 3.88367 1.2007 4.77852 0.320423C5.67338 -0.559859 6.7472 -1 8 -1C9.2528 -1 10.3266 -0.559859 11.2215 0.320423C12.1163 1.2007 12.5638 2.25704 12.5638 3.48944C12.5638 4.72183 12.1163 5.77817 11.2215 6.65845C10.3266 7.53873 9.2528 7.97887 8 7.97887Z'\n      fill='currentColor'\n    />\n  )\n})\n\nexport const Resources = createIcon({\n  displayName: 'Resources',\n  viewBox: '0 0 24 24',\n  path: (\n    <path\n      width='24'\n      height='24'\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M17.0017 1.01L7.00172 1C5.90172 1 5.01172 1.9 5.01172 3V21C5.01172 22.1 5.90172 23 7.00172 23H17.0017C18.1017 23 19.0017 22.1 19.0017 21V3C19.0017 1.9 18.1017 1.01 17.0017 1.01ZM17.0017 19H7.00172V5H17.0017V19Z'\n      fill='currentColor'\n    />\n  )\n})\n\nexport const SelectArrows = createIcon({\n  displayName: 'SelectArrows',\n  viewBox: '0 0 24 24',\n  path: (\n    <path\n      d='M7 7l3-3 3 3m0 6l-3 3-3-3'\n      strokeWidth='1.5'\n      strokeLinecap='round'\n      strokeLinejoin='round'\n      fill='currentColor'\n    />\n  )\n})\n\nexport const Check = createIcon({\n  displayName: 'Check',\n  viewBox: '0 0 24 24',\n  path: (\n    <path\n      fillRule='evenodd'\n      d='M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z'\n      clipRule='evenodd'\n      fill='currentColor'\n    />\n  )\n})\n\nexport const Guide = createIcon({\n  displayName: 'Guide',\n  viewBox: '0 0 24 26',\n  path: (\n    <>\n      <mask\n        id='mask0'\n        mask-type='alpha'\n        maskUnits='userSpaceOnUse'\n        x='0'\n        y='0'\n        width='24'\n        height='26'\n      >\n        <path fillRule='evenodd' clipRule='evenodd' d='M0 0H24V26H0V0Z' fill='white' />\n      </mask>\n      <g mask='url(#mask0)'>\n        <path\n          width='24'\n          height='26'\n          fillRule='evenodd'\n          clipRule='evenodd'\n          d='M21 5.41667C19.89 5.0375 18.67 4.875 17.5 4.875C15.55 4.875 13.45 5.30833 12 6.5C10.55 5.30833 8.45 4.875 6.5 4.875C4.55 4.875 2.45 5.30833 1 6.5V22.3708C1 22.6417 1.25 22.9125 1.5 22.9125C1.6 22.9125 1.65 22.8583 1.75 22.8583C3.1 22.1542 5.05 21.6667 6.5 21.6667C8.45 21.6667 10.55 22.1 12 23.2917C13.35 22.3708 15.8 21.6667 17.5 21.6667C19.15 21.6667 20.85 21.9917 22.25 22.8042C22.35 22.8583 22.4 22.8583 22.5 22.8583C22.75 22.8583 23 22.5875 23 22.3167V6.5C22.4 6.0125 21.75 5.6875 21 5.41667ZM21 20.0417C19.9 19.6625 18.7 19.5 17.5 19.5C15.8 19.5 13.35 20.2042 12 21.125V8.66667C13.35 7.74583 15.8 7.04167 17.5 7.04167C18.7 7.04167 19.9 7.20417 21 7.58333V20.0417Z'\n          fill='currentColor'\n        />\n      </g>\n    </>\n  )\n})\n","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Cards/CropCategorySelection.js",["545"],"import { Box, Grid, GridItem } from '@chakra-ui/react'\nimport Button from 'components/Button'\nimport AboutFarm from 'components/StartFarmProcess/CropSelection/AboutFarm'\nimport React from 'react'\nimport CropSelectionCard from './CropSelectionCard'\n\nconst crops = [\n  { id: 1, title: 'Ginger Farm', acres: '100' },\n  { id: 2, title: 'Soy bean Farm' },\n  { id: 3, title: 'Sweet Potato Farm' }\n]\n\nconst CropCategorySelection = () => {\n  const [state, setState] = React.useState('Ginger Farm')\n\n  return (\n    <Grid templateColumns={{ md: '45% 55%' }} borderWidth={1} borderColor='gray.300' h={121}>\n      <GridItem>\n        {crops.map(item => (\n          <CropSelectionCard\n            onClick={() => setState(item.title)}\n            key={item.id}\n            title={item.title}\n            acres={item.acres}\n          />\n        ))}\n      </GridItem>\n      <GridItem\n        overflowY='scroll'\n        borderLeftWidth={1}\n        borderLeftColor='gray.300'\n        p={{ md: 10 }}\n        css={{\n          direction: 'rtl',\n          scrollbarColor: 'rebeccapurple',\n          scrollBehavior: 'smooth'\n        }}\n      >\n        <Box css={{ direction: 'ltr' }}>\n          {crops.map(item => state === item.title && <AboutFarm />)}\n        </Box>\n        <Box my={10}>\n          <Button btntitle='Start this farm' w={80} h={14} fontSize='md' />\n        </Box>\n      </GridItem>\n    </Grid>\n  )\n}\n\nexport default CropCategorySelection\n","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/StartFarmProcess/OtherSteps/PaymentOption.js",["546"],"import React, { useState } from 'react'\nimport { Box, Flex, Image, Heading, Icon, Text, Grid, GridItem } from '@chakra-ui/react'\nimport { useMutation } from 'react-query'\nimport { motion } from 'framer-motion'\n\nimport useApi from 'context/api'\n\nimport { Support, Schedule, Update } from 'theme/Icons'\n\nimport FarmInfo from 'components/Cards/FarmInfo'\nimport PayOption from 'components/Cards/PayOption'\n\nimport visa from '../../../assets/images/visa.png'\nimport ginger from '../../../assets/images/ginger.png'\n\nconst MotionGrid = motion.custom(Grid)\n\nconst PaymentOption = () => {\n  const { initiatePayment } = useApi()\n\n  const [cardData] = useState({\n    amount: 100,\n    purpose: 'FARM_PURCHASE',\n    order_id: '5fbba7e2dd7f2d24059ffca2',\n    transaction_type: 'CARD'\n  })\n\n  const [mutate] = useMutation(initiatePayment)\n\n  const paymentlick = async () => {\n    try {\n      const res = await mutate(cardData)\n      // console.log('result', res);\n      window.location.assign(res?.url)\n    } catch (error) {\n      // console.log(error);\n    }\n  }\n\n  return (\n    <MotionGrid layout templateColumns={{ md: 'repeat(2, 1fr)' }}>\n      <GridItem p={{ md: 10 }}>\n        <Box py={{ md: 10 }} m={8}>\n          <Image src={ginger} alt='ginger' />\n        </Box>\n\n        <Flex align='center' justify='space-between' mt={{ md: 20 }}>\n          <Box textAlign='center' w={{ md: '100%' }} px={8}>\n            <Heading as='h6' fontSize='md' mb={3}>\n              What is included in this farm\n            </Heading>\n            <Flex justify='space-between' align='center' fontSize='sm'>\n              <Flex align='center'>\n                <Icon as={Update} color='cf.400' boxSize={5} />\n                <Text ml={1}>Farm Updates</Text>\n              </Flex>\n              <Flex align='center'>\n                <Icon as={Support} color='cf.400' boxSize={5} />\n                <Text ml={1}>Support</Text>\n              </Flex>\n              <Flex align='center'>\n                <Icon as={Schedule} color='cf.400' boxSize={5} />\n                <Text ml={1}>Scheduled Farm Visits</Text>\n              </Flex>\n            </Flex>\n          </Box>\n        </Flex>\n      </GridItem>\n      <GridItem\n        borderLeftWidth={1}\n        borderLeftColor='gray.300'\n        overflowY='scroll'\n        p={{ md: 10 }}\n        css={{\n          direction: 'rtl',\n          scrollbarColor: 'rebeccapurple',\n          scrollBehavior: 'smooth'\n        }}\n      >\n        <Box css={{ direction: 'ltr' }}>\n          <Flex direction='column'>\n            <Heading as='h6' fontSize='xl' ml={5}>\n              Choose your payment Option\n            </Heading>\n            <PayOption\n              icon={visa}\n              title='Card'\n              theme='For card payments'\n              description='Stated USD prices are converted to Ghana cedis equivalent to the current exchange rate and payments it is processed in.'\n              notice='All transactions are charged a transaction fee of'\n              percent='1.95%'\n              onClick={paymentlick}\n            />\n            <PayOption\n              icon={visa}\n              title='Bank Payment'\n              theme='For bank payment'\n              description='Please note that bank transfer will take at most 2 weeks before money is transferred'\n              notice='Contact support for any help'\n              dropDown\n            />\n          </Flex>\n\n          <FarmInfo />\n        </Box>\n      </GridItem>\n    </MotionGrid>\n  )\n}\n\nexport default PaymentOption\n","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/StartFarmProcess/OtherSteps/InviteLink.js",["547","548","549","550","551","552"],"import {\n  Avatar,\n  AvatarBadge,\n  Box,\n  Divider,\n  Flex,\n  Grid,\n  GridItem,\n  Heading,\n  Icon,\n  Image,\n  Input,\n  Text,\n  useClipboard\n} from '@chakra-ui/react'\nimport Button from 'components/Button'\nimport { FormInput } from 'components/Form'\nimport ImageUpload from 'components/Form/ImageUpload'\nimport { motion } from 'framer-motion'\nimport React from 'react'\nimport { Schedule, Support, Update } from 'theme/Icons'\n\nconst MotionGrid = motion.custom(Grid)\n\nconst InviteLink = () => {\n  const [files, setFiles] = React.useState([])\n  const [value] = React.useState('http://completefarmer.com//djjgo49950-2')\n  const { hasCopied, onCopy } = useClipboard(value)\n\n  return (\n    <MotionGrid layout templateColumns={{ md: 'repeat(2, 1fr)' }}>\n      <GridItem>\n        <Flex align='center' justify='center' mt={16}>\n          <Image w={108} src={require('../../../assets/images/invite.png').default} />\n        </Flex>\n\n        <Flex align='center' justify='space-between' mt={{ md: 20 }} px={{ md: 10 }}>\n          <Box textAlign='center' w={{ md: '100%' }} px={8}>\n            <Heading as='h6' fontSize='md' mb={3}>\n              What is included in this farm\n            </Heading>\n            <Flex justify='space-between' align='center' fontSize='sm'>\n              <Flex align='center'>\n                <Icon as={Update} color='cf.400' boxSize={5} />\n                <Text ml={1}>Farm Updates</Text>\n              </Flex>\n              <Flex align='center' px={4}>\n                <Icon as={Support} color='cf.400' boxSize={5} />\n                <Text ml={1}>Support</Text>\n              </Flex>\n              <Flex align='center'>\n                <Icon as={Schedule} color='cf.400' boxSize={5} />\n                <Text ml={1}>Scheduled Farm Visits</Text>\n              </Flex>\n            </Flex>\n          </Box>\n        </Flex>\n      </GridItem>\n      <GridItem\n        borderLeftWidth={1}\n        borderLeftColor='gray.300'\n        overflowY='scroll'\n        css={{\n          direction: 'rtl',\n          scrollbarColor: 'rebeccapurple',\n          scrollBehavior: 'smooth'\n        }}\n        mb={10}\n      >\n        <Box css={{ direction: 'ltr' }} py={{ md: 10 }} px={{ md: 16 }}>\n          <Box py={4}>\n            <Heading as='h5' size='sm'>\n              What would you like to call this farm?\n            </Heading>\n\n            <Box mt={6}>\n              <FormInput bg='white' label='Farm name' placeholder='For eg: Ashesi2020' />\n            </Box>\n\n            <Box mt={16}>\n              <Heading as='h5' size='sm'>\n                Upload your profile image\n              </Heading>\n              <Box mt={6}>\n                <ImageUpload files={files} setFiles={setFiles} />\n              </Box>\n            </Box>\n\n            <Box mt={16}>\n              <Heading as='h5' size='sm'>\n                Invite your cooperative members\n              </Heading>\n\n              <Box mt={6}>\n                <FormInput bg='white' placeholder='Add people (Max of 5 and min of 2)' />\n              </Box>\n\n              <Flex align='center' mt={6}>\n                <Avatar pos='relative' src={require('../../../assets/images/Oval.png').default}>\n                  <AvatarBadge pos='absolute' top={-2} boxSize='1em' bg='cf.600' />\n                </Avatar>\n\n                <Box ml={4}>\n                  <Text>Joe Biney Stews</Text>\n                  <Text fontSize='sm' color='cf.400' mt={-2}>\n                    Admin\n                  </Text>\n                </Box>\n              </Flex>\n            </Box>\n\n            <Divider orientation='horizontal' borderColor='gray.300' my={12} />\n\n            <Box>\n              <Heading as='h5' size='sm'>\n                Get link\n              </Heading>\n\n              <Flex align='center' mt={6}>\n                <Box>\n                  <Input\n                    rounded='30px'\n                    h={12}\n                    bg='gray.100'\n                    borderWidth='0px'\n                    value={value}\n                    color='gray.400'\n                    w={80}\n                    isReadOnly\n                  />\n                </Box>\n                <Button\n                  btntitle={hasCopied ? 'Link copied' : 'Share link'}\n                  rounded='30px'\n                  borderWidth={1}\n                  borderColor='gray.800'\n                  bg='white'\n                  color='gray.800'\n                  _hover={{ bg: 'white' }}\n                  h={12}\n                  w={40}\n                  ml={3}\n                  onClick={onCopy}\n                  shadow='none'\n                />\n              </Flex>\n            </Box>\n          </Box>\n        </Box>\n      </GridItem>\n    </MotionGrid>\n  )\n}\n\nexport default InviteLink\n","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/StartFarmProcess/OtherSteps/Contract.js",["553","554","555","556","557","558","559","560","561","562","563","564","565","566"],"import { Box, Grid, GridItem, Heading, Text } from '@chakra-ui/react'\nimport FormRadio from 'components/Form/FormRadio'\nimport { motion } from 'framer-motion'\nimport React from 'react'\n\nconst MotionGrid = motion.custom(Grid)\n\nconst Contract = () => {\n  const options = ['Accept', 'Decline']\n  const [contract, setContract] = React.useState('')\n\n  return (\n    <MotionGrid layout templateColumns={{ md: 'repeat(2, 1fr)' }}>\n      <GridItem>Left</GridItem>\n      <GridItem\n        borderLeftWidth={1}\n        borderLeftColor='gray.300'\n        overflowY='scroll'\n        css={{\n          direction: 'rtl',\n          scrollbarColor: 'rebeccapurple',\n          scrollBehavior: 'smooth'\n        }}\n        mb={10}\n      >\n        <Box css={{ direction: 'ltr' }} p={{ md: 10 }}>\n          <Heading as='h3' size='lg' mb={6} color='cf.400'>\n            Complete Farmer Crowd Farming User Agreement\n          </Heading>\n          <Text>\n            Please read this Crowd Farming User Agreement (the ‘Agreement’) carefully for your\n            Complete Farmer (“The Company”) to complete yourcrowd farming subscription. This\n            Agreement should be read together withour Terms & Conditions and our Privacy Policy.This\n            Agreement is made between (the ‘Crowd Farmer’ or ‘You’), and theCompany, and is\n            effective upon signature or your acceptance. Use of Farm Management Service FeeThe\n            Company shall use the Farm Management Service Fee to take allnecessary steps to plant\n            and harvest your choses produce on your chosenacreage, as described on the Company’s\n            website. Complete Farmer thecultivation protocols shall remain the intellectual property\n            of the Companyand the Company shall have no obligation to share it with you or anyother\n            third party. The Company reserves the right to choose, assign, evaluate, and manageall\n            third parties who work with us as business partners or otherwise toprovide the Farm\n            Management Service to you.Crowd Farmers will be provided with weekly updates of crop,\n            weather andsoil conditions on the farm, and are welcome to schedule farm visits usingthe\n            Complete Farmer application. Independent Quality Assurance AuditorThe Company will\n            submit audit reports by their independent qualityassurance auditor upon request of the\n            Crowd Farmer which shall assessthe farm processes, seed and yield of harvest, should any\n            conflict ariseconcerning the above between the Crowd Farmer and the Company.\n            InsuranceThe Company strongly recommends that Crowd Farmers accept thestandard insurance\n            package offered with the Farm Management Service. Ifyou do not want to use the insurance\n            package provided, please notify theCompany.Term and TerminationThis Agreement shall\n            commence on today’s date and shall remain ineffect until the end of after the harvested\n            produce have been sold.The Company reserves the right to terminate this Agreement if\n            CompleteFarmer suspects, that you have violated any of Complete Farmer's policiesset out\n            in this Agreement, the Terms & Conditions, the Privacy Policy, orany other policy\n            documents or community guidelines, or if You haveengaged in an improper or fraudulent\n            activity in connection with CompleteFarmer. Electronic SignaturesEach party agrees that\n            the electronic signatures, whether digital orencrypted, of the Parties included in this\n            Agreement are intended toauthenticate this writing and to have the same force and effect\n            as manualsignatures in so far as the signatures are executed in accordance withsection\n            10 of the Electronic Transactions Act, 2008 (Act 772) of theRepublic of Ghana. Delivery\n            of a copy of this Agreement or any otherdocument contemplated hereby bearing an original\n            or electronic signatureby facsimile transmission, by electronic mail in “portable\n            documentformat” (“.pdf”) form, or by any other electronic means intended topreserve the\n            original graphic and pictorial appearance of a document, willhave the same effect as\n            physical delivery of the paper document bearingan original or electronic\n            signature.General TermsThe terms of this Agreement are Confidential and will survive\n            thetermination of this Agreement.A.No term of this Agreement shall be enforceable by a\n            third party whois not a party to this Agreement and has no rights under theContracts\n            (Rights of Third Parties) Act to enforce or enjoy thebenefits of this Agreement. B.If\n            any provision of this Agreement or the application thereof is heldinvalid or\n            unenforceable, the invalidity or unenforceability thereofshall not affect any other\n            provisions or applications of this Agreement that can be given effect without the\n            invalid orunenforceable provision or application. To that end, the provisionsof this\n            Agreement are to be severable.C.The Parties shall use their best endeavors to reach an\n            amicablesettlement of any dispute by mutual discussion between thedesignated\n            representatives of the Parties.D.This Agreement shall be governed in accordance with the\n            laws ofthe Republic of Ghana. E.Each Party warrants to the other Party that it has the\n            right, powerand authority to enter into this Agreement and carry out itsobligations\n            under this Agreement.By clicking the \"Accept\" button, downloading or using the\n            Application, youare agreeing to be bound by the terms and conditions of this\n            Agreement.If you do not agree to the terms of this Agreement, do not click on\n            the\"Accept\" button and do not download or use the Application.\n          </Text>\n\n          <Box mt={10}>\n            <FormRadio state={contract} onChange={setContract} options={options} width={24} />\n          </Box>\n        </Box>\n      </GridItem>\n    </MotionGrid>\n  )\n}\n\nexport default Contract\n","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/StartFarmProcess/OtherSteps/AboutFarmManager.js",["567","568","569","570","571","572"],"import React from 'react'\nimport {\n  Avatar,\n  Box,\n  Divider,\n  Flex,\n  Grid,\n  Heading,\n  Icon,\n  Image,\n  ListItem,\n  Text,\n  UnorderedList\n} from '@chakra-ui/react'\nimport { Support, Schedule, Update, location } from 'theme/Icons'\nimport Prismic from 'prismic-javascript'\nimport { motion } from 'framer-motion'\n// import { RichText, KeyText } from 'prismic-reactjs'\n\nconst MotionGrid = motion.custom(Grid)\n\nconst AboutFarmManager = () => {\n  // In prismic-configuration.js\n  const apiEndpoint = process.env.REACT_APP_API_ENDPOINT\n  const accessToken = process.env.REACT_APP_ACCESS_TOKEN // This is where you would add your access token for a Private repository\n\n  const Client = Prismic.client(apiEndpoint, { accessToken })\n\n  const [doc, setDocData] = React.useState(null)\n\n  React.useEffect(() => {\n    const fetchData = async () => {\n      const response = await Client.query(Prismic.Predicates.at('document.type', 'farm_managers'))\n      if (response) {\n        setDocData(response.results[0])\n      }\n    }\n    fetchData()\n  }, [Client])\n\n  return (\n    <MotionGrid layout templateColumns='repeat(2, 1fr)'>\n      <Box px={20} pt={20} borderRightColor='gray.400' borderRightWidth={2}>\n        <Box>\n          <Image h='10%' src={require('../../../assets/images/ginger.png').default} />\n        </Box>\n        <Flex direction='column' align='center' justify='space-between' mt={{ md: 20 }}>\n          <Heading as='h6' fontSize='md' mb={3}>\n            What is included in this farm\n          </Heading>\n          <Flex justify='space-between' align='center' fontSize='sm'>\n            <Flex align='center'>\n              <Icon as={Update} color='cf.400' boxSize={5} />\n              <Text ml={1}>Farm Updates</Text>\n            </Flex>\n            <Flex align='center' mx={6}>\n              <Icon as={Support} color='cf.400' boxSize={5} />\n              <Text ml={1}>Support</Text>\n            </Flex>\n            <Flex align='center'>\n              <Icon as={Schedule} color='cf.400' boxSize={5} />\n              <Text ml={1}>Scheduled Farm Visits</Text>\n            </Flex>\n          </Flex>\n        </Flex>\n      </Box>\n      <Box>\n        <Box pt={10} px={20} bor>\n          <Box py={4}>\n            <Heading as='h2' size='lg'>\n              Ginger\n            </Heading>\n            <Flex fontSize='sm'>\n              <Icon as={location} color='gray.400' boxSize={4} mx={2} />\n              Afram Plains, Easten Region\n              <Image\n                mx={2}\n                src={require('../../../assets/images/ic_info.png').default}\n                boxSize={4}\n                alt='update icon'\n              />\n            </Flex>\n          </Box>\n          <Divider />\n          <Box py={5}>\n            <Heading pb={5} as='h5' size='md'>\n              Here's your farm manager\n            </Heading>\n            <Box borderColor='gray.400' p={5} borderWidth={1} rounded='md'>\n              <>\n                <Grid templateColumns='repeat(2, 1fr)'>\n                  <Box py={10} px={2}>\n                    <Avatar src={doc?.data?.manager_image.url} size={8} justify='space-around' />\n                  </Box>\n                  <Box m={5}>\n                    <Text fontSize='md' fontWeight='800'>\n                      {doc?.data?.full_name}\n                    </Text>\n                    <Text fontSize='sm'>Farm Manager</Text>\n                    <Divider orientation='horizontal' borderColor='gray.300' w={60} my={5} />\n                    <Text>Manager Profile</Text>\n                    <Box>\n                      <UnorderedList>\n                        {doc?.data?.manager_profile?.map(item => (\n                          <ListItem key={item.text} fontSize='xs' textColor='gray.400'>\n                            {item.text}\n                          </ListItem>\n                        ))}\n                      </UnorderedList>\n                    </Box>\n                  </Box>\n                </Grid>\n              </>\n            </Box>\n          </Box>\n        </Box>\n      </Box>\n    </MotionGrid>\n  )\n}\n\nexport default AboutFarmManager\n","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/StartFarmProcess/OtherSteps/ChooseAcreage.js",["573","574","575","576"],"import React from 'react'\nimport { Box, Grid, Heading, Divider, Text, GridItem, Icon, Flex } from '@chakra-ui/react'\n\nimport BaseSelect from 'components/Form/BaseSelect'\nimport { InfoIcon } from '@chakra-ui/icons'\nimport FormRadio from 'components/Form/FormRadio'\nimport Map from './Map'\nimport { motion } from 'framer-motion'\n\nconst array = [...Array(500).keys()]\nconst options = ['Yes', 'No']\n\nconst MotionGrid = motion.custom(Grid)\n\nconst ChooseAcreage = () => {\n  const [selectedAcreage, setSelectedAcreage] = React.useState('')\n  const [cycle, setCycle] = React.useState('yes')\n\n  return (\n    <MotionGrid layout templateColumns={{ md: 'repeat(2, 1fr)' }}>\n      <GridItem>\n        <Map />\n      </GridItem>\n\n      <GridItem\n        borderLeftWidth={1}\n        borderLeftColor='gray.300'\n        overflowY='scroll'\n        css={{\n          direction: 'rtl',\n          scrollbarColor: 'rebeccapurple',\n          scrollBehavior: 'smooth'\n        }}\n        mb={10}\n      >\n        <Box css={{ direction: 'ltr' }} p={{ md: 10 }}>\n          <Heading as='h6' size='md' mb={2}>\n            About Location <Icon as={InfoIcon} color='cf.400' boxSize={4} mx={2} />\n          </Heading>\n\n          <Box borderWidth={1} borderColor='gray.300' rounded='md' overflow='hidden' padding={10}>\n            <Box paddingBottom='5'>\n              <Heading as='h6' size='md'>\n                Ecological zone\n              </Heading>\n              <Text>Northern savanna</Text>\n            </Box>\n            <Divider orientation='horizontal' />\n            <Heading as='h6' size='xs' mb={4}>\n              Weather\n            </Heading>\n            <Text mb={6}>\n              Weather Sandy loam soil is one of the most preferable types of soil for many types of\n              plants. Planting in loam soil with a high percentage of sand is the same as planting\n              in normal loam soil, but extra amendments may be made to compensate for slightly lower\n              water\n            </Text>\n          </Box>\n          <Box marginTop='10'>\n            <Heading as='h5' size='sm' mb={2}>\n              Choose number of acres to farm\n            </Heading>\n            <Flex align='center'>\n              <BaseSelect\n                options={array}\n                id='acres'\n                name='acres'\n                setFieldValue={setSelectedAcreage}\n                value={selectedAcreage || ''}\n                title='How many acres?'\n                placeholder='1 Acre'\n                width='250px'\n              />\n              <Box ml={6}>\n                <Text color='red.600' fontSize='xs'>\n                  +$800.00\n                </Text>\n                <Text mt={-2}>$ 750.000</Text>\n              </Box>\n            </Flex>\n          </Box>\n          <Box marginTop={10}>\n            <FormRadio\n              state={cycle}\n              onChange={setCycle}\n              title='Do you want allow cycle for this farm?'\n              options={options}\n              icon\n            />\n          </Box>\n          <Box my={10}>\n            <Heading as='h5' size='sm' mb={2}>\n              Choose number of acres to farm\n            </Heading>\n            <Box w='250px'>\n              <BaseSelect\n                options={array}\n                id='acres'\n                name='acres'\n                setFieldValue={setSelectedAcreage}\n                value={selectedAcreage || ''}\n                title='Choose number of cycle(s)'\n                placeholder='1 cycle'\n              />\n            </Box>\n          </Box>\n        </Box>\n      </GridItem>\n    </MotionGrid>\n  )\n}\n\nexport default ChooseAcreage\n","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/StartFarmProcess/OtherSteps/Confirmation.js",[],"/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/StartFarmProcess/CropSelection/FarmDetails.js",["577"],"import React, { useState, useEffect, useRef } from 'react'\nimport PropTypes from 'prop-types'\nimport { Box, Grid, GridItem } from '@chakra-ui/react'\nimport { useIntersection } from 'react-use'\nimport { Button } from 'components'\nimport { motion } from 'framer-motion'\n\nimport useApi from 'context/api'\nimport useFetch from 'hooks/useFetch'\n\nimport CropSelectionCard from 'components/Cards/CropSelectionCard'\nimport FetchCard from 'components/FetchCard'\nimport AboutFarm from './AboutFarm'\n\nconst MotionBox = motion.custom(Box)\n\nconst FarmDetails = ({ query, handleNext }) => {\n  const { getFarms } = useApi()\n  const [reload, setReload] = useState(0)\n\n  const triggerReload = () => setReload(prevState => prevState + 1)\n\n  const { data, isLoading, error } = useFetch('farms', getFarms, reload, query)\n\n  const [seletedFarm, setSeletedFarm] = useState(null)\n\n  useEffect(() => {\n    let mounted = true\n    if (mounted && data) setSeletedFarm(data[0])\n    return () => (mounted = false)\n  }, [data])\n\n  const intersectionRef = useRef(null)\n  const intersection = useIntersection(intersectionRef, {\n    root: null,\n    rootMargin: '0px',\n    threshold: 1\n  })\n\n  return isLoading || error ? (\n    <FetchCard\n      direction='column'\n      align='center'\n      justify='center'\n      mx='auto'\n      w={90}\n      reload={triggerReload}\n      loading={isLoading}\n      error={error}\n    />\n  ) : (\n    <Grid\n      templateColumns={{ md: '45% 55%' }}\n      h={121}\n      w='100%'\n      pos='relative'\n      borderWidth={1}\n      borderColor='gray.300'\n    >\n      <GridItem\n        overflowY='scroll'\n        pos='relative'\n        css={{\n          direction: 'ltl',\n          scrollbarColor: 'rebeccapurple',\n          scrollBehavior: 'smooth'\n        }}\n      >\n        {data.map(farm => (\n          <CropSelectionCard\n            key={farm.id}\n            onClick={() => setSeletedFarm(farm)}\n            title={farm.name}\n            acres={farm.acres}\n          />\n        ))}\n      </GridItem>\n      <GridItem\n        overflowY='scroll'\n        borderLeftWidth={1}\n        borderLeftColor='gray.300'\n        p={{ md: 10 }}\n        pos='relative'\n        css={{\n          direction: 'rtl',\n          scrollbarColor: 'rebeccapurple',\n          scrollBehavior: 'smooth'\n        }}\n      >\n        {seletedFarm && (\n          <>\n            <AboutFarm farm={seletedFarm} />\n            <Box my={10} ref={intersectionRef}>\n              {intersection && intersection.intersectionRatio < 1 ? (\n                <Box>&nbsp;</Box>\n              ) : (\n                <MotionBox\n                  initial={{ opacity: 0, y: -20 }}\n                  animate={{\n                    opacity: intersection && intersection.intersectionRatio < 1 ? 0 : 1,\n                    y: 0\n                  }}\n                >\n                  <Button\n                    btntitle='Start this farm'\n                    w={80}\n                    h={14}\n                    fontSize='md'\n                    onClick={handleNext}\n                  />\n                </MotionBox>\n              )}\n            </Box>\n          </>\n        )}\n      </GridItem>\n    </Grid>\n  )\n}\n\nFarmDetails.propTypes = {\n  query: PropTypes.object.isRequired,\n  handleNext: PropTypes.func.isRequired\n}\n\nexport default FarmDetails\n","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Form/Step.js",["578","579"],"import React from 'react'\nimport { Box, Flex, Icon, Tag, Text } from '@chakra-ui/react'\nimport { FiCheck } from 'react-icons/fi'\n\nconst Step = () => (\n  <Flex align='center' justify='space-between' pos='relative' mt={5}>\n    <Flex align='center'>\n      <Flex\n        align='center'\n        justify='center'\n        rounded='100%'\n        w={8}\n        h={8}\n        borderWidth={1}\n        borderColor='gray.300'\n        bg='cf.400'\n        color='white'\n      >\n        <Icon as={FiCheck} />\n      </Flex>\n      <Box ml={3}>\n        <Text as='span'>Prep</Text>\n        <Text fontSize='xs' color='gray.500' mt={-2}>\n          Finance preparation\n        </Text>\n      </Box>\n    </Flex>\n    <Box pos='absolute' borderLeftWidth={1} borderColor='gray.300' h={5} ml={4} top={10} />\n    <Box textAlign='right'>\n      <Tag bg='cf.200' color='cf.400' rounded='3xl' fontSize='sm' px={4} textAlign='center'>\n        Completed\n      </Tag>\n      <Text fontSize='xs' color='gray.500' mt={-1}>\n        3 days ago\n      </Text>\n    </Box>\n  </Flex>\n)\n\nexport default Step\n","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Cards/CropSelectionCard.js",[],"/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/StartFarmProcess/OtherSteps/Map.js",["580"],"import React from 'react'\nimport { Box } from '@chakra-ui/react'\nimport ReactMapGL, {\n  Layer,\n  Source,\n  FullscreenControl,\n  GeolocateControl,\n  NavigationControl,\n  ScaleControl\n} from 'react-map-gl'\nimport { dataJS, layer } from 'assets/data/mapdata'\n\nconst Map = () => {\n  const [viewport, setViewport] = React.useState({\n    latitude: 6.840278,\n    longitude: -0.398889,\n    width: '36vw',\n    height: '70vh',\n    zoom: 15.9\n  })\n  const sourceRef = React.useRef(null)\n\n  return (\n    <ReactMapGL\n      {...viewport}\n      mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_API}\n      onViewportChange={viewport => {\n        setViewport(viewport)\n      }}\n    >\n      <Box style={{ position: 'absolute', bottom: 20, right: 20 }}>\n        <ScaleControl maxWidth={100} unit='metric' />\n      </Box>\n      <Box style={{ position: 'absolute', top: 5, left: 5 }}>\n        <GeolocateControl positionOptions={{ enableHighAccuracy: true }} trackUserLocation />\n      </Box>\n      <Box style={{ position: 'absolute', top: 35, left: 5 }}>\n        <FullscreenControl />\n      </Box>\n      <Box style={{ position: 'absolute', top: 65, left: 5 }}>\n        <NavigationControl />\n      </Box>\n      <Source type='geojson' data={dataJS} ref={sourceRef} cluster={false}>\n        <Layer {...layer} />\n      </Source>\n    </ReactMapGL>\n  )\n}\n\nexport default Map\n","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/StartFarmProcess/CropSelection/AboutFarm.js",["581","582","583","584"],"import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Box, Divider, Flex, Heading, Icon, Image, Progress, Text } from '@chakra-ui/react'\nimport { BsInfoCircleFill } from 'react-icons/bs'\nimport { MdLocationOn } from 'react-icons/md'\n\nimport { getformattedDate } from 'helpers/misc'\n\nconst AboutFarm = ({ farm }) => (\n  <Box css={{ direction: 'ltr' }}>\n    <Box>\n      <Box>\n        <Heading as='h5' size='md'>\n          {farm?.cropVariety?.crop?.name}({farm?.cropVariety?.name}) #{farm?.name}\n        </Heading>\n        <Text fontSize='xs'>\n          <Icon as={MdLocationOn} color='gray.400' /> {farm?.location?.name},{' '}\n          {farm?.location?.state} <Icon as={BsInfoCircleFill} color='cf.400' />\n        </Text>\n        <Divider orientation='horizontal' borderColor='gray.300' my={6} />\n      </Box>\n\n      <Box w='100%' h='200px' backgroundColor='#cccc'>\n        <Image\n          h='100%'\n          w='100%'\n          objectFit='cover'\n          rounded='md'\n          src={farm?.cropVariety?.imageUrl || farm?.cropVariety?.crop?.imageUrl}\n          alt='crop'\n        />\n      </Box>\n    </Box>\n\n    <Box mb={{ md: 12 }}>\n      <Box mt={{ md: 10 }}>\n        <Heading as='h6' size='sm'>\n          About crop\n        </Heading>\n      </Box>\n\n      <Box\n        borderWidth={1}\n        borderColor='gray.300'\n        rounded='md'\n        p={{ md: 6 }}\n        color='gray.700'\n        mt={4}\n      >\n        <Flex align='center' justify='space-between' fontSize='sm'>\n          <Text>Farm starts: {getformattedDate(farm?.startDate)} </Text>\n          <Text>Farm duration: {farm?.duration} months </Text>\n        </Flex>\n        <Divider orientation='horizontal' mt={4} />\n        <Progress\n          colorScheme='cfButton'\n          value={30}\n          rounded='30px'\n          borderWidth={1}\n          borderColor='gray.300'\n          bg='transparent'\n          height='22px'\n          my={{ md: 8 }}\n        />\n        <Flex align='center' justify='center' fontSize='sm'>\n          <Text>{farm?.acreage} Acres left</Text>\n          <Divider orientation='vertical' height={4} mx={4} borderColor='gray.400' />\n          <Text>{farm?.acreage} Acres available</Text>\n          <Divider orientation='vertical' height={4} mx={4} borderColor='gray.400' />\n          <Text>{farm?.acreageSold} Acres bought</Text>\n        </Flex>\n      </Box>\n    </Box>\n\n    <Box textAlign='left'>\n      <Text>{farm?.cropVariety?.description}</Text>\n      <Text>{farm?.cropVariety?.crop?.description}</Text>\n    </Box>\n  </Box>\n)\n\nAboutFarm.propTypes = {\n  farm: PropTypes.object.isRequired\n}\n\nexport default AboutFarm\n","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/hooks/useFetch.js",[],"/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Tabs/Tabs.js",["585"],"import React, { useState, useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport { Flex, Box } from '@chakra-ui/react'\nimport { motion } from 'framer-motion'\n\nimport Tab from './Tab'\n\nconst MotionFlex = motion.custom(Flex)\n\nconst Tabs = ({\n  children,\n  width,\n  px,\n  pt,\n  display = 'block',\n  boxWidth,\n  mt,\n  mx,\n  py = 10,\n  direction = 'column'\n}) => {\n  const [activeTab, setActiveTab] = useState(children[0]?.props?.label)\n\n  const handleClickTabItem = useCallback(tab => setActiveTab(tab), [])\n\n  return (\n    <Flex direction={direction} mt={mt}>\n      <Box display={display} as='ol' listStyleType='none' w={width}>\n        {children?.map(child => {\n          const { label } = child.props\n\n          return (\n            <Tab activeTab={activeTab} key={label} label={label} onClick={handleClickTabItem} />\n          )\n        })}\n      </Box>\n\n      <MotionFlex\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1, transition: { duration: 0.5 } }}\n        w={boxWidth}\n        mx={mx || 'auto'}\n        px={px || 4}\n        py={py}\n        pt={pt}\n        bg='white'\n        pos='relative'\n      >\n        {children.map(child => {\n          if (child.props.label !== activeTab) return undefined\n          return child.props.children\n        })}\n      </MotionFlex>\n    </Flex>\n  )\n}\n\nTabs.propTypes = {\n  children: PropTypes.instanceOf(Array).isRequired,\n  px: PropTypes.any,\n  pt: PropTypes.any,\n  mt: PropTypes.any,\n  mx: PropTypes.any,\n  py: PropTypes.any,\n  width: PropTypes.any,\n  display: PropTypes.any,\n  boxWidth: PropTypes.any,\n  direction: PropTypes.any\n}\n\nexport default Tabs\n","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/helpers/validation.js",[],"/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Cards/ActionCard.js",["586"],"import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Box, Button, Flex, Heading, Text } from '@chakra-ui/react'\n\nconst ActionCard = ({ title, text, btnText }) => {\n  return (\n    <Flex\n      justify='space-between'\n      rounded='30px'\n      borderWidth={1}\n      borderColor='gray.200'\n      py={6}\n      px={10}\n    >\n      <Box>\n        <Heading as='h6' size='md' fontFamily='display' mb={2}>\n          {title}\n        </Heading>\n        <Text lineHeight='normal' fontSize='sm' dangerouslySetInnerHTML={{ __html: text }} />\n      </Box>\n\n      <Box>\n        <Button\n          bg='transparent'\n          borderWidth={1}\n          borderColor='cf.400'\n          color='cf.400'\n          rounded='30px'\n          fontSize='sm'\n          px={8}\n          _hover={{ bg: 'transparent' }}\n          _active={{ bg: 'transparent' }}\n          fontFamily='body'\n        >\n          {btnText}\n        </Button>\n      </Box>\n    </Flex>\n  )\n}\n\nActionCard.propTypes = {\n  title: PropTypes.any,\n  text: PropTypes.any,\n  btnText: PropTypes.any\n}\n\nexport default ActionCard\n","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/index.js",[],"/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Cards/PayOption.js",["587","588","589","590"],"import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Flex, Text, Image, Heading, Box, useDisclosure, Collapse, Icon } from '@chakra-ui/react'\nimport { ChevronDownIcon, ChevronUpIcon } from '@chakra-ui/icons'\nimport BankDetails from './BankDetails'\n\nconst PayOption = ({ icon, title, theme, description, notice, percent, dropDown, onClick }) => {\n  const { isOpen, onToggle } = useDisclosure()\n\n  return (\n    <Flex\n      as='button'\n      _focus={{ outline: 'none', borderColor: 'cf.400' }}\n      textAlign='left'\n      direction='column'\n      borderWidth={1}\n      borderColor='gray.400'\n      rounded='md'\n      overflow='hidden'\n      py={6}\n      px={10}\n      m={4}\n      w={108}\n      onClick={onClick}\n    >\n      <Flex align='center'>\n        <Image src={icon} alt='Card Image' />\n        <Text fontSize='lg' fontWeight={500} ml={4} fontFamily='body'>\n          {title}\n        </Text>\n      </Flex>\n      <Box borderWidth={1} borderColor='gray.100' w={{ md: '80%' }} mt={2} />\n      <Flex direction='column'>\n        <Heading as='h6' fontSize='sm'>\n          {theme}\n        </Heading>\n        <Text w={{ md: 72 }} fontSize='sm' fontWeight={500} fontFamily='body'>\n          {description}\n        </Text>\n        <Text mt={4} fontSize='sm' fontWeight={500} fontFamily='body'>\n          {notice}{' '}\n          <Text as='span' color='cf.400' fontFamily='body'>\n            {percent}{' '}\n          </Text>\n        </Text>\n      </Flex>\n      {dropDown && (\n        <>\n          <Flex align='center' as='button' onClick={onToggle} _focus={{ outline: 'none' }}>\n            <Heading as='h6' fontSize='sm' color='cf.400' mr={1}>\n              View bank details\n            </Heading>\n            <Icon as={isOpen ? ChevronUpIcon : ChevronDownIcon} color='cf.400' boxSize={6} />\n          </Flex>\n          <Collapse initialScale={0.9} in={isOpen}>\n            <BankDetails />\n          </Collapse>\n        </>\n      )}\n    </Flex>\n  )\n}\n\nPayOption.propTypes = {\n  icon: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  theme: PropTypes.any.isRequired,\n  description: PropTypes.string.isRequired,\n  notice: PropTypes.string.isRequired,\n  dropDown: PropTypes.string.isRequired,\n  percent: PropTypes.any,\n  onClick: PropTypes.any\n}\n\nexport default PayOption\n","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Form/FormRadio.js",[],"/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Form/index.js",[],"/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Form/BaseSelect.js",["591","592"],"import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Select } from 'baseui/select'\nimport { Box, FormLabel } from '@chakra-ui/react'\n\nconst BaseSelect = ({\n  options,\n  setFieldTouched,\n  setFieldValue,\n  multi,\n  value,\n  name,\n  id,\n  valueKey,\n  labelKey,\n  errors,\n  touched,\n  placeholder,\n  title,\n  width\n}) => {\n  const isArrayOfObj = !!(valueKey && labelKey)\n  const getValue = value => Object.keys(value).map(key => ({ id: value[key], label: value[key] }))\n\n  const getOptions = options => {\n    if (isArrayOfObj) {\n      return options\n    }\n    return Object.keys(options).map(key => ({\n      id: options[key],\n      label: options[key]\n    }))\n  }\n\n  // const error = _get(errors, name);\n  // const touch = _get(touched, name);\n  const inputValue = getValue(value)\n\n  const handleChange = value => {\n    let item\n    // setFieldTouched(fieldName, true);\n    if (!multi) {\n      item = value ? value.value.map(e => e.label) : ''\n    } else {\n      item = value ? value.value.map(e => e.label) : []\n    }\n    setFieldValue(name, item)\n  }\n\n  // const handleBlur = () => {\n  //   if (value) {\n  //     setFieldValue(name, value);\n  //   }\n  //   setFieldTouched(name, true);\n  // };\n\n  return (\n    <Box bg='cf.100' pos='relative' borderBottom='2px solid #3c9130'>\n      <FormLabel pos='absolute' top={-1} left={3} fontSize='xs' color='gray.600'>\n        {title}\n      </FormLabel>\n      <Select\n        options={getOptions(options)}\n        value={inputValue}\n        multi={multi}\n        name={name}\n        id={id}\n        placeholder={placeholder}\n        onChange={value => handleChange(value)}\n        overrides={{\n          Root: {\n            style: {\n              marginTop: '7px',\n              borderColor: '#3c9130',\n              fontSize: '14px',\n              width\n            }\n          },\n          ControlContainer: {\n            style: {\n              outline: 'none',\n              borderWidth: '0px',\n              backgroundColor: 'transparent'\n            }\n          },\n          ClearIcon: {\n            style: {\n              color: '#3c9130'\n            }\n          },\n          SelectArrow: {\n            style: {\n              color: '#3c9130'\n            }\n          },\n          Tag: {\n            style: {\n              color: '#fff',\n              backgroundColor: '#3c9130'\n            }\n          }\n        }}\n      />\n    </Box>\n  )\n}\n\nBaseSelect.propTypes = {\n  options: PropTypes.any,\n  setFieldTouched: PropTypes.any,\n  setFieldValue: PropTypes.any,\n  multi: PropTypes.any,\n  value: PropTypes.any,\n  name: PropTypes.any,\n  id: PropTypes.any,\n  valueKey: PropTypes.any,\n  labelKey: PropTypes.any,\n  errors: PropTypes.any,\n  touched: PropTypes.any,\n  placeholder: PropTypes.any,\n  title: PropTypes.any,\n  width: PropTypes.any\n}\n\nexport default BaseSelect\n","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Form/ImageUpload.js",["593"],"import React, { useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { Box, Flex, Icon, Image, Input, Text } from '@chakra-ui/react'\nimport { useDropzone } from 'react-dropzone'\nimport { BsX } from 'react-icons/bs'\nimport { Add } from 'theme/Icons'\n\nconst ImageUpload = ({ files, setFiles, setFieldValue, values }) => {\n  const { getRootProps, getInputProps } = useDropzone({\n    accept: 'image/*',\n    onDrop: acceptedFiles => {\n      acceptedFiles.forEach(async file => {\n        const formData = new FormData()\n        formData.append('file', file, file?.name)\n        setFieldValue('name', formData)\n      })\n      setFiles(\n        acceptedFiles.map(file =>\n          Object.assign(file, {\n            preview: URL.createObjectURL(file)\n          })\n        )\n      )\n    }\n  })\n\n  const removeImage = id => {\n    const newImages = files?.filter(item => item.name !== id)\n    setFiles(newImages)\n  }\n\n  const thumbs = files?.map(file => (\n    <Box d='inline-block' mr={4} w='100%' boxSizing='border-box' key={file.name} pos='relative'>\n      <Flex\n        align='center'\n        justify='center'\n        as='button'\n        role='button'\n        aria-label='close button'\n        w={6}\n        h={6}\n        rounded='100%'\n        bg='white'\n        color='gray.700'\n        pos='absolute'\n        top={2}\n        right={2}\n        onClick={() => removeImage(file.name)}\n      >\n        <Icon as={BsX} />\n      </Flex>\n      <Flex minW={0} overflow='hidden'>\n        <Image d='block' w='auto' h='100%' src={file.preview} />\n      </Flex>\n    </Box>\n  ))\n\n  useEffect(\n    () => () => {\n      files?.forEach(file => URL.revokeObjectURL(file.preview))\n    },\n    [files]\n  )\n\n  return (\n    <Box>\n      {files?.length === 1 ? null : (\n        <Flex\n          direction='column'\n          justify='center'\n          align='center'\n          h={32}\n          borderWidth={1}\n          borderBottomWidth={2}\n          borderBottomColor='cf.400'\n          {...getRootProps({ className: 'dropzone' })}\n        >\n          <Input {...getInputProps()} />\n          {files?.length === 0 && (\n            <>\n              <Flex\n                align='center'\n                justify='center'\n                w={8}\n                h={8}\n                rounded='100%'\n                bg='cf.400'\n                color='white'\n              >\n                <Icon as={Add} />\n              </Flex>\n              <Text color='gray.400' mt={1} fontSize='sm'>\n                Upload image here\n              </Text>\n            </>\n          )}\n        </Flex>\n      )}\n      <Box wrap='wrap' mt={10} as='aside'>\n        {thumbs}\n      </Box>\n    </Box>\n  )\n}\n\nImageUpload.propTypes = {\n  files: PropTypes.any,\n  setFiles: PropTypes.any,\n  setFieldValue: PropTypes.any,\n  values: PropTypes.any\n}\n\nexport default ImageUpload\n","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Tabs/Tab.js",[],"/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Notifications/index.js",["594","595"],"import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Box, Text, Heading, Flex, Tag } from '@chakra-ui/react'\n\nimport { Button } from 'components'\n\nconst Notification = ({ amtBought, name }) => (\n  <Box\n    pos='fixed'\n    top={24}\n    right={10}\n    w={{ md: '27%' }}\n    h={{ md: '20%' }}\n    boxShadow='md'\n    rounded='md'\n    zIndex={10}\n    bg='#fff'\n    py={2}\n  >\n    <Flex direction='column'>\n      <Flex align='center' justify='space-between' w={{ md: '90%' }} mx='auto'>\n        <Flex align='center' w={{ md: '50%' }} justify='space-between'>\n          <Heading as='h6' fontSize='10px'>\n            INVOICE DEPOSIT\n          </Heading>\n          <Tag as='tag' color='cf.400' fontSize='10px' bg='cf.200' borderRadius='none'>\n            FINALIZE\n          </Tag>\n        </Flex>\n        <Box fontSize='10px' color='gray.500'>\n          3min ago\n        </Box>\n      </Flex>\n      <Box borderBottomWidth={1} borderColor='gray.200' w={{ md: '90%' }} mx='auto' />\n    </Flex>\n\n    <Flex w={{ md: '90%' }} mx='auto' justify='space-between' align='center'>\n      <Flex direction='column' w={{ md: '60%' }} my={2}>\n        <Text fontWeight={700} fontSize='12px'>\n          Transaction Successful\n        </Text>\n        <Text fontSize='10px' color='gray.500'>\n          You have sold {amtBought} tonnes of your produce to a {name}\n        </Text>\n      </Flex>\n      <Box>\n        <Button btntitle='Download Receipt' fontSize='10px' />\n      </Box>\n    </Flex>\n  </Box>\n)\n\nNotification.propTypes = {\n  amtBought: PropTypes.any,\n  name: PropTypes.any\n}\n\nexport default Notification\n","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Cards/BankDetails.js",["596","597","598","599","600","601"],"import { Box, Flex, Text } from '@chakra-ui/react'\nimport React from 'react'\n\nconst BankDetails = () => (\n  <Box as='table' p='40px' mt='4' bg='cf.300' rounded='md' shadow='md' fontSize='sm'>\n    <Box as='tr'>\n      <Flex as='td' align='center' justify='space-between' w={{ md: 80 }} p={{ md: 4 }}>\n        <Text color='gray.400' w={{ md: 40 }}>\n          Bank:\n        </Text>\n        <Text fontWeight={500} textAlign='left' w={{ md: 72 }}>\n          ABSA Bank Ghana\n        </Text>\n      </Flex>\n    </Box>\n    <Box borderWidth={1} borderColor='gray.100' />\n    <Box as='tr'>\n      <Flex as='td' align='center' justify='space-between' w={{ md: 80 }} p={{ md: 4 }}>\n        <Text color='gray.400' w={{ md: 40 }}>\n          Branch:\n        </Text>\n        <Text fontWeight={500} textAlign='left' w={{ md: 72 }}>\n          High Street\n        </Text>\n      </Flex>\n    </Box>\n    <Box borderWidth={1} borderColor='gray.100' />\n    <Box as='tr'>\n      <Flex as='td' align='center' justify='space-between' w={{ md: 80 }} p={{ md: 4 }}>\n        <Text color='gray.400' w={{ md: 40 }}>\n          Account no:\n        </Text>\n        <Text fontWeight={500} textAlign='left' w={{ md: 72 }}>\n          0641409553 - USD\n        </Text>\n      </Flex>\n    </Box>\n    <Box borderWidth={1} borderColor='gray.100' />\n    <Box as='tr'>\n      <Flex as='td' align='center' justify='space-between' w={{ md: 80 }} p={{ md: 4 }}>\n        <Text color='gray.400' w={{ md: 40 }}>\n          Swift code:\n        </Text>\n        <Text fontWeight={500} textAlign='left' w={{ md: 72 }}>\n          BARCGHAC\n        </Text>\n      </Flex>\n    </Box>\n    <Box borderWidth={1} borderColor='gray.100' />\n    <Box as='tr'>\n      <Flex as='td' align='center' justify='space-between' w={{ md: 80 }} p={{ md: 4 }}>\n        <Text color='gray.400' w={{ md: 40 }}>\n          Account name:\n        </Text>\n        <Text fontWeight={500} textAlign='left' w={{ md: 72 }}>\n          Complete Farmer Limited\n        </Text>\n      </Flex>\n    </Box>\n    <Box borderWidth={1} borderColor='gray.100' />\n  </Box>\n)\n\nexport default BankDetails\n","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Form/TextArea.js",["602","603"],"import React from 'react'\nimport { Box, FormControl, FormErrorMessage, FormLabel } from '@chakra-ui/react'\nimport PropTypes from 'prop-types'\nimport { Textarea } from 'baseui/textarea'\n\nconst FormTextArea = ({\n  label,\n  value,\n  onChange,\n  onBlur,\n  placeholder,\n  name,\n  error,\n  touched,\n  bg,\n  ...rest\n}) => (\n  <FormControl pos='relative' pt={2} isInvalid={error && touched} {...rest}>\n    <Box\n      bg={bg}\n      borderWidth={1}\n      borderColor='gray.100'\n      borderBottomColor={error && touched ? 'red.500' : 'cf.400'}\n    >\n      <FormLabel fontSize={{ md: 'xs' }} pos='absolute' left={{ md: 4 }} top={3} color='gray.600'>\n        {label}\n      </FormLabel>\n      <Textarea\n        value={value}\n        onChange={onChange}\n        onBlur={onBlur}\n        placeholder={placeholder}\n        name={name}\n        type='text'\n        clearOnEscape\n        overrides={{\n          Root: {\n            style: {\n              backgroundColor: 'transparent',\n              borderWidth: '0px'\n            }\n          },\n          Input: {\n            style: {\n              backgroundColor: 'transparent',\n              borderWidth: '0px',\n              marginTop: '8px'\n            }\n          },\n          InputContainer: {\n            style: {\n              backgroundColor: 'transparent',\n              borderWidth: '0px'\n            }\n          }\n        }}\n      />\n    </Box>\n\n    {error && touched && <FormErrorMessage fontSize='xs'>{error}</FormErrorMessage>}\n  </FormControl>\n)\n\nFormTextArea.propTypes = {\n  label: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n  placeholder: PropTypes.any.isRequired,\n  name: PropTypes.any.isRequired,\n  onChange: PropTypes.any.isRequired,\n  error: PropTypes.any,\n  touched: PropTypes.any,\n  bg: PropTypes.any,\n  onBlur: PropTypes.any.isRequired\n}\n\nexport default FormTextArea\n","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/assets/data/mapdata.js",[],"/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Form/Input.js",["604","605","606"],"import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Box, FormControl, FormErrorMessage, FormLabel } from '@chakra-ui/react'\nimport { Input } from 'baseui/input'\n\nconst FormInput = ({\n  label,\n  titleAddon,\n  value,\n  onChange,\n  onBlur,\n  placeholder,\n  name,\n  type,\n  isRequired,\n  error,\n  touched,\n  width,\n  mr,\n  bg = 'cf.300',\n  w,\n  ...rest\n}) => (\n  <FormControl mr={mr} pos='relative' pt={2} isRequired={isRequired} isInvalid={error && touched}>\n    <Box\n      bg={bg}\n      borderWidth={1}\n      borderColor='gray.100'\n      borderBottomColor={error && touched ? 'red.500' : 'cf.400'}\n      w={w}\n    >\n      <FormLabel fontSize={{ md: 'xs' }} pos='absolute' left={{ md: 4 }} top={2} color='gray.600'>\n        {label} {titleAddon}\n      </FormLabel>\n      <Input\n        {...rest}\n        value={value}\n        onChange={onChange}\n        onBlur={onBlur}\n        placeholder={placeholder}\n        name={name}\n        type={type}\n        clearOnEscape\n        overrides={{\n          Root: {\n            style: {\n              backgroundColor: 'transparent',\n              borderWidth: '0px',\n              width: width || '100%',\n              height: '50px'\n            }\n          },\n          Input: {\n            style: {\n              backgroundColor: 'transparent',\n              borderWidth: '0px',\n              height: '50px',\n              marginTop: '8px'\n            }\n          },\n          InputContainer: {\n            style: {\n              backgroundColor: 'transparent',\n              borderWidth: '0px',\n              width: width || '100%'\n            }\n          },\n          StartEnhancer: {\n            style: {\n              backgroundColor: 'transparent'\n            }\n          }\n        }}\n      />\n    </Box>\n    {error && touched && <FormErrorMessage fontSize='xs'>{error}</FormErrorMessage>}\n  </FormControl>\n)\n\nFormInput.propTypes = {\n  inputType: PropTypes.any,\n  inputClass: PropTypes.any,\n  placeholder: PropTypes.any,\n  label: PropTypes.any,\n  width: PropTypes.any,\n  w: PropTypes.any,\n  my: PropTypes.any,\n  mr: PropTypes.any,\n  id: PropTypes.any,\n  name: PropTypes.any,\n  title: PropTypes.any,\n  type: PropTypes.any,\n  onChange: PropTypes.any,\n  error: PropTypes.any,\n  inputValue: PropTypes.any,\n  disabled: PropTypes.any,\n  onBlur: PropTypes.any,\n  touched: PropTypes.any,\n  className: PropTypes.any,\n  titleAddon: PropTypes.any,\n  fontSize: PropTypes.any,\n  value: PropTypes.any,\n  bg: PropTypes.any,\n  selectedValue: PropTypes.any,\n  passwordShow: PropTypes.any,\n  isRequired: PropTypes.bool\n}\n\nexport default FormInput\n","/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Form/Dropdown.js",[],"/Users/mrceo63/Desktop/DevWrk/cf/cf-digital-farmer-dashboard/src/components/Form/BasePhone.js",["607"],"import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { PhoneInput, COUNTRIES } from 'baseui/phone-input'\nimport { FormControl, FormLabel } from '@chakra-ui/react'\n\nconst BasePhone = ({\n  setFieldValue,\n  setFieldTouched,\n  phoneNumber,\n  country,\n  countryList,\n  value,\n  error,\n  touched,\n  placeholder\n}) => (\n  <FormControl bg='cf.300' pos='relative' pt={2} borderBottomWidth={1} borderBottomColor='cf.400'>\n    <FormLabel fontSize='xs' pos='absolute' left={3} top={-1} color='gray.600'>\n      Phone number\n    </FormLabel>\n    <PhoneInput\n      name={phoneNumber}\n      country={countryList || COUNTRIES.GH}\n      placeholder={placeholder}\n      onCountryChange={({ option }) => {\n        setFieldValue(country, option)\n        setFieldTouched(country, true)\n      }}\n      text={value}\n      error={error}\n      onTextChange={e => {\n        setFieldValue(phoneNumber, e.currentTarget.value)\n        setFieldTouched(phoneNumber, true)\n      }}\n      overrides={{\n        Input: {\n          props: {\n            overrides: {\n              Root: {\n                style: {\n                  backgroundColor: 'transparent'\n                }\n              }\n            }\n          }\n        }\n      }}\n    />\n  </FormControl>\n)\n\nBasePhone.propTypes = {\n  setFieldTouched: PropTypes.any,\n  setFieldValue: PropTypes.any,\n  phoneNumber: PropTypes.any,\n  value: PropTypes.any,\n  country: PropTypes.any,\n  countryList: PropTypes.any,\n  error: PropTypes.any,\n  touched: PropTypes.any,\n  placeholder: PropTypes.any\n}\n\nexport default BasePhone\n",{"ruleId":"608","severity":2,"message":"609","line":4,"column":41,"nodeType":null,"endLine":5,"endColumn":2,"fix":"610"},{"ruleId":"611","replacedBy":"612"},{"ruleId":"613","replacedBy":"614"},{"ruleId":"615","replacedBy":"616"},{"ruleId":"608","severity":2,"message":"617","line":25,"column":29,"nodeType":null,"endLine":27,"endColumn":9,"fix":"618"},{"ruleId":"608","severity":2,"message":"617","line":25,"column":29,"nodeType":null,"endLine":27,"endColumn":9,"fix":"619"},{"ruleId":"608","severity":2,"message":"620","line":14,"column":24,"nodeType":null,"endLine":23,"endColumn":1,"fix":"621"},{"ruleId":"608","severity":2,"message":"622","line":25,"column":11,"nodeType":null,"endLine":30,"endColumn":5,"fix":"623"},{"ruleId":"608","severity":2,"message":"624","line":9,"column":16,"nodeType":null,"endLine":13,"endColumn":1,"fix":"625"},{"ruleId":"608","severity":2,"message":"626","line":36,"column":14,"nodeType":null,"endLine":43,"endColumn":9,"fix":"627"},{"ruleId":"608","severity":2,"message":"628","line":55,"column":43,"nodeType":null,"endLine":57,"endColumn":7,"fix":"629"},{"ruleId":"630","severity":1,"message":"631","line":63,"column":6,"nodeType":"632","endLine":63,"endColumn":8,"suggestions":"633"},{"ruleId":"608","severity":2,"message":"634","line":67,"column":43,"nodeType":null,"endLine":69,"endColumn":7,"fix":"635"},{"ruleId":"630","severity":1,"message":"631","line":75,"column":6,"nodeType":"632","endLine":75,"endColumn":8,"suggestions":"636"},{"ruleId":"608","severity":2,"message":"637","line":85,"column":14,"nodeType":null,"endLine":89,"endColumn":9,"fix":"638"},{"ruleId":"608","severity":2,"message":"639","line":49,"column":15,"nodeType":null,"endLine":54,"endColumn":8,"fix":"640"},{"ruleId":"608","severity":2,"message":"639","line":38,"column":15,"nodeType":null,"endLine":43,"endColumn":8,"fix":"641"},{"ruleId":"608","severity":2,"message":"642","line":36,"column":17,"nodeType":null,"endLine":39,"endColumn":10,"fix":"643"},{"ruleId":"608","severity":2,"message":"642","line":38,"column":17,"nodeType":null,"endLine":41,"endColumn":10,"fix":"644"},{"ruleId":"608","severity":2,"message":"645","line":62,"column":27,"nodeType":null,"endLine":66,"endColumn":15,"fix":"646"},{"ruleId":"608","severity":2,"message":"647","line":71,"column":26,"nodeType":null,"endLine":75,"endColumn":20,"fix":"648"},{"ruleId":"608","severity":2,"message":"649","line":16,"column":16,"nodeType":null,"endLine":20,"endColumn":11,"fix":"650"},{"ruleId":"608","severity":2,"message":"651","line":16,"column":21,"nodeType":null,"endLine":24,"endColumn":1,"fix":"652"},{"ruleId":"608","severity":2,"message":"653","line":44,"column":21,"nodeType":null,"endLine":49,"endColumn":8,"fix":"654"},{"ruleId":"608","severity":2,"message":"655","line":63,"column":16,"nodeType":null,"endLine":69,"endColumn":6,"fix":"656"},{"ruleId":"608","severity":2,"message":"657","line":16,"column":25,"nodeType":null,"endLine":26,"endColumn":1,"fix":"658"},{"ruleId":"608","severity":2,"message":"659","line":42,"column":14,"nodeType":null,"endLine":48,"endColumn":7,"fix":"660"},{"ruleId":"608","severity":2,"message":"661","line":65,"column":21,"nodeType":null,"endLine":68,"endColumn":15,"fix":"662"},{"ruleId":"608","severity":2,"message":"663","line":93,"column":30,"nodeType":null,"endLine":100,"endColumn":25,"fix":"664"},{"ruleId":"608","severity":2,"message":"665","line":141,"column":23,"nodeType":null,"endLine":143,"endColumn":16,"fix":"666"},{"ruleId":"608","severity":2,"message":"667","line":145,"column":75,"nodeType":null,"endLine":146,"endColumn":18,"fix":"668"},{"ruleId":"608","severity":2,"message":"669","line":149,"column":25,"nodeType":null,"endLine":153,"endColumn":18,"fix":"670"},{"ruleId":"608","severity":2,"message":"671","line":8,"column":13,"nodeType":null,"endLine":13,"endColumn":6,"fix":"672"},{"ruleId":"608","severity":2,"message":"673","line":19,"column":78,"nodeType":null,"endLine":20,"endColumn":10,"fix":"674"},{"ruleId":"608","severity":2,"message":"671","line":13,"column":13,"nodeType":null,"endLine":18,"endColumn":6,"fix":"675"},{"ruleId":"608","severity":2,"message":"673","line":14,"column":80,"nodeType":null,"endLine":15,"endColumn":10,"fix":"676"},{"ruleId":"608","severity":2,"message":"677","line":14,"column":17,"nodeType":null,"endLine":17,"endColumn":11,"fix":"678"},{"ruleId":"608","severity":2,"message":"679","line":25,"column":9,"nodeType":null,"endLine":32,"endColumn":5,"fix":"680"},{"ruleId":"608","severity":2,"message":"681","line":35,"column":14,"nodeType":null,"endLine":42,"endColumn":9,"fix":"682"},{"ruleId":"608","severity":2,"message":"683","line":74,"column":18,"nodeType":null,"endLine":80,"endColumn":12,"fix":"684"},{"ruleId":"608","severity":2,"message":"685","line":10,"column":12,"nodeType":null,"endLine":15,"endColumn":7,"fix":"686"},{"ruleId":"608","severity":2,"message":"687","line":17,"column":23,"nodeType":null,"endLine":19,"endColumn":12,"fix":"688"},{"ruleId":"608","severity":2,"message":"689","line":5,"column":9,"nodeType":null,"endLine":13,"endColumn":1,"fix":"690"},{"ruleId":"608","severity":2,"message":"691","line":104,"column":20,"nodeType":null,"endLine":108,"endColumn":14,"fix":"692"},{"ruleId":"608","severity":2,"message":"693","line":1,"column":9,"nodeType":null,"endLine":11,"endColumn":1,"fix":"694"},{"ruleId":"608","severity":2,"message":"695","line":33,"column":11,"nodeType":null,"endLine":40,"endColumn":7,"fix":"696"},{"ruleId":"608","severity":2,"message":"697","line":3,"column":9,"nodeType":null,"endLine":9,"endColumn":1,"fix":"698"},{"ruleId":"608","severity":2,"message":"699","line":32,"column":16,"nodeType":null,"endLine":37,"endColumn":8,"fix":"700"},{"ruleId":"608","severity":2,"message":"701","line":16,"column":14,"nodeType":null,"endLine":22,"endColumn":9,"fix":"702"},{"ruleId":"608","severity":2,"message":"703","line":38,"column":22,"nodeType":null,"endLine":44,"endColumn":17,"fix":"704"},{"ruleId":"608","severity":2,"message":"705","line":21,"column":9,"nodeType":null,"endLine":25,"endColumn":1,"fix":"706"},{"ruleId":"608","severity":2,"message":"707","line":29,"column":9,"nodeType":null,"endLine":33,"endColumn":1,"fix":"708"},{"ruleId":"608","severity":2,"message":"709","line":124,"column":22,"nodeType":null,"endLine":130,"endColumn":17,"fix":"710"},{"ruleId":"608","severity":2,"message":"711","line":135,"column":33,"nodeType":null,"endLine":140,"endColumn":26,"fix":"712"},{"ruleId":"608","severity":2,"message":"713","line":198,"column":24,"nodeType":null,"endLine":203,"endColumn":19,"fix":"714"},{"ruleId":"608","severity":2,"message":"715","line":211,"column":26,"nodeType":null,"endLine":215,"endColumn":20,"fix":"716"},{"ruleId":"608","severity":2,"message":"717","line":230,"column":37,"nodeType":null,"endLine":234,"endColumn":29,"fix":"718"},{"ruleId":"608","severity":2,"message":"719","line":240,"column":33,"nodeType":null,"endLine":243,"endColumn":24,"fix":"720"},{"ruleId":"608","severity":2,"message":"721","line":21,"column":47,"nodeType":null,"endLine":25,"endColumn":3,"fix":"722"},{"ruleId":"608","severity":2,"message":"723","line":43,"column":12,"nodeType":null,"endLine":50,"endColumn":7,"fix":"724"},{"ruleId":"608","severity":2,"message":"725","line":72,"column":12,"nodeType":null,"endLine":79,"endColumn":7,"fix":"726"},{"ruleId":"608","severity":2,"message":"727","line":83,"column":14,"nodeType":null,"endLine":90,"endColumn":9,"fix":"728"},{"ruleId":"608","severity":2,"message":"729","line":91,"column":17,"nodeType":null,"endLine":96,"endColumn":10,"fix":"730"},{"ruleId":"608","severity":2,"message":"731","line":1,"column":9,"nodeType":null,"endLine":11,"endColumn":1,"fix":"732"},{"ruleId":"608","severity":2,"message":"733","line":19,"column":20,"nodeType":null,"endLine":29,"endColumn":1,"fix":"734"},{"ruleId":"608","severity":2,"message":"735","line":68,"column":14,"nodeType":null,"endLine":72,"endColumn":9,"fix":"736"},{"ruleId":"608","severity":2,"message":"737","line":23,"column":27,"nodeType":null,"endLine":26,"endColumn":3,"fix":"738"},{"ruleId":"608","severity":2,"message":"739","line":81,"column":17,"nodeType":null,"endLine":83,"endColumn":11,"fix":"740"},{"ruleId":"608","severity":2,"message":"741","line":90,"column":14,"nodeType":null,"endLine":96,"endColumn":10,"fix":"742"},{"ruleId":"608","severity":2,"message":"737","line":43,"column":27,"nodeType":null,"endLine":46,"endColumn":3,"fix":"743"},{"ruleId":"608","severity":2,"message":"744","line":96,"column":14,"nodeType":null,"endLine":100,"endColumn":7,"fix":"745"},{"ruleId":"608","severity":2,"message":"746","line":101,"column":12,"nodeType":null,"endLine":108,"endColumn":8,"fix":"747"},{"ruleId":"608","severity":2,"message":"748","line":172,"column":22,"nodeType":null,"endLine":177,"endColumn":17,"fix":"749"},{"ruleId":"608","severity":2,"message":"748","line":266,"column":22,"nodeType":null,"endLine":271,"endColumn":17,"fix":"750"},{"ruleId":"608","severity":2,"message":"751","line":287,"column":27,"nodeType":null,"endLine":292,"endColumn":16,"fix":"752"},{"ruleId":"608","severity":2,"message":"753","line":301,"column":22,"nodeType":null,"endLine":305,"endColumn":17,"fix":"754"},{"ruleId":"608","severity":2,"message":"755","line":321,"column":22,"nodeType":null,"endLine":326,"endColumn":17,"fix":"756"},{"ruleId":"608","severity":2,"message":"757","line":70,"column":21,"nodeType":null,"endLine":75,"endColumn":13,"fix":"758"},{"ruleId":"608","severity":2,"message":"759","line":1,"column":9,"nodeType":null,"endLine":10,"endColumn":1,"fix":"760"},{"ruleId":"608","severity":2,"message":"761","line":52,"column":19,"nodeType":null,"endLine":54,"endColumn":13,"fix":"762"},{"ruleId":"608","severity":2,"message":"763","line":59,"column":27,"nodeType":null,"endLine":64,"endColumn":19,"fix":"764"},{"ruleId":"608","severity":2,"message":"763","line":70,"column":27,"nodeType":null,"endLine":75,"endColumn":19,"fix":"765"},{"ruleId":"608","severity":2,"message":"763","line":82,"column":27,"nodeType":null,"endLine":87,"endColumn":19,"fix":"766"},{"ruleId":"608","severity":2,"message":"767","line":115,"column":27,"nodeType":null,"endLine":120,"endColumn":19,"fix":"768"},{"ruleId":"608","severity":2,"message":"769","line":130,"column":28,"nodeType":null,"endLine":134,"endColumn":19,"fix":"770"},{"ruleId":"608","severity":2,"message":"769","line":137,"column":28,"nodeType":null,"endLine":141,"endColumn":19,"fix":"771"},{"ruleId":"608","severity":2,"message":"769","line":144,"column":28,"nodeType":null,"endLine":148,"endColumn":19,"fix":"772"},{"ruleId":"608","severity":2,"message":"769","line":151,"column":28,"nodeType":null,"endLine":155,"endColumn":19,"fix":"773"},{"ruleId":"608","severity":2,"message":"774","line":98,"column":18,"nodeType":null,"endLine":103,"endColumn":13,"fix":"775"},{"ruleId":"608","severity":2,"message":"776","line":104,"column":70,"nodeType":null,"endLine":105,"endColumn":14,"fix":"777"},{"ruleId":"608","severity":2,"message":"778","line":131,"column":35,"nodeType":null,"endLine":133,"endColumn":22,"fix":"779"},{"ruleId":"608","severity":2,"message":"780","line":3,"column":9,"nodeType":null,"endLine":11,"endColumn":1,"fix":"781"},{"ruleId":"608","severity":2,"message":"782","line":7,"column":9,"nodeType":null,"endLine":13,"endColumn":4,"fix":"783"},{"ruleId":"608","severity":2,"message":"784","line":213,"column":25,"nodeType":null,"endLine":216,"endColumn":10,"fix":"785"},{"ruleId":"608","severity":2,"message":"786","line":217,"column":19,"nodeType":null,"endLine":221,"endColumn":10,"fix":"787"},{"ruleId":"608","severity":2,"message":"788","line":222,"column":19,"nodeType":null,"endLine":227,"endColumn":10,"fix":"789"},{"ruleId":"608","severity":2,"message":"790","line":639,"column":12,"nodeType":null,"endLine":642,"endColumn":6,"fix":"791"},{"ruleId":"608","severity":2,"message":"792","line":783,"column":9,"nodeType":null,"endLine":790,"endColumn":4,"fix":"793"},{"ruleId":"608","severity":2,"message":"794","line":1037,"column":14,"nodeType":null,"endLine":1042,"endColumn":8,"fix":"795"},{"ruleId":"608","severity":2,"message":"796","line":17,"column":10,"nodeType":null,"endLine":22,"endColumn":5,"fix":"797"},{"ruleId":"608","severity":2,"message":"798","line":2,"column":9,"nodeType":null,"endLine":11,"endColumn":1,"fix":"799"},{"ruleId":"608","severity":2,"message":"800","line":34,"column":17,"nodeType":null,"endLine":37,"endColumn":10,"fix":"801"},{"ruleId":"608","severity":2,"message":"802","line":40,"column":14,"nodeType":null,"endLine":45,"endColumn":9,"fix":"803"},{"ruleId":"608","severity":2,"message":"804","line":85,"column":25,"nodeType":null,"endLine":89,"endColumn":14,"fix":"805"},{"ruleId":"608","severity":2,"message":"806","line":107,"column":27,"nodeType":null,"endLine":110,"endColumn":16,"fix":"807"},{"ruleId":"608","severity":2,"message":"808","line":114,"column":24,"nodeType":null,"endLine":117,"endColumn":17,"fix":"809"},{"ruleId":"608","severity":2,"message":"810","line":118,"column":31,"nodeType":null,"endLine":123,"endColumn":18,"fix":"811"},{"ruleId":"608","severity":2,"message":"812","line":31,"column":76,"nodeType":null,"endLine":34,"endColumn":12,"fix":"813"},{"ruleId":"608","severity":2,"message":"814","line":35,"column":73,"nodeType":null,"endLine":42,"endColumn":76,"fix":"815"},{"ruleId":"608","severity":2,"message":"816","line":43,"column":12,"nodeType":null,"endLine":55,"endColumn":79,"fix":"817"},{"ruleId":"608","severity":2,"message":"818","line":56,"column":12,"nodeType":null,"endLine":59,"endColumn":12,"fix":"819"},{"ruleId":"608","severity":2,"message":"820","line":60,"column":76,"nodeType":null,"endLine":63,"endColumn":12,"fix":"821"},{"ruleId":"608","severity":2,"message":"822","line":64,"column":67,"nodeType":null,"endLine":75,"endColumn":12,"fix":"823"},{"ruleId":"608","severity":2,"message":"824","line":76,"column":74,"nodeType":null,"endLine":76,"endColumn":74,"fix":"825"},{"ruleId":"608","severity":2,"message":"826","line":77,"column":13,"nodeType":null,"endLine":80,"endColumn":12,"fix":"827"},{"ruleId":"608","severity":2,"message":"828","line":81,"column":77,"nodeType":null,"endLine":85,"endColumn":12,"fix":"829"},{"ruleId":"608","severity":2,"message":"830","line":86,"column":79,"nodeType":null,"endLine":90,"endColumn":81,"fix":"831"},{"ruleId":"608","severity":2,"message":"832","line":91,"column":12,"nodeType":null,"endLine":95,"endColumn":12,"fix":"833"},{"ruleId":"608","severity":2,"message":"834","line":96,"column":81,"nodeType":null,"endLine":96,"endColumn":81,"fix":"835"},{"ruleId":"608","severity":2,"message":"836","line":97,"column":12,"nodeType":null,"endLine":98,"endColumn":12,"fix":"837"},{"ruleId":"608","severity":2,"message":"838","line":102,"column":23,"nodeType":null,"endLine":107,"endColumn":12,"fix":"839"},{"ruleId":"608","severity":2,"message":"840","line":33,"column":43,"nodeType":null,"endLine":35,"endColumn":7,"fix":"841"},{"ruleId":"608","severity":2,"message":"842","line":47,"column":17,"nodeType":null,"endLine":50,"endColumn":10,"fix":"843"},{"ruleId":"608","severity":2,"message":"844","line":52,"column":14,"nodeType":null,"endLine":57,"endColumn":9,"fix":"845"},{"ruleId":"608","severity":2,"message":"846","line":103,"column":28,"nodeType":null,"endLine":107,"endColumn":20,"fix":"847"},{"ruleId":"608","severity":2,"message":"848","line":114,"column":29,"nodeType":null,"endLine":119,"endColumn":20,"fix":"849"},{"ruleId":"608","severity":2,"message":"850","line":124,"column":36,"nodeType":null,"endLine":128,"endColumn":27,"fix":"851"},{"ruleId":"608","severity":2,"message":"852","line":2,"column":9,"nodeType":null,"endLine":11,"endColumn":1,"fix":"853"},{"ruleId":"608","severity":2,"message":"854","line":47,"column":27,"nodeType":null,"endLine":48,"endColumn":12,"fix":"855"},{"ruleId":"608","severity":2,"message":"856","line":51,"column":15,"nodeType":null,"endLine":57,"endColumn":11,"fix":"857"},{"ruleId":"608","severity":2,"message":"858","line":69,"column":77,"nodeType":null,"endLine":72,"endColumn":14,"fix":"859"},{"ruleId":"608","severity":2,"message":"860","line":100,"column":29,"nodeType":null,"endLine":103,"endColumn":24,"fix":"861"},{"ruleId":"608","severity":2,"message":"862","line":28,"column":9,"nodeType":null,"endLine":35,"endColumn":4,"fix":"863"},{"ruleId":"608","severity":2,"message":"695","line":37,"column":11,"nodeType":null,"endLine":44,"endColumn":7,"fix":"864"},{"ruleId":"608","severity":2,"message":"865","line":35,"column":26,"nodeType":null,"endLine":38,"endColumn":8,"fix":"866"},{"ruleId":"608","severity":2,"message":"867","line":3,"column":9,"nodeType":null,"endLine":12,"endColumn":1,"fix":"868"},{"ruleId":"608","severity":2,"message":"869","line":23,"column":71,"nodeType":null,"endLine":24,"endColumn":11,"fix":"870"},{"ruleId":"608","severity":2,"message":"871","line":77,"column":19,"nodeType":null,"endLine":82,"endColumn":10,"fix":"872"},{"ruleId":"608","severity":2,"message":"871","line":84,"column":19,"nodeType":null,"endLine":89,"endColumn":10,"fix":"873"},{"ruleId":"608","severity":2,"message":"874","line":33,"column":17,"nodeType":null,"endLine":38,"endColumn":12,"fix":"875"},{"ruleId":"608","severity":2,"message":"876","line":20,"column":14,"nodeType":null,"endLine":24,"endColumn":8,"fix":"877"},{"ruleId":"608","severity":2,"message":"878","line":3,"column":9,"nodeType":null,"endLine":12,"endColumn":1,"fix":"879"},{"ruleId":"608","severity":2,"message":"880","line":16,"column":21,"nodeType":null,"endLine":25,"endColumn":1,"fix":"881"},{"ruleId":"608","severity":2,"message":"882","line":67,"column":16,"nodeType":null,"endLine":72,"endColumn":11,"fix":"883"},{"ruleId":"608","severity":2,"message":"884","line":76,"column":18,"nodeType":null,"endLine":80,"endColumn":12,"fix":"885"},{"ruleId":"608","severity":2,"message":"886","line":23,"column":28,"nodeType":null,"endLine":24,"endColumn":4,"fix":"887"},{"ruleId":"608","severity":2,"message":"888","line":60,"column":17,"nodeType":null,"endLine":66,"endColumn":7,"fix":"889"},{"ruleId":"608","severity":2,"message":"890","line":33,"column":9,"nodeType":null,"endLine":40,"endColumn":5,"fix":"891"},{"ruleId":"608","severity":2,"message":"892","line":26,"column":15,"nodeType":null,"endLine":32,"endColumn":11,"fix":"893"},{"ruleId":"608","severity":2,"message":"894","line":40,"column":11,"nodeType":null,"endLine":45,"endColumn":6,"fix":"895"},{"ruleId":"608","severity":2,"message":"896","line":5,"column":7,"nodeType":null,"endLine":13,"endColumn":3,"fix":"897"},{"ruleId":"608","severity":2,"message":"898","line":15,"column":12,"nodeType":null,"endLine":21,"endColumn":7,"fix":"899"},{"ruleId":"608","severity":2,"message":"898","line":32,"column":12,"nodeType":null,"endLine":38,"endColumn":7,"fix":"900"},{"ruleId":"608","severity":2,"message":"898","line":49,"column":12,"nodeType":null,"endLine":55,"endColumn":7,"fix":"901"},{"ruleId":"608","severity":2,"message":"898","line":66,"column":12,"nodeType":null,"endLine":72,"endColumn":7,"fix":"902"},{"ruleId":"608","severity":2,"message":"898","line":83,"column":12,"nodeType":null,"endLine":89,"endColumn":7,"fix":"903"},{"ruleId":"608","severity":2,"message":"904","line":25,"column":17,"nodeType":null,"endLine":31,"endColumn":7,"fix":"905"},{"ruleId":"608","severity":2,"message":"906","line":66,"column":26,"nodeType":null,"endLine":68,"endColumn":6,"fix":"907"},{"ruleId":"608","severity":2,"message":"908","line":24,"column":15,"nodeType":null,"endLine":30,"endColumn":3,"fix":"909"},{"ruleId":"608","severity":2,"message":"910","line":38,"column":17,"nodeType":null,"endLine":44,"endColumn":7,"fix":"911"},{"ruleId":"608","severity":2,"message":"906","line":88,"column":26,"nodeType":null,"endLine":90,"endColumn":6,"fix":"912"},{"ruleId":"608","severity":2,"message":"913","line":18,"column":15,"nodeType":null,"endLine":24,"endColumn":3,"fix":"914"},"prettier/prettier","Delete `⏎·`",{"range":"915","text":"916"},"no-native-reassign",["917"],"no-negated-in-lhs",["918"],"jsx-a11y/accessible-emoji",[],"Replace `⏎··········Here’s·a·cofirmation·of·your·payment·and·a·receipt·for·your·farm⏎········` with `Here’s·a·cofirmation·of·your·payment·and·a·receipt·for·your·farm`",{"range":"919","text":"920"},{"range":"921","text":"920"},"Replace `⏎··isOpen,⏎··onClose,⏎··title,⏎··size,⏎··isCentered,⏎··image,⏎··alt,⏎··children⏎` with `·isOpen,·onClose,·title,·size,·isCentered,·image,·alt,·children·`",{"range":"922","text":"923"},"Replace `⏎······isOpen={isOpen}⏎······onClose={onClose}⏎······size={size}⏎······isCentered={isCentered}⏎····` with `·isOpen={isOpen}·onClose={onClose}·size={size}·isCentered={isCentered}`",{"range":"924","text":"925"},"Replace `⏎··history:·{·replace·},⏎··match:·{·params·},⏎··location:·{·search·}⏎` with `·history:·{·replace·},·match:·{·params·},·location:·{·search·}·`",{"range":"926","text":"927"},"Replace `⏎··········align='center'⏎··········justify='center'⏎··········h={70}⏎··········w='100%'⏎··········bg='gray.100'⏎··········mt={20}⏎········` with `·align='center'·justify='center'·h={70}·w='100%'·bg='gray.100'·mt={20}`",{"range":"928","text":"929"},"Replace `⏎········Prismic.Predicates.at('document.type',·'announcements')⏎······` with `Prismic.Predicates.at('document.type',·'announcements')`",{"range":"930","text":"931"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'Client'. Either include it or remove the dependency array.","ArrayExpression",["932"],"Replace `⏎········Prismic.Predicates.at('document.type',·'news')⏎······` with `Prismic.Predicates.at('document.type',·'news')`",{"range":"933","text":"934"},["935"],"Replace `⏎··········templateColumns={{·md:·'repeat(3,·1fr)'·}}⏎··········gap={{·md:·1·}}⏎··········mt={10}⏎········` with `·templateColumns={{·md:·'repeat(3,·1fr)'·}}·gap={{·md:·1·}}·mt={10}`",{"range":"936","text":"937"},"Replace `⏎··········src={IllustrationImage}⏎··········h={{·md:·115·}}⏎··········w='100%'⏎··········objectFit='cover'⏎·······` with `·src={IllustrationImage}·h={{·md:·115·}}·w='100%'·objectFit='cover'`",{"range":"938","text":"939"},{"range":"940","text":"939"},"Replace `⏎············h='100%'⏎············src={require('../../assets/images/logo.png').default}⏎·········` with `·h='100%'·src={require('../../assets/images/logo.png').default}`",{"range":"941","text":"942"},{"range":"943","text":"942"},"Replace `⏎················as={Box}⏎················_focus={{·outline:·'none'·}}⏎················cursor='pointer'⏎··············` with `·as={Box}·_focus={{·outline:·'none'·}}·cursor='pointer'`",{"range":"944","text":"945"},"Replace `⏎······················ml={2}⏎······················as={open·?·FiChevronUp·:·FiChevronDown}⏎······················boxSize={6}⏎···················` with `·ml={2}·as={open·?·FiChevronUp·:·FiChevronDown}·boxSize={6}`",{"range":"946","text":"947"},"Replace `⏎············align='center'⏎············borderBottomWidth={1}⏎············borderBottomColor='gray.200'⏎··········` with `·align='center'·borderBottomWidth={1}·borderBottomColor='gray.200'`",{"range":"948","text":"949"},"Replace `⏎··image,⏎··name,⏎··address,⏎··amtLeft,⏎··amtBought,⏎··amtNeeded,⏎··price⏎` with `·image,·name,·address,·amtLeft,·amtBought,·amtNeeded,·price·`",{"range":"950","text":"951"},"Replace `⏎··········amtLeft={amtLeft}⏎··········name={name}⏎··········amtBought={amtBought}⏎··········price={price}⏎·······` with `·amtLeft={amtLeft}·name={name}·amtBought={amtBought}·price={price}`",{"range":"952","text":"953"},"Replace `⏎········value={60}⏎········rounded='lg'⏎········colorScheme='cfButton'⏎········size='lg'⏎········mt={2}⏎·····` with `·value={60}·rounded='lg'·colorScheme='cfButton'·size='lg'·mt={2}`",{"range":"954","text":"955"},"Replace `⏎··name,⏎··location,⏎··image,⏎··weight,⏎··bags,⏎··quantity,⏎··condition,⏎··mr,⏎··ml⏎` with `·name,·location,·image,·weight,·bags,·quantity,·condition,·mr,·ml·`",{"range":"956","text":"957"},"Replace `⏎········colorScheme='linear'⏎········rounded='30px'⏎········ml={2}⏎········mt={4}⏎········onClick={onOpen}⏎······` with `·colorScheme='linear'·rounded='30px'·ml={2}·mt={4}·onClick={onOpen}`",{"range":"958","text":"959"},"Replace `⏎················Are·you·sure·you·want·to·delete·the·bank&lsquo;s·transfer⏎················receipt?⏎··············` with `Are·you·sure·you·want·to·delete·the·bank&lsquo;s·transfer·receipt?`",{"range":"960","text":"961"},"Replace `⏎··························w='130px'⏎··························mt={4}⏎··························as='button'⏎··························bgColor='cf.200'⏎··························p={2}⏎··························rounded='30px'⏎························` with `·w='130px'·mt={4}·as='button'·bgColor='cf.200'·p={2}·rounded='30px'`",{"range":"962","text":"963"},"Replace `⏎··················Confirmation·takes·1-2·weeks·for·us·to·get·back·to·you{'·'}⏎···············` with `Confirmation·takes·1-2·weeks·for·us·to·get·back·to·you`",{"range":"964","text":"965"},"Delete `⏎·················`",{"range":"966","text":"916"},"Replace `⏎····················src={corporate}⏎····················w={{·md:·'180px'·}}⏎····················h={{·md:·'110px'·}}⏎·················` with `·src={corporate}·w={{·md:·'180px'·}}·h={{·md:·'110px'·}}`",{"range":"967","text":"968"},"Replace `⏎········src={IllustrationImage}⏎········h={{·md:·115·}}⏎········w='100%'⏎········objectFit='cover'⏎·····` with `·src={IllustrationImage}·h={{·md:·115·}}·w='100%'·objectFit='cover'`",{"range":"969","text":"939"},"Delete `⏎·········`",{"range":"970","text":"916"},{"range":"971","text":"939"},{"range":"972","text":"916"},"Replace `⏎············Start·a·farm·as·an·individual·or·a·cooperative·and·earn·long·term⏎············rewards⏎··········` with `Start·a·farm·as·an·individual·or·a·cooperative·and·earn·long·term·rewards`",{"range":"973","text":"974"},"Replace `⏎······w={60}⏎······mt={mt}⏎······as='button'⏎······borderWidth={1}⏎······rounded='md'⏎······onClick={onOpen}⏎····` with `·w={60}·mt={mt}·as='button'·borderWidth={1}·rounded='md'·onClick={onOpen}`",{"range":"975","text":"976"},"Replace `⏎··········textAlign='center'⏎··········w={60}⏎··········py={1}⏎··········fontWeight={900}⏎··········fontFamily='heading'⏎··········fontSize='lg'⏎········` with `·textAlign='center'·w={60}·py={1}·fontWeight={900}·fontFamily='heading'·fontSize='lg'`",{"range":"977","text":"978"},"Replace `⏎··············as={arrowDown}⏎··············bg='white'⏎··············rounded='lg'⏎··············color='cf.400'⏎··············pl='1'⏎···········` with `·as={arrowDown}·bg='white'·rounded='lg'·color='cf.400'·pl='1'`",{"range":"979","text":"980"},"Replace `⏎········textAlign='center'⏎········align='center'⏎········justify='center'⏎········direction='column'⏎······` with `·textAlign='center'·align='center'·justify='center'·direction='column'`",{"range":"981","text":"982"},"Replace `(⏎············<Loader·type='Oval'·color='#417505'·height={40}·width={40}·/>⏎··········)` with `<Loader·type='Oval'·color='#417505'·height={40}·width={40}·/>`",{"range":"983","text":"984"},"Replace `⏎··farm,⏎··home,⏎··wallet,⏎··market,⏎··Guide,⏎··Resources,⏎··logout⏎` with `·farm,·home,·wallet,·market,·Guide,·Resources,·logout·`",{"range":"985","text":"986"},"Replace `⏎················as={toggleMenus·?·BsChevronUp·:·BsChevronDown}⏎················boxSize={4}⏎················mr={1}⏎·············` with `·as={toggleMenus·?·BsChevronUp·:·BsChevronDown}·boxSize={4}·mr={1}`",{"range":"987","text":"988"},"Replace `⏎··Avatar,⏎··Box,⏎··Divider,⏎··Flex,⏎··Grid,⏎··Heading,⏎··Image,⏎··Tag,⏎··Text⏎` with `·Avatar,·Box,·Divider,·Flex,·Grid,·Heading,·Image,·Tag,·Text·`",{"range":"989","text":"990"},"Replace `⏎········bg='cf.200'⏎········color='cf.400'⏎········rounded='3xl'⏎········fontSize='sm'⏎········px={4}⏎········textAlign='center'⏎······` with `·bg='cf.200'·color='cf.400'·rounded='3xl'·fontSize='sm'·px={4}·textAlign='center'`",{"range":"991","text":"992"},"Replace `⏎··Modal,⏎··ModalOverlay,⏎··ModalContent,⏎··Box,⏎··ModalCloseButton⏎` with `·Modal,·ModalOverlay,·ModalContent,·Box,·ModalCloseButton·`",{"range":"993","text":"994"},"Replace `⏎··········title='nothing'⏎··········src={link·+·'#toolbar=0'}⏎··········width='100%'⏎··········height='500px'⏎·······` with `·title='nothing'·src={link·+·'#toolbar=0'}·width='100%'·height='500px'`",{"range":"995","text":"996"},"Replace `⏎··········align='center'⏎··········justify='center'⏎··········direction='column'⏎··········p={10}⏎··········w='100%'⏎········` with `·align='center'·justify='center'·direction='column'·p={10}·w='100%'`",{"range":"997","text":"998"},"Replace `⏎··················key={farm.name}⏎··················direction='column'⏎··················align='center'⏎··················justify='center'⏎··················m={4}⏎················` with `·key={farm.name}·direction='column'·align='center'·justify='center'·m={4}`",{"range":"999","text":"1000"},"Replace `⏎··AiFillTwitterCircle,⏎··AiFillFacebook,⏎··AiFillLinkedin⏎` with `·AiFillTwitterCircle,·AiFillFacebook,·AiFillLinkedin·`",{"range":"1001","text":"1002"},"Replace `⏎··TwitterShareButton,⏎··LinkedinShareButton,⏎··FacebookShareButton⏎` with `·TwitterShareButton,·LinkedinShareButton,·FacebookShareButton·`",{"range":"1003","text":"1004"},"Replace `⏎··················pr={25}⏎··················pl={25}⏎··················direction='column'⏎··················align='center'⏎··················w='100%'⏎················` with `·pr={25}·pl={25}·direction='column'·align='center'·w='100%'`",{"range":"1005","text":"1006"},"Replace `⏎····························src={headingImage}⏎····························alt={headingImageAlt}⏎····························boxSize={5}⏎····························mr={5}⏎·························` with `·src={headingImage}·alt={headingImageAlt}·boxSize={5}·mr={5}`",{"range":"1007","text":"1008"},"Replace `⏎····················direction='row'⏎····················align='center'⏎····················justify='flex-start'⏎····················pl={10}⏎··················` with `·direction='row'·align='center'·justify='flex-start'·pl={10}`",{"range":"1009","text":"1010"},"Replace `⏎······················boxSize={8}⏎······················as={RiShareForwardLine}⏎······················onClick={onOpen}⏎···················` with `·boxSize={8}·as={RiShareForwardLine}·onClick={onOpen}`",{"range":"1011","text":"1012"},"Replace `⏎······························as='h4'⏎······························fontWeight='bold'⏎······························fontSize={{·md:·'xl'·}}⏎····························` with `·as='h4'·fontWeight='bold'·fontSize={{·md:·'xl'·}}`",{"range":"1013","text":"1014"},"Replace `⏎··························orientation='horizontal'⏎··························borderColor='gray.400'⏎·······················` with `·orientation='horizontal'·borderColor='gray.400'`",{"range":"1015","text":"1016"},"Replace `⏎····'categories',⏎····getCropCategories,⏎····reload⏎··` with `'categories',·getCropCategories,·reload`",{"range":"1017","text":"1018"},"Replace `⏎········align='center'⏎········justify='center'⏎········bg='gray.100'⏎········w='100%'⏎········h={20}⏎········mt={20}⏎······` with `·align='center'·justify='center'·bg='gray.100'·w='100%'·h={20}·mt={20}`",{"range":"1019","text":"1020"},"Replace `⏎········align='center'⏎········justify='space-between'⏎········w={{·md:·143·}}⏎········mx='auto'⏎········mt={{·md:·12·}}⏎········mb={4}⏎······` with `·align='center'·justify='space-between'·w={{·md:·143·}}·mx='auto'·mt={{·md:·12·}}·mb={4}`",{"range":"1021","text":"1022"},"Replace `⏎··········align='center'⏎··········rounded='30px'⏎··········px={4}⏎··········py={1}⏎··········borderWidth={1}⏎··········borderColor='cf.400'⏎········` with `·align='center'·rounded='30px'·px={4}·py={1}·borderWidth={1}·borderColor='cf.400'`",{"range":"1023","text":"1024"},"Replace `⏎············h={4}⏎············src={⏎··············require('../../../assets/images/startfarm/insurance.png').default⏎············}⏎·········` with `·h={4}·src={require('../../../assets/images/startfarm/insurance.png').default}`",{"range":"1025","text":"1026"},"Replace `⏎··Box,⏎··Flex,⏎··Heading,⏎··Icon,⏎··Image,⏎··Link,⏎··List,⏎··ListItem,⏎··Text⏎` with `·Box,·Flex,·Heading,·Icon,·Image,·Link,·List,·ListItem,·Text·`",{"range":"1027","text":"1028"},"Replace `⏎··image,⏎··title,⏎··subtitle,⏎··extra,⏎··options,⏎··btntitle,⏎··path,⏎··state,⏎··mr⏎` with `·image,·title,·subtitle,·extra,·options,·btntitle,·path,·state,·mr·`",{"range":"1029","text":"1030"},"Replace `⏎··········as={ReachRouter}⏎··········to={{·pathname:·path,·state·}}⏎··········_hover={{·textDecor:·'none'·}}⏎········` with `·as={ReachRouter}·to={{·pathname:·path,·state·}}·_hover={{·textDecor:·'none'·}}`",{"range":"1031","text":"1032"},"Replace `⏎····values,⏎····{·setSubmitting,·setErrors,·setStatus,·resetForm·}⏎··` with `values,·{·setSubmitting,·setErrors,·setStatus,·resetForm·}`",{"range":"1033","text":"1034"},"Replace `⏎············Turn·notification·on·to·receive·notification·in·your·dashboard⏎··········` with `Turn·notification·on·to·receive·notification·in·your·dashboard`",{"range":"1035","text":"1036"},"Replace `⏎············values,⏎············handleBlur,⏎············handleChange,⏎············handleSubmit,⏎············isSubmitting⏎·········` with `·values,·handleBlur,·handleChange,·handleSubmit,·isSubmitting`",{"range":"1037","text":"1038"},{"range":"1039","text":"1034"},"Replace `⏎········enableReinitialize⏎········initialValues={initialValues}⏎········onSubmit={onSubmit}⏎······` with `·enableReinitialize·initialValues={initialValues}·onSubmit={onSubmit}`",{"range":"1040","text":"1041"},"Replace `⏎··········values,⏎··········handleChange,⏎··········handleBlur,⏎··········isSubmitting,⏎··········handleSubmit,⏎··········errors⏎·······` with `·values,·handleChange,·handleBlur,·isSubmitting,·handleSubmit,·errors`",{"range":"1042","text":"1043"},"Replace `⏎··················templateColumns='repeat(2,·1fr)'⏎··················w={{·md:·'100%'·}}⏎··················gap={6}⏎··················mb={6}⏎················` with `·templateColumns='repeat(2,·1fr)'·w={{·md:·'100%'·}}·gap={6}·mb={6}`",{"range":"1044","text":"1045"},{"range":"1046","text":"1045"},"Replace `⏎··················label='Country'⏎··················value={values.address.country}⏎··················isRequired⏎··················bg='white'⏎···············` with `·label='Country'·value={values.address.country}·isRequired·bg='white'`",{"range":"1047","text":"1048"},"Replace `⏎··················templateColumns='repeat(2,·1fr)'⏎··················w={{·md:·'100%'·}}⏎··················gap={6}⏎················` with `·templateColumns='repeat(2,·1fr)'·w={{·md:·'100%'·}}·gap={6}`",{"range":"1049","text":"1050"},"Replace `⏎··················templateColumns='repeat(2,·1fr)'⏎··················w={{·md:·'100%'·}}⏎··················gap={6}⏎··················py={{·md:·10·}}⏎················` with `·templateColumns='repeat(2,·1fr)'·w={{·md:·'100%'·}}·gap={6}·py={{·md:·10·}}`",{"range":"1051","text":"1052"},"Replace `⏎··············as='h5'⏎··············fontSize={{·md:·'2xl'·}}⏎··············fontFamily='display'⏎··············mb={2}⏎············` with `·as='h5'·fontSize={{·md:·'2xl'·}}·fontFamily='display'·mb={2}`",{"range":"1053","text":"1054"},"Replace `⏎··Box,⏎··Heading,⏎··Flex,⏎··Text,⏎··Button,⏎··Divider,⏎··Container,⏎··Switch⏎` with `·Box,·Heading,·Flex,·Text,·Button,·Divider,·Container,·Switch·`",{"range":"1055","text":"1056"},"Replace `⏎··············Turn·notification·on·to·receive·notification·in·your·dashboard⏎············` with `Turn·notification·on·to·receive·notification·in·your·dashboard`",{"range":"1057","text":"1036"},"Replace `⏎····················as='h5'⏎····················fontFamily='display'⏎····················fontSize={{·md:·'2xl'·}}⏎····················mb={2}⏎··················` with `·as='h5'·fontFamily='display'·fontSize={{·md:·'2xl'·}}·mb={2}`",{"range":"1058","text":"1059"},{"range":"1060","text":"1059"},{"range":"1061","text":"1059"},"Replace `⏎····················as='h5'⏎····················fontSize={{·md:·'2xl'·}}⏎····················fontFamily='display'⏎····················mb={2}⏎··················` with `·as='h5'·fontSize={{·md:·'2xl'·}}·fontFamily='display'·mb={2}`",{"range":"1062","text":"1054"},"Replace `⏎····················size='lg'⏎····················colorScheme='cfButton'⏎····················borderColor='black'⏎··················` with `·size='lg'·colorScheme='cfButton'·borderColor='black'`",{"range":"1063","text":"1064"},{"range":"1065","text":"1064"},{"range":"1066","text":"1064"},{"range":"1067","text":"1064"},"Replace `⏎··············fontSize={{·md:·'sm'·}}⏎··············pl={2}⏎··············fontWeight='thin'⏎··············color='red.600'⏎············` with `·fontSize={{·md:·'sm'·}}·pl={2}·fontWeight='thin'·color='red.600'`",{"range":"1068","text":"1069"},"Delete `⏎·············`",{"range":"1070","text":"916"},"Replace `(⏎······················<Notification·amtBought={amtBought}·name={name}·/>⏎····················)` with `<Notification·amtBought={amtBought}·name={name}·/>`",{"range":"1071","text":"1072"},"Replace `⏎··Box,⏎··Flex,⏎··Text,⏎··Icon,⏎··FormLabel,⏎··FormControl,⏎··Input⏎` with `·Box,·Flex,·Text,·Icon,·FormLabel,·FormControl,·Input·`",{"range":"1073","text":"1074"},"Replace `(⏎····<polygon⏎······preserveAspectRatio='none'⏎······fill='currentColor'⏎······points='50,0·100,0·50,100·0,100'⏎····/>⏎··)` with `<polygon·preserveAspectRatio='none'·fill='currentColor'·points='50,0·100,0·50,100·0,100'·/>`",{"range":"1075","text":"1076"},"Replace `⏎············type='matrix'⏎············values='0·0·0·0·0·0·0·0·0·0·0·0·0·0·0·0·0·0·0.25·0'⏎·········` with `·type='matrix'·values='0·0·0·0·0·0·0·0·0·0·0·0·0·0·0·0·0·0·0.25·0'`",{"range":"1077","text":"1078"},"Replace `⏎············mode='normal'⏎············in2='BackgroundImageFix'⏎············result='effect1_dropShadow'⏎·········` with `·mode='normal'·in2='BackgroundImageFix'·result='effect1_dropShadow'`",{"range":"1079","text":"1080"},"Replace `⏎············mode='normal'⏎············in='SourceGraphic'⏎············in2='effect1_dropShadow'⏎············result='shape'⏎·········` with `·mode='normal'·in='SourceGraphic'·in2='effect1_dropShadow'·result='shape'`",{"range":"1081","text":"1082"},"Replace `⏎········fill='currentColor'⏎········d='M18·8.118l-8·4-8-4V14a2·2·0·002·2h12a2·2·0·002-2V8.118z'⏎·····` with `·fill='currentColor'·d='M18·8.118l-8·4-8-4V14a2·2·0·002·2h12a2·2·0·002-2V8.118z'`",{"range":"1083","text":"1084"},"Replace `(⏎····<path⏎······fill='none'⏎······stroke='currentColor'⏎······strokeWidth={2}⏎······d='M6·18L18·6M6·6l12·12'⏎····/>⏎··)` with `<path·fill='none'·stroke='currentColor'·strokeWidth={2}·d='M6·18L18·6M6·6l12·12'·/>`",{"range":"1085","text":"1086"},"Replace `⏎··········fillRule='evenodd'⏎··········clipRule='evenodd'⏎··········d='M0·0H24V26H0V0Z'⏎··········fill='white'⏎·······` with `·fillRule='evenodd'·clipRule='evenodd'·d='M0·0H24V26H0V0Z'·fill='white'`",{"range":"1087","text":"1088"},"Replace `⏎······templateColumns={{·md:·'45%·55%'·}}⏎······borderWidth={1}⏎······borderColor='gray.300'⏎······h={121}⏎····` with `·templateColumns={{·md:·'45%·55%'·}}·borderWidth={1}·borderColor='gray.300'·h={121}`",{"range":"1089","text":"1090"},"Replace `⏎··Box,⏎··Flex,⏎··Image,⏎··Heading,⏎··Icon,⏎··Text,⏎··Grid,⏎··GridItem⏎` with `·Box,·Flex,·Image,·Heading,·Icon,·Text,·Grid,·GridItem·`",{"range":"1091","text":"1092"},"Replace `⏎············w={108}⏎············src={require('../../../assets/images/invite.png').default}⏎·········` with `·w={108}·src={require('../../../assets/images/invite.png').default}`",{"range":"1093","text":"1094"},"Replace `⏎··········align='center'⏎··········justify='space-between'⏎··········mt={{·md:·20·}}⏎··········px={{·md:·10·}}⏎········` with `·align='center'·justify='space-between'·mt={{·md:·20·}}·px={{·md:·10·}}`",{"range":"1095","text":"1096"},"Replace `⏎················bg='white'⏎················label='Farm·name'⏎················placeholder='For·eg:·Ashesi2020'⏎·············` with `·bg='white'·label='Farm·name'·placeholder='For·eg:·Ashesi2020'`",{"range":"1097","text":"1098"},"Replace `⏎··················bg='white'⏎··················placeholder='Add·people·(Max·of·5·and·min·of·2)'⏎···············` with `·bg='white'·placeholder='Add·people·(Max·of·5·and·min·of·2)'`",{"range":"1099","text":"1100"},"Replace `⏎··················pos='relative'⏎··················src={require('../../../assets/images/Oval.png').default}⏎················` with `·pos='relative'·src={require('../../../assets/images/Oval.png').default}`",{"range":"1101","text":"1102"},"Replace `⏎····················pos='absolute'⏎····················top={-2}⏎····················boxSize='1em'⏎····················bg='cf.600'⏎·················` with `·pos='absolute'·top={-2}·boxSize='1em'·bg='cf.600'`",{"range":"1103","text":"1104"},"Replace `⏎············carefully·for·your·Complete·Farmer·(“The·Company”)·to·complete⏎············yourcrowd·farming·subscription.·This·Agreement·should·be·read⏎···········` with `·carefully·for·your⏎············Complete·Farmer·(“The·Company”)·to·complete·yourcrowd·farming·subscription.·This⏎············Agreement·should·be·read`",{"range":"1105","text":"1106"},"Replace `⏎············theCompany,·and·is·effective·upon·signature·or·your·acceptance.·Use⏎············of·Farm·Management·Service·FeeThe·Company·shall·use·the·Farm⏎············Management·Service·Fee·to·take·allnecessary·steps·to·plant·and⏎············harvest·your·choses·produce·on·your·chosenacreage,·as·described·on⏎············the·Company’s·website.·Complete·Farmer·thecultivation·protocols⏎············shall·remain·the·intellectual·property·of·the·Companyand·the·Company⏎············shall·have·no·obligation·to·share·it·with·you·or·anyother·third` with `·theCompany,·and·is⏎············effective·upon·signature·or·your·acceptance.·Use·of·Farm·Management·Service·FeeThe⏎············Company·shall·use·the·Farm·Management·Service·Fee·to·take·allnecessary·steps·to·plant⏎············and·harvest·your·choses·produce·on·your·chosenacreage,·as·described·on·the·Company’s⏎············website.·Complete·Farmer·thecultivation·protocols·shall·remain·the·intellectual·property⏎············of·the·Companyand·the·Company·shall·have·no·obligation·to·share·it·with·you·or·anyother`",{"range":"1107","text":"1108"},"Replace `·party.·The·Company·reserves·the·right·to·choose,·assign,·evaluate,⏎············and·manageall·third·parties·who·work·with·us·as·business·partners·or⏎············otherwise·toprovide·the·Farm·Management·Service·to·you.Crowd·Farmers⏎············will·be·provided·with·weekly·updates·of·crop,·weather·andsoil⏎············conditions·on·the·farm,·and·are·welcome·to·schedule·farm·visits⏎············usingthe·Complete·Farmer·application.·Independent·Quality·Assurance⏎············AuditorThe·Company·will·submit·audit·reports·by·their·independent⏎············qualityassurance·auditor·upon·request·of·the·Crowd·Farmer·which⏎············shall·assessthe·farm·processes,·seed·and·yield·of·harvest,·should⏎············any·conflict·ariseconcerning·the·above·between·the·Crowd·Farmer·and⏎············the·Company.·InsuranceThe·Company·strongly·recommends·that·Crowd⏎············Farmers·accept·thestandard·insurance·package·offered·with·the·Farm⏎············Management·Service.·Ifyou·do·not·want·to·use·the·insurance·package` with `·third·party.·The·Company·reserves·the·right·to·choose,·assign,·evaluate,·and·manageall⏎············third·parties·who·work·with·us·as·business·partners·or·otherwise·toprovide·the·Farm⏎············Management·Service·to·you.Crowd·Farmers·will·be·provided·with·weekly·updates·of·crop,⏎············weather·andsoil·conditions·on·the·farm,·and·are·welcome·to·schedule·farm·visits·usingthe⏎············Complete·Farmer·application.·Independent·Quality·Assurance·AuditorThe·Company·will⏎············submit·audit·reports·by·their·independent·qualityassurance·auditor·upon·request·of·the⏎············Crowd·Farmer·which·shall·assessthe·farm·processes,·seed·and·yield·of·harvest,·should·any⏎············conflict·ariseconcerning·the·above·between·the·Crowd·Farmer·and·the·Company.⏎············InsuranceThe·Company·strongly·recommends·that·Crowd·Farmers·accept·thestandard·insurance⏎············package·offered·with·the·Farm·Management·Service.·Ifyou·do·not·want·to·use·the·insurance`",{"range":"1109","text":"1110"},"Replace `·provided,·please·notify·theCompany.Term·and·TerminationThis⏎············Agreement·shall·commence·on·today’s·date·and·shall·remain·ineffect⏎············until·the·end·of·after·the·harvested·produce·have·been·sold.The⏎···········` with `·package·provided,·please·notify·theCompany.Term·and·TerminationThis·Agreement·shall⏎············commence·on·today’s·date·and·shall·remain·ineffect·until·the·end·of·after·the·harvested⏎············produce·have·been·sold.The`",{"range":"1111","text":"1112"},"Replace `⏎············Farmer's·policiesset·out·in·this·Agreement,·the·Terms·&·Conditions,⏎············the·Privacy·Policy,·orany·other·policy·documents·or·community⏎···········` with `·Farmer's·policiesset·out⏎············in·this·Agreement,·the·Terms·&·Conditions,·the·Privacy·Policy,·orany·other·policy⏎············documents·or·community`",{"range":"1113","text":"1114"},"Replace `⏎············SignaturesEach·party·agrees·that·the·electronic·signatures,·whether⏎············digital·orencrypted,·of·the·Parties·included·in·this·Agreement·are⏎············intended·toauthenticate·this·writing·and·to·have·the·same·force·and⏎············effect·as·manualsignatures·in·so·far·as·the·signatures·are·executed⏎············in·accordance·withsection·10·of·the·Electronic·Transactions·Act,⏎············2008·(Act·772)·of·theRepublic·of·Ghana.·Delivery·of·a·copy·of·this⏎············Agreement·or·any·otherdocument·contemplated·hereby·bearing·an⏎············original·or·electronic·signatureby·facsimile·transmission,·by⏎············electronic·mail·in·“portable·documentformat”·(“.pdf”)·form,·or·by⏎············any·other·electronic·means·intended·topreserve·the·original·graphic⏎···········` with `·SignaturesEach·party·agrees·that⏎············the·electronic·signatures,·whether·digital·orencrypted,·of·the·Parties·included·in·this⏎············Agreement·are·intended·toauthenticate·this·writing·and·to·have·the·same·force·and·effect⏎············as·manualsignatures·in·so·far·as·the·signatures·are·executed·in·accordance·withsection⏎············10·of·the·Electronic·Transactions·Act,·2008·(Act·772)·of·theRepublic·of·Ghana.·Delivery⏎············of·a·copy·of·this·Agreement·or·any·otherdocument·contemplated·hereby·bearing·an·original⏎············or·electronic·signatureby·facsimile·transmission,·by·electronic·mail·in·“portable⏎············documentformat”·(“.pdf”)·form,·or·by·any·other·electronic·means·intended·topreserve·the⏎············original·graphic`",{"range":"1115","text":"1116"},"Insert `·electronic`",{"range":"1117","text":"1118"},"Replace `electronic·signature.General·TermsThe·terms·of·this·Agreement·are⏎············Confidential·and·will·survive·thetermination·of·this·Agreement.A.No⏎············term·of·this·Agreement·shall·be·enforceable·by·a·third·party·whois⏎···········` with `signature.General·TermsThe·terms·of·this·Agreement·are·Confidential·and·will·survive⏎············thetermination·of·this·Agreement.A.No·term·of·this·Agreement·shall·be·enforceable·by·a⏎············third·party·whois`",{"range":"1119","text":"1120"},"Replace `⏎············this·Agreement.·B.If·any·provision·of·this·Agreement·or·the⏎············application·thereof·is·heldinvalid·or·unenforceable,·the·invalidity⏎············or·unenforceability·thereofshall·not·affect·any·other·provisions·or⏎···········` with `·this·Agreement.·B.If⏎············any·provision·of·this·Agreement·or·the·application·thereof·is·heldinvalid·or⏎············unenforceable,·the·invalidity·or·unenforceability·thereofshall·not·affect·any·other⏎············provisions·or`",{"range":"1121","text":"1122"},"Replace `⏎············provisionsof·this·Agreement·are·to·be·severable.C.The·Parties·shall⏎············use·their·best·endeavors·to·reach·an·amicablesettlement·of·any⏎············dispute·by·mutual·discussion·between·thedesignated·representatives⏎············of·the·Parties.D.This·Agreement·shall·be·governed·in·accordance·with` with `·provisionsof·this⏎············Agreement·are·to·be·severable.C.The·Parties·shall·use·their·best·endeavors·to·reach·an⏎············amicablesettlement·of·any·dispute·by·mutual·discussion·between·thedesignated⏎············representatives·of·the·Parties.D.This·Agreement·shall·be·governed·in·accordance·with·the`",{"range":"1123","text":"1124"},"Replace `·the·laws·ofthe·Republic·of·Ghana.·E.Each·Party·warrants·to·the·other⏎············Party·that·it·has·the·right,·powerand·authority·to·enter·into·this⏎············Agreement·and·carry·out·itsobligations·under·this·Agreement.By⏎············clicking·the·\"Accept\"·button,·downloading·or·using·the·Application,⏎···········` with `·laws·ofthe·Republic·of·Ghana.·E.Each·Party·warrants·to·the·other·Party·that·it·has·the⏎············right,·powerand·authority·to·enter·into·this·Agreement·and·carry·out·itsobligations⏎············under·this·Agreement.By·clicking·the·\"Accept\"·button,·downloading·or·using·the⏎············Application,`",{"range":"1125","text":"1126"},"Insert `·click·on`",{"range":"1127","text":"1128"},"Replace `·click·on·the\"Accept\"·button·and·do·not·download·or·use·the⏎···········` with `·the\"Accept\"·button·and·do·not·download·or·use·the`",{"range":"1129","text":"1130"},"Replace `⏎··············state={contract}⏎··············onChange={setContract}⏎··············options={options}⏎··············width={24}⏎···········` with `·state={contract}·onChange={setContract}·options={options}·width={24}`",{"range":"1131","text":"1132"},"Replace `⏎········Prismic.Predicates.at('document.type',·'farm_managers')⏎······` with `Prismic.Predicates.at('document.type',·'farm_managers')`",{"range":"1133","text":"1134"},"Replace `⏎············h='10%'⏎············src={require('../../../assets/images/ginger.png').default}⏎·········` with `·h='10%'·src={require('../../../assets/images/ginger.png').default}`",{"range":"1135","text":"1136"},"Replace `⏎··········direction='column'⏎··········align='center'⏎··········justify='space-between'⏎··········mt={{·md:·20·}}⏎········` with `·direction='column'·align='center'·justify='space-between'·mt={{·md:·20·}}`",{"range":"1137","text":"1138"},"Replace `⏎······················src={doc?.data?.manager_image.url}⏎······················size={8}⏎······················justify='space-around'⏎···················` with `·src={doc?.data?.manager_image.url}·size={8}·justify='space-around'`",{"range":"1139","text":"1140"},"Replace `⏎······················orientation='horizontal'⏎······················borderColor='gray.300'⏎······················w={60}⏎······················my={5}⏎···················` with `·orientation='horizontal'·borderColor='gray.300'·w={60}·my={5}`",{"range":"1141","text":"1142"},"Replace `⏎····························key={item.text}⏎····························fontSize='xs'⏎····························textColor='gray.400'⏎··························` with `·key={item.text}·fontSize='xs'·textColor='gray.400'`",{"range":"1143","text":"1144"},"Replace `⏎··Box,⏎··Grid,⏎··Heading,⏎··Divider,⏎··Text,⏎··GridItem,⏎··Icon,⏎··Flex⏎` with `·Box,·Grid,·Heading,·Divider,·Text,·GridItem,·Icon,·Flex·`",{"range":"1145","text":"1146"},"Delete `{'·'}⏎···········`",{"range":"1147","text":"916"},"Replace `⏎············borderWidth={1}⏎············borderColor='gray.300'⏎············rounded='md'⏎············overflow='hidden'⏎············padding={10}⏎··········` with `·borderWidth={1}·borderColor='gray.300'·rounded='md'·overflow='hidden'·padding={10}`",{"range":"1148","text":"1149"},"Replace `⏎··············soil·for·many·types·of·plants.·Planting·in·loam·soil·with·a·high⏎··············percentage·of·sand·is·the·same·as·planting·in·normal·loam·soil,⏎·············` with `·soil·for·many·types·of⏎··············plants.·Planting·in·loam·soil·with·a·high·percentage·of·sand·is·the·same·as·planting⏎··············in·normal·loam·soil,`",{"range":"1150","text":"1151"},"Replace `⏎······················intersection·&&·intersection.intersectionRatio·<·1⏎························?·0⏎·······················` with `·intersection·&&·intersection.intersectionRatio·<·1·?·0`",{"range":"1152","text":"1153"},"Replace `⏎······pos='absolute'⏎······borderLeftWidth={1}⏎······borderColor='gray.300'⏎······h={5}⏎······ml={4}⏎······top={10}⏎···` with `·pos='absolute'·borderLeftWidth={1}·borderColor='gray.300'·h={5}·ml={4}·top={10}`",{"range":"1154","text":"1155"},{"range":"1156","text":"992"},"Replace `⏎··········positionOptions={{·enableHighAccuracy:·true·}}⏎··········trackUserLocation⏎·······` with `·positionOptions={{·enableHighAccuracy:·true·}}·trackUserLocation`",{"range":"1157","text":"1158"},"Replace `⏎··Box,⏎··Divider,⏎··Flex,⏎··Heading,⏎··Icon,⏎··Image,⏎··Progress,⏎··Text⏎` with `·Box,·Divider,·Flex,·Heading,·Icon,·Image,·Progress,·Text·`",{"range":"1159","text":"1160"},"Delete `⏎··········`",{"range":"1161","text":"916"},"Replace `⏎············orientation='vertical'⏎············height={4}⏎············mx={4}⏎············borderColor='gray.400'⏎·········` with `·orientation='vertical'·height={4}·mx={4}·borderColor='gray.400'`",{"range":"1162","text":"1163"},{"range":"1164","text":"1163"},"Replace `⏎··············activeTab={activeTab}⏎··············key={label}⏎··············label={label}⏎··············onClick={handleClickTabItem}⏎···········` with `·activeTab={activeTab}·key={label}·label={label}·onClick={handleClickTabItem}`",{"range":"1165","text":"1166"},"Replace `⏎··········lineHeight='normal'⏎··········fontSize='sm'⏎··········dangerouslySetInnerHTML={{·__html:·text·}}⏎·······` with `·lineHeight='normal'·fontSize='sm'·dangerouslySetInnerHTML={{·__html:·text·}}`",{"range":"1167","text":"1168"},"Replace `⏎··Flex,⏎··Text,⏎··Image,⏎··Heading,⏎··Box,⏎··useDisclosure,⏎··Collapse,⏎··Icon⏎` with `·Flex,·Text,·Image,·Heading,·Box,·useDisclosure,·Collapse,·Icon·`",{"range":"1169","text":"1170"},"Replace `⏎··icon,⏎··title,⏎··theme,⏎··description,⏎··notice,⏎··percent,⏎··dropDown,⏎··onClick⏎` with `·icon,·title,·theme,·description,·notice,·percent,·dropDown,·onClick·`",{"range":"1171","text":"1172"},"Replace `⏎············align='center'⏎············as='button'⏎············onClick={onToggle}⏎············_focus={{·outline:·'none'·}}⏎··········` with `·align='center'·as='button'·onClick={onToggle}·_focus={{·outline:·'none'·}}`",{"range":"1173","text":"1174"},"Replace `⏎··············as={isOpen·?·ChevronUpIcon·:·ChevronDownIcon}⏎··············color='cf.400'⏎··············boxSize={6}⏎···········` with `·as={isOpen·?·ChevronUpIcon·:·ChevronDownIcon}·color='cf.400'·boxSize={6}`",{"range":"1175","text":"1176"},"Delete `⏎···`",{"range":"1177","text":"916"},"Replace `⏎········pos='absolute'⏎········top={-1}⏎········left={3}⏎········fontSize='xs'⏎········color='gray.600'⏎······` with `·pos='absolute'·top={-1}·left={3}·fontSize='xs'·color='gray.600'`",{"range":"1178","text":"1179"},"Replace `⏎······d='inline-block'⏎······mr={4}⏎······w='100%'⏎······boxSizing='border-box'⏎······key={file.name}⏎······pos='relative'⏎····` with `·d='inline-block'·mr={4}·w='100%'·boxSizing='border-box'·key={file.name}·pos='relative'`",{"range":"1180","text":"1181"},"Replace `⏎············as='tag'⏎············color='cf.400'⏎············fontSize='10px'⏎············bg='cf.200'⏎············borderRadius='none'⏎··········` with `·as='tag'·color='cf.400'·fontSize='10px'·bg='cf.200'·borderRadius='none'`",{"range":"1182","text":"1183"},"Replace `⏎········borderBottomWidth={1}⏎········borderColor='gray.200'⏎········w={{·md:·'90%'·}}⏎········mx='auto'⏎·····` with `·borderBottomWidth={1}·borderColor='gray.200'·w={{·md:·'90%'·}}·mx='auto'`",{"range":"1184","text":"1185"},"Replace `⏎····as='table'⏎····p='40px'⏎····mt='4'⏎····bg='cf.300'⏎····rounded='md'⏎····shadow='md'⏎····fontSize='sm'⏎··` with `·as='table'·p='40px'·mt='4'·bg='cf.300'·rounded='md'·shadow='md'·fontSize='sm'`",{"range":"1186","text":"1187"},"Replace `⏎········as='td'⏎········align='center'⏎········justify='space-between'⏎········w={{·md:·80·}}⏎········p={{·md:·4·}}⏎······` with `·as='td'·align='center'·justify='space-between'·w={{·md:·80·}}·p={{·md:·4·}}`",{"range":"1188","text":"1189"},{"range":"1190","text":"1189"},{"range":"1191","text":"1189"},{"range":"1192","text":"1189"},{"range":"1193","text":"1189"},"Replace `⏎········fontSize={{·md:·'xs'·}}⏎········pos='absolute'⏎········left={{·md:·4·}}⏎········top={3}⏎········color='gray.600'⏎······` with `·fontSize={{·md:·'xs'·}}·pos='absolute'·left={{·md:·4·}}·top={3}·color='gray.600'`",{"range":"1194","text":"1195"},"Replace `(⏎······<FormErrorMessage·fontSize='xs'>{error}</FormErrorMessage>⏎····)` with `<FormErrorMessage·fontSize='xs'>{error}</FormErrorMessage>`",{"range":"1196","text":"1197"},"Replace `⏎····mr={mr}⏎····pos='relative'⏎····pt={2}⏎····isRequired={isRequired}⏎····isInvalid={error·&&·touched}⏎··` with `·mr={mr}·pos='relative'·pt={2}·isRequired={isRequired}·isInvalid={error·&&·touched}`",{"range":"1198","text":"1199"},"Replace `⏎········fontSize={{·md:·'xs'·}}⏎········pos='absolute'⏎········left={{·md:·4·}}⏎········top={2}⏎········color='gray.600'⏎······` with `·fontSize={{·md:·'xs'·}}·pos='absolute'·left={{·md:·4·}}·top={2}·color='gray.600'`",{"range":"1200","text":"1201"},{"range":"1202","text":"1197"},"Replace `⏎····bg='cf.300'⏎····pos='relative'⏎····pt={2}⏎····borderBottomWidth={1}⏎····borderBottomColor='cf.400'⏎··` with `·bg='cf.300'·pos='relative'·pt={2}·borderBottomWidth={1}·borderBottomColor='cf.400'`",{"range":"1203","text":"1204"},[91,93],"","no-global-assign","no-unsafe-negation",[831,915],"Here’s a cofirmation of your payment and a receipt for your farm",[829,913],[224,304]," isOpen, onClose, title, size, isCentered, image, alt, children ",[333,432]," isOpen={isOpen} onClose={onClose} size={size} isCentered={isCentered}",[264,333]," history: { replace }, match: { params }, location: { search } ",[675,814]," align='center' justify='center' h={70} w='100%' bg='gray.100' mt={20}",[1809,1880],"Prismic.Predicates.at('document.type', 'announcements')",{"desc":"1205","fix":"1206"},[2086,2148],"Prismic.Predicates.at('document.type', 'news')",{"desc":"1205","fix":"1207"},[2454,2560]," templateColumns={{ md: 'repeat(3, 1fr)' }} gap={{ md: 1 }} mt={10}",[1212,1327]," src={IllustrationImage} h={{ md: 115 }} w='100%' objectFit='cover'",[869,984],[812,909]," h='100%' src={require('../../assets/images/logo.png').default}",[812,909],[1854,1972]," as={Box} _focus={{ outline: 'none' }} cursor='pointer'",[2201,2346]," ml={2} as={open ? FiChevronUp : FiChevronDown} boxSize={6}",[514,627]," align='center' borderBottomWidth={1} borderBottomColor='gray.200'",[258,332]," image, name, address, amtLeft, amtBought, amtNeeded, price ",[876,990]," amtLeft={amtLeft} name={name} amtBought={amtBought} price={price}",[1370,1480]," value={60} rounded='lg' colorScheme='cfButton' size='lg' mt={2}",[214,298]," name, location, image, weight, bags, quantity, condition, mr, ml ",[805,919]," colorScheme='linear' rounded='30px' ml={2} mt={4} onClick={onOpen}",[1333,1447],"Are you sure you want to delete the bank&lsquo;s transfer receipt?",[2558,2806]," w='130px' mt={4} as='button' bgColor='cf.200' p={2} rounded='30px'",[4326,4420],"Confirmation takes 1-2 weeks for us to get back to you",[4544,4562],[4666,4800]," src={corporate} w={{ md: '180px' }} h={{ md: '110px' }}",[236,341],[632,642],[350,455],[556,566],[586,695],"Start a farm as an individual or a cooperative and earn long term rewards",[683,797]," w={60} mt={mt} as='button' borderWidth={1} rounded='md' onClick={onOpen}",[896,1050]," textAlign='center' w={60} py={1} fontWeight={900} fontFamily='heading' fontSize='lg'",[1758,1901]," as={arrowDown} bg='white' rounded='lg' color='cf.400' pl='1'",[308,417]," textAlign='center' align='center' justify='center' direction='column'",[452,539],"<Loader type='Oval' color='#417505' height={40} width={40} />",[175,243]," farm, home, wallet, market, Guide, Resources, logout ",[2803,2931]," as={toggleMenus ? BsChevronUp : BsChevronDown} boxSize={4} mr={1}",[8,87]," Avatar, Box, Divider, Flex, Grid, Heading, Image, Tag, Text ",[693,829]," bg='cf.200' color='cf.400' rounded='3xl' fontSize='sm' px={4} textAlign='center'",[83,151]," Modal, ModalOverlay, ModalContent, Box, ModalCloseButton ",[697,815]," title='nothing' src={link + '#toolbar=0'} width='100%' height='500px'",[493,619]," align='center' justify='center' direction='column' p={10} w='100%'",[1151,1331]," key={farm.name} direction='column' align='center' justify='center' m={4}",[324,383]," AiFillTwitterCircle, AiFillFacebook, AiFillLinkedin ",[539,607]," TwitterShareButton, LinkedinShareButton, FacebookShareButton ",[3120,3286]," pr={25} pl={25} direction='column' align='center' w='100%'",[3498,3696]," src={headingImage} alt={headingImageAlt} boxSize={5} mr={5}",[5925,6084]," direction='row' align='center' justify='flex-start' pl={10}",[6432,6571]," boxSize={8} as={RiShareForwardLine} onClick={onOpen}",[7124,7293]," as='h4' fontWeight='bold' fontSize={{ md: 'xl' }}",[7514,7638]," orientation='horizontal' borderColor='gray.400'",[603,658],"'categories', getCropCategories, reload",[1122,1247]," align='center' justify='center' bg='gray.100' w='100%' h={20} mt={20}",[1873,2016]," align='center' justify='space-between' w={{ md: 143 }} mx='auto' mt={{ md: 12 }} mb={4}",[2136,2286]," align='center' rounded='30px' px={4} py={1} borderWidth={1} borderColor='cf.400'",[2304,2444]," h={4} src={require('../../../assets/images/startfarm/insurance.png').default}",[8,87]," Box, Flex, Heading, Icon, Image, Link, List, ListItem, Text ",[384,469]," image, title, subtitle, extra, options, btntitle, path, state, mr ",[1309,1427]," as={ReachRouter} to={{ pathname: path, state }} _hover={{ textDecor: 'none' }}",[440,510],"values, { setSubmitting, setErrors, setStatus, resetForm }",[1934,2020],"Turn notification on to receive notification in your dashboard",[2219,2350]," values, handleBlur, handleChange, handleSubmit, isSubmitting",[843,913],[2236,2336]," enableReinitialize initialValues={initialValues} onSubmit={onSubmit}",[2349,2486]," values, handleChange, handleBlur, isSubmitting, handleSubmit, errors",[4533,4689]," templateColumns='repeat(2, 1fr)' w={{ md: '100%' }} gap={6} mb={6}",[7695,7851],[8357,8514]," label='Country' value={values.address.country} isRequired bg='white'",[8800,8931]," templateColumns='repeat(2, 1fr)' w={{ md: '100%' }} gap={6}",[9444,9609]," templateColumns='repeat(2, 1fr)' w={{ md: '100%' }} gap={6} py={{ md: 10 }}",[1803,1933]," as='h5' fontSize={{ md: '2xl' }} fontFamily='display' mb={2}",[8,86]," Box, Heading, Flex, Text, Button, Divider, Container, Switch ",[1269,1359],[1617,1777]," as='h5' fontFamily='display' fontSize={{ md: '2xl' }} mb={2}",[1959,2119],[2287,2447],[3335,3495],[3823,3955]," size='lg' colorScheme='cfButton' borderColor='black'",[4068,4200],[4314,4446],[4561,4693],[2553,2687]," fontSize={{ md: 'sm' }} pl={2} fontWeight='thin' color='red.600'",[2758,2772],[3554,3650],"<Notification amtBought={amtBought} name={name} />",[69,137]," Box, Flex, Text, Icon, FormLabel, FormControl, Input ",[163,286],"<polygon preserveAspectRatio='none' fill='currentColor' points='50,0 100,0 50,100 0,100' />",[6693,6793]," type='matrix' values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0'",[6815,6928]," mode='normal' in2='BackgroundImageFix' result='effect1_dropShadow'",[6950,7081]," mode='normal' in='SourceGraphic' in2='effect1_dropShadow' result='shape'",[23903,24005]," fill='currentColor' d='M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z'",[28496,28617],"<path fill='none' stroke='currentColor' strokeWidth={2} d='M6 18L18 6M6 6l12 12' />",[37039,37158]," fillRule='evenodd' clipRule='evenodd' d='M0 0H24V26H0V0Z' fill='white'",[511,623]," templateColumns={{ md: '45% 55%' }} borderWidth={1} borderColor='gray.300' h={121}",[48,119]," Box, Flex, Image, Heading, Icon, Text, Grid, GridItem ",[834,935]," w={108} src={require('../../../assets/images/invite.png').default}",[969,1089]," align='center' justify='space-between' mt={{ md: 20 }} px={{ md: 10 }}",[2464,2588]," bg='white' label='Farm name' placeholder='For eg: Ashesi2020'",[3076,3188]," bg='white' placeholder='Add people (Max of 5 and min of 2)'",[3280,3405]," pos='relative' src={require('../../../assets/images/Oval.png').default}",[3437,3585]," pos='absolute' top={-2} boxSize='1em' bg='cf.600'",[1003,1164]," carefully for your\n            Complete Farmer (“The Company”) to complete yourcrowd farming subscription. This\n            Agreement should be read",[1301,1841]," theCompany, and is\n            effective upon signature or your acceptance. Use of Farm Management Service FeeThe\n            Company shall use the Farm Management Service Fee to take allnecessary steps to plant\n            and harvest your choses produce on your chosenacreage, as described on the Company’s\n            website. Complete Farmer thecultivation protocols shall remain the intellectual property\n            of the Companyand the Company shall have no obligation to share it with you or anyother",[1853,2859]," third party. The Company reserves the right to choose, assign, evaluate, and manageall\n            third parties who work with us as business partners or otherwise toprovide the Farm\n            Management Service to you.Crowd Farmers will be provided with weekly updates of crop,\n            weather andsoil conditions on the farm, and are welcome to schedule farm visits usingthe\n            Complete Farmer application. Independent Quality Assurance AuditorThe Company will\n            submit audit reports by their independent qualityassurance auditor upon request of the\n            Crowd Farmer which shall assessthe farm processes, seed and yield of harvest, should any\n            conflict ariseconcerning the above between the Crowd Farmer and the Company.\n            InsuranceThe Company strongly recommends that Crowd Farmers accept thestandard insurance\n            package offered with the Farm Management Service. Ifyou do not want to use the insurance",[2871,3098]," package provided, please notify theCompany.Term and TerminationThis Agreement shall\n            commence on today’s date and shall remain ineffect until the end of after the harvested\n            produce have been sold.The",[3232,3398]," Farmer's policiesset out\n            in this Agreement, the Terms & Conditions, the Privacy Policy, orany other policy\n            documents or community",[3528,4321]," SignaturesEach party agrees that\n            the electronic signatures, whether digital orencrypted, of the Parties included in this\n            Agreement are intended toauthenticate this writing and to have the same force and effect\n            as manualsignatures in so far as the signatures are executed in accordance withsection\n            10 of the Electronic Transactions Act, 2008 (Act 772) of theRepublic of Ghana. Delivery\n            of a copy of this Agreement or any otherdocument contemplated hereby bearing an original\n            or electronic signatureby facsimile transmission, by electronic mail in “portable\n            documentformat” (“.pdf”) form, or by any other electronic means intended topreserve the\n            original graphic",[4463,4463]," electronic",[4476,4712],"signature.General TermsThe terms of this Agreement are Confidential and will survive\n            thetermination of this Agreement.A.No term of this Agreement shall be enforceable by a\n            third party whois",[4856,5100]," this Agreement. B.If\n            any provision of this Agreement or the application thereof is heldinvalid or\n            unenforceable, the invalidity or unenforceability thereofshall not affect any other\n            provisions or",[5247,5562]," provisionsof this\n            Agreement are to be severable.C.The Parties shall use their best endeavors to reach an\n            amicablesettlement of any dispute by mutual discussion between thedesignated\n            representatives of the Parties.D.This Agreement shall be governed in accordance with the",[5574,5889]," laws ofthe Republic of Ghana. E.Each Party warrants to the other Party that it has the\n            right, powerand authority to enter into this Agreement and carry out itsobligations\n            under this Agreement.By clicking the \"Accept\" button, downloading or using the\n            Application,",[6034,6034]," click on",[6046,6117]," the\"Accept\" button and do not download or use the",[6196,6333]," state={contract} onChange={setContract} options={options} width={24}",[883,954],"Prismic.Predicates.at('document.type', 'farm_managers')",[1239,1340]," h='10%' src={require('../../../assets/images/ginger.png').default}",[1372,1495]," direction='column' align='center' justify='space-between' mt={{ md: 20 }}",[3135,3288]," src={doc?.data?.manager_image.url} size={8} justify='space-around'",[3566,3736]," orientation='horizontal' borderColor='gray.300' w={60} my={5}",[3955,4117]," key={item.text} fontSize='xs' textColor='gray.400'",[34,107]," Box, Grid, Heading, Divider, Text, GridItem, Icon, Flex ",[1119,1136],[1230,1384]," borderWidth={1} borderColor='gray.300' rounded='md' overflow='hidden' padding={10}",[1827,1998]," soil for many types of\n              plants. Planting in loam soil with a high percentage of sand is the same as planting\n              in normal loam soil,",[2677,2802]," intersection && intersection.intersectionRatio < 1 ? 0",[695,815]," pos='absolute' borderLeftWidth={1} borderColor='gray.300' h={5} ml={4} top={10}",[857,993],[891,984]," positionOptions={{ enableHighAccuracy: true }} trackUserLocation",[69,143]," Box, Divider, Flex, Heading, Icon, Image, Progress, Text ",[512,523],[2094,2216]," orientation='vertical' height={4} mx={4} borderColor='gray.400'",[2293,2415],[750,895]," activeTab={activeTab} key={label} label={label} onClick={handleClickTabItem}",[464,579]," lineHeight='normal' fontSize='sm' dangerouslySetInnerHTML={{ __html: text }}",[69,149]," Flex, Text, Image, Heading, Box, useDisclosure, Collapse, Icon ",[302,387]," icon, title, theme, description, notice, percent, dropDown, onClick ",[1541,1675]," align='center' as='button' onClick={onToggle} _focus={{ outline: 'none' }}",[1815,1942]," as={isOpen ? ChevronUpIcon : ChevronDownIcon} color='cf.400' boxSize={6}",[412,416],[1312,1423]," pos='absolute' top={-1} left={3} fontSize='xs' color='gray.600'",[966,1094]," d='inline-block' mr={4} w='100%' boxSizing='border-box' key={file.name} pos='relative'",[677,820]," as='tag' color='cf.400' fontSize='10px' bg='cf.200' borderRadius='none'",[981,1092]," borderBottomWidth={1} borderColor='gray.200' w={{ md: '90%' }} mx='auto'",[112,221]," as='table' p='40px' mt='4' bg='cf.300' rounded='md' shadow='md' fontSize='sm'",[252,375]," as='td' align='center' justify='space-between' w={{ md: 80 }} p={{ md: 4 }}",[667,790],[1080,1203],[1502,1625],[1916,2039],[556,684]," fontSize={{ md: 'xs' }} pos='absolute' left={{ md: 4 }} top={3} color='gray.600'",[1462,1534],"<FormErrorMessage fontSize='xs'>{error}</FormErrorMessage>",[389,495]," mr={mr} pos='relative' pt={2} isRequired={isRequired} isInvalid={error && touched}",[671,799]," fontSize={{ md: 'xs' }} pos='absolute' left={{ md: 4 }} top={2} color='gray.600'",[1860,1932],[343,449]," bg='cf.300' pos='relative' pt={2} borderBottomWidth={1} borderBottomColor='cf.400'","Update the dependencies array to be: [Client]",{"range":"1208","text":"1209"},{"range":"1210","text":"1209"},[1988,1990],"[Client]",[2243,2245]]
>>>>>>> aca2391908f75b983c414ccbf4a44bea1c636eac
